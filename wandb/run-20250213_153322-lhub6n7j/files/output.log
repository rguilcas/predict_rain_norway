LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name    | Type             | Params | Mode
-----------------------------------------------------
0 | model   | Wang2024         | 7.4 M  | train
1 | loss_fn | CrossEntropyLoss | 0      | train
-----------------------------------------------------
7.4 M     Trainable params
0         Non-trainable params
7.4 M     Total params
29.532    Total estimated model params size (MB)
9         Modules in train mode
0         Modules in eval mode
Sanity Checking DataLoader 0:   0%|                                                                                    | 0/2 [00:00<?, ?it/s][0;31m---------------------------------------------------------------------------[0m
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
[0;31mRuntimeError[0m                              Traceback (most recent call last)
File [0;32m/shared_netapp3_home/home/rogui7909/code/predict_rain_norway/rain_lighting.py:221[0m
[1;32m    215[0m model [38;5;241m=[39m LitCNN(CNN, type_prediction[38;5;241m=[39m[38;5;124m'[39m[38;5;124mquantiles[39m[38;5;124m'[39m)
[1;32m    220[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mModel init[39m[38;5;124m'[39m)
[0;32m--> 221[0m [43mtrainer[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mmodel[49m[43m,[49m[43m [49m[43mtrain_loader[49m[43m,[49m[43m [49m[43mvalid_loader[49m[43m)[49m
[1;32m    224[0m model[38;5;241m.[39meval()
[1;32m    225[0m [38;5;28;01mwith[39;00m torch[38;5;241m.[39mno_grad():

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/trainer.py:539[0m, in [0;36mTrainer.fit[0;34m(self, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path)[0m
[1;32m    537[0m [38;5;28mself[39m[38;5;241m.[39mstate[38;5;241m.[39mstatus [38;5;241m=[39m TrainerStatus[38;5;241m.[39mRUNNING
[1;32m    538[0m [38;5;28mself[39m[38;5;241m.[39mtraining [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 539[0m [43mcall[49m[38;5;241;43m.[39;49m[43m_call_and_handle_interrupt[49m[43m([49m
[1;32m    540[0m [43m    [49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fit_impl[49m[43m,[49m[43m [49m[43mmodel[49m[43m,[49m[43m [49m[43mtrain_dataloaders[49m[43m,[49m[43m [49m[43mval_dataloaders[49m[43m,[49m[43m [49m[43mdatamodule[49m[43m,[49m[43m [49m[43mckpt_path[49m
[1;32m    541[0m [43m[49m[43m)[49m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/call.py:47[0m, in [0;36m_call_and_handle_interrupt[0;34m(trainer, trainer_fn, *args, **kwargs)[0m
[1;32m     45[0m     [38;5;28;01mif[39;00m trainer[38;5;241m.[39mstrategy[38;5;241m.[39mlauncher [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     46[0m         [38;5;28;01mreturn[39;00m trainer[38;5;241m.[39mstrategy[38;5;241m.[39mlauncher[38;5;241m.[39mlaunch(trainer_fn, [38;5;241m*[39margs, trainer[38;5;241m=[39mtrainer, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m---> 47[0m     [38;5;28;01mreturn[39;00m [43mtrainer_fn[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     49[0m [38;5;28;01mexcept[39;00m _TunerExitException:
[1;32m     50[0m     _call_teardown_hook(trainer)

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/trainer.py:575[0m, in [0;36mTrainer._fit_impl[0;34m(self, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path)[0m
[1;32m    568[0m [38;5;28;01massert[39;00m [38;5;28mself[39m[38;5;241m.[39mstate[38;5;241m.[39mfn [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m
[1;32m    569[0m ckpt_path [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_checkpoint_connector[38;5;241m.[39m_select_ckpt_path(
[1;32m    570[0m     [38;5;28mself[39m[38;5;241m.[39mstate[38;5;241m.[39mfn,
[1;32m    571[0m     ckpt_path,
[1;32m    572[0m     model_provided[38;5;241m=[39m[38;5;28;01mTrue[39;00m,
[1;32m    573[0m     model_connected[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mlightning_module [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m,
[1;32m    574[0m )
[0;32m--> 575[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_run[49m[43m([49m[43mmodel[49m[43m,[49m[43m [49m[43mckpt_path[49m[38;5;241;43m=[39;49m[43mckpt_path[49m[43m)[49m
[1;32m    577[0m [38;5;28;01massert[39;00m [38;5;28mself[39m[38;5;241m.[39mstate[38;5;241m.[39mstopped
[1;32m    578[0m [38;5;28mself[39m[38;5;241m.[39mtraining [38;5;241m=[39m [38;5;28;01mFalse[39;00m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/trainer.py:982[0m, in [0;36mTrainer._run[0;34m(self, model, ckpt_path)[0m
[1;32m    977[0m [38;5;28mself[39m[38;5;241m.[39m_signal_connector[38;5;241m.[39mregister_signal_handlers()
[1;32m    979[0m [38;5;66;03m# ----------------------------[39;00m
[1;32m    980[0m [38;5;66;03m# RUN THE TRAINER[39;00m
[1;32m    981[0m [38;5;66;03m# ----------------------------[39;00m
[0;32m--> 982[0m results [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_run_stage[49m[43m([49m[43m)[49m
[1;32m    984[0m [38;5;66;03m# ----------------------------[39;00m
[1;32m    985[0m [38;5;66;03m# POST-Training CLEAN UP[39;00m
[1;32m    986[0m [38;5;66;03m# ----------------------------[39;00m
[1;32m    987[0m log[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m: trainer tearing down[39m[38;5;124m"[39m)

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/trainer.py:1024[0m, in [0;36mTrainer._run_stage[0;34m(self)[0m
[1;32m   1022[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mtraining:
[1;32m   1023[0m     [38;5;28;01mwith[39;00m isolate_rng():
[0;32m-> 1024[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_run_sanity_check[49m[43m([49m[43m)[49m
[1;32m   1025[0m     [38;5;28;01mwith[39;00m torch[38;5;241m.[39mautograd[38;5;241m.[39mset_detect_anomaly([38;5;28mself[39m[38;5;241m.[39m_detect_anomaly):
[1;32m   1026[0m         [38;5;28mself[39m[38;5;241m.[39mfit_loop[38;5;241m.[39mrun()

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/trainer.py:1053[0m, in [0;36mTrainer._run_sanity_check[0;34m(self)[0m
[1;32m   1050[0m call[38;5;241m.[39m_call_callback_hooks([38;5;28mself[39m, [38;5;124m"[39m[38;5;124mon_sanity_check_start[39m[38;5;124m"[39m)
[1;32m   1052[0m [38;5;66;03m# run eval step[39;00m
[0;32m-> 1053[0m [43mval_loop[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43m)[49m
[1;32m   1055[0m call[38;5;241m.[39m_call_callback_hooks([38;5;28mself[39m, [38;5;124m"[39m[38;5;124mon_sanity_check_end[39m[38;5;124m"[39m)
[1;32m   1057[0m [38;5;66;03m# reset logger connector[39;00m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/loops/utilities.py:179[0m, in [0;36m_no_grad_context.<locals>._decorator[0;34m(self, *args, **kwargs)[0m
[1;32m    177[0m     context_manager [38;5;241m=[39m torch[38;5;241m.[39mno_grad
[1;32m    178[0m [38;5;28;01mwith[39;00m context_manager():
[0;32m--> 179[0m     [38;5;28;01mreturn[39;00m [43mloop_run[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/loops/evaluation_loop.py:144[0m, in [0;36m_EvaluationLoop.run[0;34m(self)[0m
[1;32m    142[0m     [38;5;28mself[39m[38;5;241m.[39mbatch_progress[38;5;241m.[39mis_last_batch [38;5;241m=[39m data_fetcher[38;5;241m.[39mdone
[1;32m    143[0m     [38;5;66;03m# run step hooks[39;00m
[0;32m--> 144[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_evaluation_step[49m[43m([49m[43mbatch[49m[43m,[49m[43m [49m[43mbatch_idx[49m[43m,[49m[43m [49m[43mdataloader_idx[49m[43m,[49m[43m [49m[43mdataloader_iter[49m[43m)[49m
[1;32m    145[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[1;32m    146[0m     [38;5;66;03m# this needs to wrap the `*_step` call too (not just `next`) for `dataloader_iter` support[39;00m
[1;32m    147[0m     [38;5;28;01mbreak[39;00m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/loops/evaluation_loop.py:433[0m, in [0;36m_EvaluationLoop._evaluation_step[0;34m(self, batch, batch_idx, dataloader_idx, dataloader_iter)[0m
[1;32m    427[0m hook_name [38;5;241m=[39m [38;5;124m"[39m[38;5;124mtest_step[39m[38;5;124m"[39m [38;5;28;01mif[39;00m trainer[38;5;241m.[39mtesting [38;5;28;01melse[39;00m [38;5;124m"[39m[38;5;124mvalidation_step[39m[38;5;124m"[39m
[1;32m    428[0m step_args [38;5;241m=[39m (
[1;32m    429[0m     [38;5;28mself[39m[38;5;241m.[39m_build_step_args_from_hook_kwargs(hook_kwargs, hook_name)
[1;32m    430[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m using_dataloader_iter
[1;32m    431[0m     [38;5;28;01melse[39;00m (dataloader_iter,)
[1;32m    432[0m )
[0;32m--> 433[0m output [38;5;241m=[39m [43mcall[49m[38;5;241;43m.[39;49m[43m_call_strategy_hook[49m[43m([49m[43mtrainer[49m[43m,[49m[43m [49m[43mhook_name[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43mstep_args[49m[43m)[49m
[1;32m    435[0m [38;5;28mself[39m[38;5;241m.[39mbatch_progress[38;5;241m.[39mincrement_processed()
[1;32m    437[0m [38;5;28;01mif[39;00m using_dataloader_iter:
[1;32m    438[0m     [38;5;66;03m# update the hook kwargs now that the step method might have consumed the iterator[39;00m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/call.py:323[0m, in [0;36m_call_strategy_hook[0;34m(trainer, hook_name, *args, **kwargs)[0m
[1;32m    320[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mNone[39;00m
[1;32m    322[0m [38;5;28;01mwith[39;00m trainer[38;5;241m.[39mprofiler[38;5;241m.[39mprofile([38;5;124mf[39m[38;5;124m"[39m[38;5;124m[Strategy][39m[38;5;132;01m{[39;00mtrainer[38;5;241m.[39mstrategy[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;132;01m{[39;00mhook_name[38;5;132;01m}[39;00m[38;5;124m"[39m):
[0;32m--> 323[0m     output [38;5;241m=[39m [43mfn[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    325[0m [38;5;66;03m# restore current_fx when nested context[39;00m
[1;32m    326[0m pl_module[38;5;241m.[39m_current_fx_name [38;5;241m=[39m prev_fx_name

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/strategies/strategy.py:412[0m, in [0;36mStrategy.validation_step[0;34m(self, *args, **kwargs)[0m
[1;32m    410[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmodel [38;5;241m!=[39m [38;5;28mself[39m[38;5;241m.[39mlightning_module:
[1;32m    411[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_redirection([38;5;28mself[39m[38;5;241m.[39mmodel, [38;5;28mself[39m[38;5;241m.[39mlightning_module, [38;5;124m"[39m[38;5;124mvalidation_step[39m[38;5;124m"[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m--> 412[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlightning_module[49m[38;5;241;43m.[39;49m[43mvalidation_step[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/shared_netapp3_home/home/rogui7909/code/predict_rain_norway/rain_lighting.py:176[0m, in [0;36mvalidation_step[0;34m(self, batch, batch_idx)[0m
[1;32m    174[0m def validation_step(self, batch, batch_idx):
[1;32m    175[0m     x, y = batch
[0;32m--> 176[0m     # x = x.view(x.size(0), -1)
[1;32m    177[0m     pred = self.model(x)
[1;32m    178[0m     loss = self.loss_fn(pred, y)

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/torch/nn/modules/module.py:1736[0m, in [0;36mModule._wrapped_call_impl[0;34m(self, *args, **kwargs)[0m
[1;32m   1734[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_compiled_call_impl([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)  [38;5;66;03m# type: ignore[misc][39;00m
[1;32m   1735[0m [38;5;28;01melse[39;00m:
[0;32m-> 1736[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_impl[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/torch/nn/modules/module.py:1747[0m, in [0;36mModule._call_impl[0;34m(self, *args, **kwargs)[0m
[1;32m   1742[0m [38;5;66;03m# If we don't have any hooks, we want to skip the rest of the logic in[39;00m
[1;32m   1743[0m [38;5;66;03m# this function, and just call forward.[39;00m
[1;32m   1744[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;28mself[39m[38;5;241m.[39m_backward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_backward_pre_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_hooks [38;5;129;01mor[39;00m [38;5;28mself[39m[38;5;241m.[39m_forward_pre_hooks
[1;32m   1745[0m         [38;5;129;01mor[39;00m _global_backward_pre_hooks [38;5;129;01mor[39;00m _global_backward_hooks
[1;32m   1746[0m         [38;5;129;01mor[39;00m _global_forward_hooks [38;5;129;01mor[39;00m _global_forward_pre_hooks):
[0;32m-> 1747[0m     [38;5;28;01mreturn[39;00m [43mforward_call[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1749[0m result [38;5;241m=[39m [38;5;28;01mNone[39;00m
[1;32m   1750[0m called_always_called_hooks [38;5;241m=[39m [38;5;28mset[39m()

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/torch/nn/modules/loss.py:1293[0m, in [0;36mCrossEntropyLoss.forward[0;34m(self, input, target)[0m
[1;32m   1292[0m [38;5;28;01mdef[39;00m [38;5;21mforward[39m([38;5;28mself[39m, [38;5;28minput[39m: Tensor, target: Tensor) [38;5;241m-[39m[38;5;241m>[39m Tensor:
[0;32m-> 1293[0m     [38;5;28;01mreturn[39;00m [43mF[49m[38;5;241;43m.[39;49m[43mcross_entropy[49m[43m([49m
[1;32m   1294[0m [43m        [49m[38;5;28;43minput[39;49m[43m,[49m
[1;32m   1295[0m [43m        [49m[43mtarget[49m[43m,[49m
[1;32m   1296[0m [43m        [49m[43mweight[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mweight[49m[43m,[49m
[1;32m   1297[0m [43m        [49m[43mignore_index[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mignore_index[49m[43m,[49m
[1;32m   1298[0m [43m        [49m[43mreduction[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mreduction[49m[43m,[49m
[1;32m   1299[0m [43m        [49m[43mlabel_smoothing[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mlabel_smoothing[49m[43m,[49m
[1;32m   1300[0m [43m    [49m[43m)[49m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/torch/nn/functional.py:3479[0m, in [0;36mcross_entropy[0;34m(input, target, weight, size_average, ignore_index, reduce, reduction, label_smoothing)[0m
[1;32m   3477[0m [38;5;28;01mif[39;00m size_average [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m reduce [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   3478[0m     reduction [38;5;241m=[39m _Reduction[38;5;241m.[39mlegacy_get_string(size_average, reduce)
[0;32m-> 3479[0m [38;5;28;01mreturn[39;00m [43mtorch[49m[38;5;241;43m.[39;49m[43m_C[49m[38;5;241;43m.[39;49m[43m_nn[49m[38;5;241;43m.[39;49m[43mcross_entropy_loss[49m[43m([49m
[1;32m   3480[0m [43m    [49m[38;5;28;43minput[39;49m[43m,[49m
[1;32m   3481[0m [43m    [49m[43mtarget[49m[43m,[49m
[1;32m   3482[0m [43m    [49m[43mweight[49m[43m,[49m
[1;32m   3483[0m [43m    [49m[43m_Reduction[49m[38;5;241;43m.[39;49m[43mget_enum[49m[43m([49m[43mreduction[49m[43m)[49m[43m,[49m
[1;32m   3484[0m [43m    [49m[43mignore_index[49m[43m,[49m
[1;32m   3485[0m [43m    [49m[43mlabel_smoothing[49m[43m,[49m
[1;32m   3486[0m [43m[49m[43m)[49m

[0;31mRuntimeError[0m: "nll_loss_forward_reduce_cuda_kernel_2d_index" not implemented for 'Float'

tensor([ 1.7750,  3.1762,  1.8375,  ...,  0.6954, 20.0781, 16.7039])

loading data ...
[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/file_manager.py:211[0m, in [0;36mCachingFileManager._acquire_with_cache_info[0;34m(self, needs_lock)[0m
[1;32m    210[0m [38;5;28;01mtry[39;00m:
[0;32m--> 211[0m     file [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_cache[49m[43m[[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_key[49m[43m][49m
[1;32m    212[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m:

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/lru_cache.py:56[0m, in [0;36mLRUCache.__getitem__[0;34m(self, key)[0m
[1;32m     55[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39m_lock:
[0;32m---> 56[0m     value [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_cache[49m[43m[[49m[43mkey[49m[43m][49m
[1;32m     57[0m     [38;5;28mself[39m[38;5;241m.[39m_cache[38;5;241m.[39mmove_to_end(key)

[0;31mKeyError[0m: [<class 'netCDF4._netCDF4.Dataset'>, ('/Data/gfi/users/rogui7909/data/ERA5/era5_in_data.nc',), 'r', (('clobber', True), ('diskless', False), ('format', 'NETCDF4'), ('persist', False)), 'b2122fca-a947-4802-980d-46901763e205']

During handling of the above exception, another exception occurred:

[0;31mOSError[0m                                   Traceback (most recent call last)
File [0;32m/shared_netapp3_home/home/rogui7909/code/predict_rain_norway/rain_lighting.py:98[0m
[1;32m     81[0m [38;5;28mprint[39m([38;5;124m'[39m[38;5;124mloading data ...[39m[38;5;124m'[39m)
[1;32m     83[0m [38;5;66;03m# all_data_in = [][39;00m
[1;32m     84[0m [38;5;66;03m# for variable in config['input_variable']:[39;00m
[1;32m     85[0m [38;5;66;03m#     with xr.open_dataset(f'/Data/gfi/users/rogui7909/data/ERA5/{variable}.nc') as ds:[39;00m
[0;32m   (...)[0m
[1;32m     95[0m [38;5;66;03m# data_in = data_in.transpose(1,0,2,3)[39;00m
[1;32m     96[0m [38;5;66;03m# print('Input data ready')[39;00m
[0;32m---> 98[0m ds_in [38;5;241m=[39m [43mxr[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43m/Data/gfi/users/rogui7909/data/ERA5/era5_in_data.nc[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mchunks[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[38;5;28;43mdict[39;49m[43m([49m[43mvar_name[49m[38;5;241;43m=[39;49m[38;5;241;43m1[39;49m[43m)[49m[43m)[49m
[1;32m     99[0m tensor_in [38;5;241m=[39m torch[38;5;241m.[39mTensor(ds_in[38;5;241m.[39msel(var_name[38;5;241m=[39minput_variable)[38;5;241m.[39mvalues)[38;5;241m.[39mtype(torch[38;5;241m.[39mfloat32)
[1;32m    100[0m [38;5;66;03m# tensor_in = torch.load("/Data/gfi/users/rogui7909/data/ERA5/tensor_era5_in.pt", weights_only=True)[39;00m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/api.py:670[0m, in [0;36mopen_dataset[0;34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)[0m
[1;32m    658[0m decoders [38;5;241m=[39m _resolve_decoders_kwargs(
[1;32m    659[0m     decode_cf,
[1;32m    660[0m     open_backend_dataset_parameters[38;5;241m=[39mbackend[38;5;241m.[39mopen_dataset_parameters,
[0;32m   (...)[0m
[1;32m    666[0m     decode_coords[38;5;241m=[39mdecode_coords,
[1;32m    667[0m )
[1;32m    669[0m overwrite_encoded_chunks [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124moverwrite_encoded_chunks[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[0;32m--> 670[0m backend_ds [38;5;241m=[39m [43mbackend[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m
[1;32m    671[0m [43m    [49m[43mfilename_or_obj[49m[43m,[49m
[1;32m    672[0m [43m    [49m[43mdrop_variables[49m[38;5;241;43m=[39;49m[43mdrop_variables[49m[43m,[49m
[1;32m    673[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mdecoders[49m[43m,[49m
[1;32m    674[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    675[0m [43m[49m[43m)[49m
[1;32m    676[0m ds [38;5;241m=[39m _dataset_from_backend_dataset(
[1;32m    677[0m     backend_ds,
[1;32m    678[0m     filename_or_obj,
[0;32m   (...)[0m
[1;32m    688[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    689[0m )
[1;32m    690[0m [38;5;28;01mreturn[39;00m ds

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/netCDF4_.py:666[0m, in [0;36mNetCDF4BackendEntrypoint.open_dataset[0;34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, format, clobber, diskless, persist, auto_complex, lock, autoclose)[0m
[1;32m    644[0m [38;5;28;01mdef[39;00m [38;5;21mopen_dataset[39m(
[1;32m    645[0m     [38;5;28mself[39m,
[1;32m    646[0m     filename_or_obj: [38;5;28mstr[39m [38;5;241m|[39m os[38;5;241m.[39mPathLike[Any] [38;5;241m|[39m ReadBuffer [38;5;241m|[39m AbstractDataStore,
[0;32m   (...)[0m
[1;32m    663[0m     autoclose[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m    664[0m ) [38;5;241m-[39m[38;5;241m>[39m Dataset:
[1;32m    665[0m     filename_or_obj [38;5;241m=[39m _normalize_path(filename_or_obj)
[0;32m--> 666[0m     store [38;5;241m=[39m [43mNetCDF4DataStore[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m
[1;32m    667[0m [43m        [49m[43mfilename_or_obj[49m[43m,[49m
[1;32m    668[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    669[0m [43m        [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mformat[39;49m[43m,[49m
[1;32m    670[0m [43m        [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup[49m[43m,[49m
[1;32m    671[0m [43m        [49m[43mclobber[49m[38;5;241;43m=[39;49m[43mclobber[49m[43m,[49m
[1;32m    672[0m [43m        [49m[43mdiskless[49m[38;5;241;43m=[39;49m[43mdiskless[49m[43m,[49m
[1;32m    673[0m [43m        [49m[43mpersist[49m[38;5;241;43m=[39;49m[43mpersist[49m[43m,[49m
[1;32m    674[0m [43m        [49m[43mauto_complex[49m[38;5;241;43m=[39;49m[43mauto_complex[49m[43m,[49m
[1;32m    675[0m [43m        [49m[43mlock[49m[38;5;241;43m=[39;49m[43mlock[49m[43m,[49m
[1;32m    676[0m [43m        [49m[43mautoclose[49m[38;5;241;43m=[39;49m[43mautoclose[49m[43m,[49m
[1;32m    677[0m [43m    [49m[43m)[49m
[1;32m    679[0m     store_entrypoint [38;5;241m=[39m StoreBackendEntrypoint()
[1;32m    680[0m     [38;5;28;01mwith[39;00m close_on_error(store):

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/netCDF4_.py:452[0m, in [0;36mNetCDF4DataStore.open[0;34m(cls, filename, mode, format, group, clobber, diskless, persist, auto_complex, lock, lock_maker, autoclose)[0m
[1;32m    448[0m     kwargs[[38;5;124m"[39m[38;5;124mauto_complex[39m[38;5;124m"[39m] [38;5;241m=[39m auto_complex
[1;32m    449[0m manager [38;5;241m=[39m CachingFileManager(
[1;32m    450[0m     netCDF4[38;5;241m.[39mDataset, filename, mode[38;5;241m=[39mmode, kwargs[38;5;241m=[39mkwargs
[1;32m    451[0m )
[0;32m--> 452[0m [38;5;28;01mreturn[39;00m [38;5;28;43mcls[39;49m[43m([49m[43mmanager[49m[43m,[49m[43m [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup[49m[43m,[49m[43m [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m[43m [49m[43mlock[49m[38;5;241;43m=[39;49m[43mlock[49m[43m,[49m[43m [49m[43mautoclose[49m[38;5;241;43m=[39;49m[43mautoclose[49m[43m)[49m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/netCDF4_.py:393[0m, in [0;36mNetCDF4DataStore.__init__[0;34m(self, manager, group, mode, lock, autoclose)[0m
[1;32m    391[0m [38;5;28mself[39m[38;5;241m.[39m_group [38;5;241m=[39m group
[1;32m    392[0m [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;241m=[39m mode
[0;32m--> 393[0m [38;5;28mself[39m[38;5;241m.[39mformat [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mds[49m[38;5;241m.[39mdata_model
[1;32m    394[0m [38;5;28mself[39m[38;5;241m.[39m_filename [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mds[38;5;241m.[39mfilepath()
[1;32m    395[0m [38;5;28mself[39m[38;5;241m.[39mis_remote [38;5;241m=[39m is_remote_uri([38;5;28mself[39m[38;5;241m.[39m_filename)

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/netCDF4_.py:461[0m, in [0;36mNetCDF4DataStore.ds[0;34m(self)[0m
[1;32m    459[0m [38;5;129m@property[39m
[1;32m    460[0m [38;5;28;01mdef[39;00m [38;5;21mds[39m([38;5;28mself[39m):
[0;32m--> 461[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_acquire[49m[43m([49m[43m)[49m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/netCDF4_.py:455[0m, in [0;36mNetCDF4DataStore._acquire[0;34m(self, needs_lock)[0m
[1;32m    454[0m [38;5;28;01mdef[39;00m [38;5;21m_acquire[39m([38;5;28mself[39m, needs_lock[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[0;32m--> 455[0m [43m    [49m[38;5;28;43;01mwith[39;49;00m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_manager[49m[38;5;241;43m.[39;49m[43macquire_context[49m[43m([49m[43mneeds_lock[49m[43m)[49m[43m [49m[38;5;28;43;01mas[39;49;00m[43m [49m[43mroot[49m[43m:[49m
[1;32m    456[0m [43m        [49m[43mds[49m[43m [49m[38;5;241;43m=[39;49m[43m [49m[43m_nc4_require_group[49m[43m([49m[43mroot[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_group[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_mode[49m[43m)[49m
[1;32m    457[0m     [38;5;28;01mreturn[39;00m ds

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/contextlib.py:137[0m, in [0;36m_GeneratorContextManager.__enter__[0;34m(self)[0m
[1;32m    135[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39margs, [38;5;28mself[39m[38;5;241m.[39mkwds, [38;5;28mself[39m[38;5;241m.[39mfunc
[1;32m    136[0m [38;5;28;01mtry[39;00m:
[0;32m--> 137[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mnext[39;49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgen[49m[43m)[49m
[1;32m    138[0m [38;5;28;01mexcept[39;00m [38;5;167;01mStopIteration[39;00m:
[1;32m    139[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124m"[39m[38;5;124mgenerator didn[39m[38;5;124m'[39m[38;5;124mt yield[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/file_manager.py:199[0m, in [0;36mCachingFileManager.acquire_context[0;34m(self, needs_lock)[0m
[1;32m    196[0m [38;5;129m@contextlib[39m[38;5;241m.[39mcontextmanager
[1;32m    197[0m [38;5;28;01mdef[39;00m [38;5;21macquire_context[39m([38;5;28mself[39m, needs_lock[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[1;32m    198[0m [38;5;250m    [39m[38;5;124;03m"""Context manager for acquiring a file."""[39;00m
[0;32m--> 199[0m     file, cached [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_acquire_with_cache_info[49m[43m([49m[43mneeds_lock[49m[43m)[49m
[1;32m    200[0m     [38;5;28;01mtry[39;00m:
[1;32m    201[0m         [38;5;28;01myield[39;00m file

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/xarray/backends/file_manager.py:217[0m, in [0;36mCachingFileManager._acquire_with_cache_info[0;34m(self, needs_lock)[0m
[1;32m    215[0m     kwargs [38;5;241m=[39m kwargs[38;5;241m.[39mcopy()
[1;32m    216[0m     kwargs[[38;5;124m"[39m[38;5;124mmode[39m[38;5;124m"[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_mode
[0;32m--> 217[0m file [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_opener[49m[43m([49m[38;5;241;43m*[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_args[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    218[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;241m==[39m [38;5;124m"[39m[38;5;124mw[39m[38;5;124m"[39m:
[1;32m    219[0m     [38;5;66;03m# ensure file doesn't get overridden when opened again[39;00m
[1;32m    220[0m     [38;5;28mself[39m[38;5;241m.[39m_mode [38;5;241m=[39m [38;5;124m"[39m[38;5;124ma[39m[38;5;124m"[39m

File [0;32msrc/netCDF4/_netCDF4.pyx:2469[0m, in [0;36mnetCDF4._netCDF4.Dataset.__init__[0;34m()[0m

File [0;32msrc/netCDF4/_netCDF4.pyx:2028[0m, in [0;36mnetCDF4._netCDF4._ensure_nc_success[0;34m()[0m

[0;31mOSError[0m: [Errno -101] NetCDF: HDF error: '/Data/gfi/users/rogui7909/data/ERA5/era5_in_data.nc'

loading data ...
   -->  u850 loaded
Input data ready
Data ready
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
Model init
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/loggers/wandb.py:397: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name    | Type             | Params | Mode
-----------------------------------------------------
0 | model   | Wang2024         | 7.4 M  | train
1 | loss_fn | CrossEntropyLoss | 0      | train
-----------------------------------------------------
7.4 M     Trainable params
0         Non-trainable params
7.4 M     Total params
29.534    Total estimated model params size (MB)
9         Modules in train mode
0         Modules in eval mode
Epoch 0: 100%|█████████████████████████████████████████████████████████████████████████████████| 100/100 [00:07<00:00, 13.29it/s, v_num=6n7j]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'train_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████| 36/36 [00:02<00:00, 16.40it/s]
`Trainer.fit` stopped: `max_epochs=1` reached.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'test_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        test/loss           1.9726483821868896
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

__main__.LitCNN

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[6], line 1[0m
[0;32m----> 1[0m [43mLitCNN[49m[38;5;241;43m.[39;49m[43mtest_step_pred[49m

[0;31mAttributeError[0m: type object 'LitCNN' has no attribute 'test_step_pred'

tensor([1, 1, 1,  ..., 1, 2, 9])
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs


Model init
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/callbacks/model_checkpoint.py:654: Checkpoint directory ./Predict-rain-WNorway/lhub6n7j/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name    | Type             | Params | Mode
-----------------------------------------------------
0 | model   | Wang2024         | 7.4 M  | train
1 | loss_fn | CrossEntropyLoss | 0      | train
-----------------------------------------------------
7.4 M     Trainable params
0         Non-trainable params
7.4 M     Total params
29.534    Total estimated model params size (MB)
9         Modules in train mode
0         Modules in eval mode
Epoch 0: 100%|█████████████████████████████████████████████████████████████████████████████████| 100/100 [00:08<00:00, 11.35it/s, v_num=6n7j]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'train_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████| 36/36 [00:00<00:00, 51.16it/s]
`Trainer.fit` stopped: `max_epochs=1` reached.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'test_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        test/loss           1.9302705526351929
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[10], line 1[0m
[0;32m----> 1[0m [43mtest_step_pred[49m

[0;31mNameError[0m: name 'test_step_pred' is not defined


[tensor([ 0.7262,  0.6727,  0.4595,  0.2038,  0.2677,  0.1364, -0.0098, -0.2706,
         -1.1564, -1.1626], device='cuda:0'),
 tensor([-1.2450, -0.7326, -0.9563, -0.1063,  0.5518,  0.3867,  0.4698,  0.5720,
          0.9646,  1.7872], device='cuda:0'),
 tensor([-0.2280,  0.5529,  0.6339,  0.4321,  0.3252,  0.1215, -0.0221, -0.4027,
         -0.4934, -1.1914], device='cuda:0'),
 tensor([ 3.7840,  4.0388,  3.0511,  2.8229,  1.1621,  0.7455, -0.6654, -2.5198,
         -4.7338, -3.8776], device='cuda:0'),
 tensor([-0.6545, -0.0112,  0.4144,  0.2564,  0.2762,  0.0789,  0.0459,  0.0931,
         -0.0394, -0.4231], device='cuda:0'),
 tensor([ 1.3340,  1.6826,  1.0730,  1.0843,  0.8197,  0.3956, -0.1414, -1.1724,
         -1.7466, -3.2594], device='cuda:0'),
 tensor([ 1.0003,  1.3864,  0.9784,  1.0958,  0.5739,  0.3665, -0.2082, -0.9373,
         -1.4744, -2.6818], device='cuda:0'),
 tensor([-1.2897, -0.1643,  0.8988,  0.9284,  0.3198,  0.7514,  0.0915, -1.1066,
         -0.4726, -1.4552], device='cuda:0'),
 tensor([-1.9144, -2.1118, -0.6365, -0.8791, -0.0147,  0.8505,  0.8476,  1.2215,
          1.3139,  1.3444], device='cuda:0'),
 tensor([ 0.5311,  0.8228,  1.7878,  1.0874,  0.4168,  0.7801, -0.3730, -1.2741,
         -0.9698, -1.9704], device='cuda:0'),
 tensor([-3.7292, -2.3679, -1.7414, -0.2322,  0.7661,  0.9314,  1.8656,  2.6801,
          3.4640,  3.7277], device='cuda:0'),
 tensor([-2.4083, -1.6671, -1.6030, -0.2738,  0.4215,  0.9436,  0.9291,  1.7648,
          1.8150,  2.2412], device='cuda:0'),
 tensor([ 1.0144,  1.0450,  1.0387,  0.6285,  0.2966,  0.1702, -0.1643, -0.6314,
         -1.0245, -1.3959], device='cuda:0'),
 tensor([-1.4411, -1.0812, -0.3543, -0.6906,  0.3513,  0.5342,  0.9463,  1.0019,
          1.0961,  0.7626], device='cuda:0'),
 tensor([-1.9123, -1.0438, -0.7078, -0.7051,  1.1174,  0.2080,  1.2208,  1.2823,
          1.4883,  2.0301], device='cuda:0'),
 tensor([ 0.9923,  1.8646,  0.7743,  0.9319,  0.8277,  0.8607, -0.4770, -1.8478,
         -1.3782, -3.5986], device='cuda:0'),
 tensor([-0.8891,  0.1101,  0.5350,  0.3727,  0.2049,  0.0066,  0.0592,  0.0846,
         -0.1403, -0.4529], device='cuda:0'),
 tensor([-3.6754, -4.9394, -2.0573, -1.7145,  0.2945,  1.7389,  2.1602,  2.4558,
          3.5811,  4.9430], device='cuda:0'),
 tensor([ 0.8560,  1.2064,  0.8038,  0.7590,  0.4711,  0.2409, -0.1758, -1.1281,
         -1.1059, -2.1747], device='cuda:0'),
 tensor([ 1.3607,  1.0844,  0.7303,  0.3304,  0.4579,  0.2072,  0.0147, -0.5184,
         -2.0722, -1.9748], device='cuda:0'),
 tensor([ 1.0636,  1.1603,  1.0915,  0.8787,  0.5665,  0.5372, -0.3500, -1.1698,
         -1.1139, -2.0358], device='cuda:0'),
 tensor([-1.0895, -0.8445, -0.7279, -0.8572,  1.0456,  0.3611,  0.9692,  0.9055,
          1.8091,  2.1589], device='cuda:0'),
 tensor([-2.8284, -2.2057, -1.2921, -0.7631,  0.1893,  0.8117,  1.4708,  1.9420,
          1.7839,  1.5455], device='cuda:0'),
 tensor([-1.1202, -1.2523, -0.9432,  0.1427,  0.3837,  0.0638,  0.6802,  0.7749,
          0.6974,  1.8343], device='cuda:0'),
 tensor([-0.0507,  0.4001,  0.4669,  0.4499,  0.0503,  0.1595, -0.0069, -0.2944,
         -0.7175, -1.1387], device='cuda:0'),
 tensor([-1.8701, -1.2398, -0.7467, -0.3350,  0.7382,  0.9449,  0.6625,  0.6175,
          0.9079,  0.5975], device='cuda:0'),
 tensor([-5.9475, -5.7057, -3.5220, -1.9265, -0.0323,  1.9351,  3.0435,  4.4134,
          5.4465,  6.0574], device='cuda:0'),
 tensor([-2.1646, -1.4816, -0.6988, -0.3707,  0.2737,  0.7234,  0.9910,  1.1389,
          1.0702,  0.5536], device='cuda:0'),
 tensor([-7.2529, -8.0041, -3.5253, -2.9851,  0.4356,  3.3373,  3.1793,  3.5755,
          5.9287,  6.7233], device='cuda:0'),
 tensor([ 1.3627,  1.4485,  0.9904,  0.9070,  0.5429,  0.2317, -0.1730, -0.6839,
         -1.9427, -1.3493], device='cuda:0'),
 tensor([ 1.8262,  1.9337,  1.4295,  1.2396,  0.9293,  0.1434, -0.2578, -1.3690,
         -1.7562, -2.6385], device='cuda:0'),
 tensor([ 1.6748,  2.1405,  2.0374,  1.4790,  0.8141,  0.7541, -0.0563, -1.8051,
         -1.7713, -1.9857], device='cuda:0'),
 tensor([ 2.0351,  2.0740,  1.7123,  1.5635,  0.8470,  0.6998, -0.2964, -1.6988,
         -2.1901, -3.7279], device='cuda:0'),
 tensor([ 0.8554,  1.6478,  0.6874,  0.8197,  0.7278,  0.7616, -0.4243, -1.6131,
         -1.2064, -3.1682], device='cuda:0'),
 tensor([-0.4605,  0.0257,  0.3465,  0.2977,  0.2170,  0.0128,  0.1510,  0.1164,
          0.2730,  0.0049], device='cuda:0'),
 tensor([-1.4520, -0.1556,  0.2922,  0.6424,  0.4804, -0.1799,  0.8277,  1.0385,
          0.6825,  0.8539], device='cuda:0'),
 tensor([-0.2927,  0.0268,  0.0248,  0.0539,  0.1153,  0.1456,  0.1261,  0.2192,
          0.1205,  0.2732], device='cuda:0'),
 tensor([-2.7765, -1.9703, -1.8564, -0.8306,  1.0032,  1.0131,  1.1874,  1.2409,
          2.3321,  3.0179], device='cuda:0'),
 tensor([-1.0419, -0.7733, -0.4830, -0.1959,  0.5745,  0.5493,  0.2716,  0.5114,
          0.6430,  0.3905], device='cuda:0'),
 tensor([ 1.9118,  2.0744,  1.5598,  1.4538,  0.8122,  0.1898, -0.1629, -1.0152,
         -2.5319, -1.7888], device='cuda:0'),
 tensor([ 1.6767,  1.7908,  1.7290,  1.3636,  0.7486,  0.6002, -0.3350, -1.2028,
         -1.3825, -1.8294], device='cuda:0'),
 tensor([-0.3243, -0.2635, -0.2713, -0.0620,  0.2400,  0.2154,  0.0913,  0.1929,
          0.2885,  0.1997], device='cuda:0'),
 tensor([-1.6612, -1.2327,  0.0336,  0.2611,  1.0654,  1.0994,  0.0673, -0.2590,
          0.3699, -0.7353], device='cuda:0'),
 tensor([ 3.5148,  3.5623,  2.9200,  2.5820,  1.7211,  0.5735, -0.4592, -2.8269,
         -3.2505, -4.9601], device='cuda:0'),
 tensor([-0.1739,  0.3531,  0.0672,  0.1281,  0.2412,  0.3454,  0.0896, -0.1722,
         -0.1922, -0.9232], device='cuda:0'),
 tensor([ 1.9352,  2.0696,  1.5738,  1.3586,  0.9861,  0.2375, -0.3049, -1.6026,
         -1.8905, -3.0697], device='cuda:0'),
 tensor([-1.9457, -1.7532, -0.5527, -0.4512,  0.0783,  0.7682,  0.6521,  0.9168,
          1.1156,  0.6916], device='cuda:0'),
 tensor([-3.3880, -2.7552, -1.3765, -0.9463,  0.4621,  0.8629,  1.7762,  2.2197,
          2.7145,  2.4336], device='cuda:0'),
 tensor([-2.5194, -2.9856, -1.5023, -1.6245,  0.2952,  0.9667,  1.8375,  2.2051,
          2.8403,  2.5084], device='cuda:0'),
 tensor([-0.0189,  0.1757,  0.2521,  0.1853,  0.1826,  0.1378, -0.0593, -0.0736,
         -0.0067, -0.2069], device='cuda:0'),
 tensor([ 1.9009,  2.1833,  1.6057,  1.5302,  0.8640,  0.4561, -0.3080, -1.3436,
         -2.1593, -3.6292], device='cuda:0'),
 tensor([-1.2657, -0.8681,  0.0131,  0.3288,  0.6406,  0.8214,  0.5043,  0.1468,
          0.6609,  0.2591], device='cuda:0'),
 tensor([-1.8757, -0.8559, -0.7075, -0.1926,  0.4378,  0.4079,  0.5842,  1.0212,
          0.7327,  0.6025], device='cuda:0'),
 tensor([-1.7974, -1.3190, -0.8065, -0.9868,  0.3576,  1.1337,  1.0011,  1.1614,
          1.0334,  0.4042], device='cuda:0'),
 tensor([-0.5856,  0.0189,  0.2224,  0.2580,  0.1532,  0.3541,  0.0061, -0.1913,
         -0.1342, -0.6334], device='cuda:0'),
 tensor([-0.8994, -1.2183, -0.2267, -0.4037,  0.3131,  0.5470,  0.4137,  0.5834,
          0.9150,  0.4840], device='cuda:0'),
 tensor([ 0.2311,  0.6305,  0.2950,  0.2732,  0.2831,  0.3082, -0.1913, -0.5333,
         -0.4745, -1.2189], device='cuda:0'),
 tensor([-1.3171, -0.4959,  0.0273,  0.5847,  0.6899,  0.6707,  0.1161,  0.0531,
         -0.0109, -0.6659], device='cuda:0'),
 tensor([-1.1276, -0.3969,  0.0336,  0.5086,  0.5182,  0.5269,  0.1293,  0.1043,
          0.0238, -0.4712], device='cuda:0'),
 tensor([ 1.3935,  1.8164,  1.1044,  0.9902,  0.6303,  1.0526, -0.2147, -1.6895,
         -1.3928, -3.2733], device='cuda:0'),
 tensor([-0.6281, -0.3761,  0.5436,  0.3419,  0.2288,  0.2837,  0.3067,  0.2113,
          0.5390,  0.0073], device='cuda:0'),
 tensor([-2.9837, -3.4027, -1.1586, -1.6710,  0.3335,  1.3099,  1.7646,  1.9820,
          2.3904,  1.8941], device='cuda:0'),
 tensor([ 1.6452,  1.8781,  1.3694,  1.2760,  0.7428,  0.2339, -0.1465, -1.0206,
         -2.4813, -1.7501], device='cuda:0'),
 tensor([-3.1159, -2.7431, -1.0049, -0.8660,  0.0320,  1.2926,  1.4298,  1.9955,
          2.0177,  2.0548], device='cuda:0'),
 tensor([-1.0954, -0.0866,  0.3798,  0.2008,  0.0586,  0.4714,  0.2455, -0.1385,
         -0.1201, -0.9161], device='cuda:0'),
 tensor([-2.3945, -2.6567, -2.2825, -0.4776,  0.6755,  1.1646,  1.3498,  2.3413,
          2.7713,  2.6681], device='cuda:0'),
 tensor([ 0.9156,  1.3287,  1.4799,  1.0682,  0.4591,  1.1372, -0.3877, -1.9782,
         -1.2939, -2.6241], device='cuda:0'),
 tensor([-2.8412, -1.5543, -0.7878,  0.1721,  0.6249,  0.9219,  1.0336,  1.1610,
          1.0411,  0.6360], device='cuda:0'),
 tensor([-1.9470, -1.7554, -1.5310, -0.1720,  0.5475,  0.8540,  0.9721,  1.7332,
          2.1256,  2.2482], device='cuda:0'),
 tensor([-0.2415, -0.3811, -0.1809,  0.0220,  0.4244,  0.1668,  0.1205,  0.3120,
          0.3361,  0.3179], device='cuda:0'),
 tensor([ 2.3285,  1.7122,  1.1434,  0.5235,  0.7479,  0.3151,  0.0520, -0.8964,
         -3.4690, -3.2134], device='cuda:0'),
 tensor([ 2.5067,  2.7222,  1.9204,  1.7598,  1.0963,  0.2093, -0.2048, -1.8108,
         -3.0411, -4.1484], device='cuda:0'),
 tensor([ 1.9961,  2.1346,  1.5297,  1.4170,  0.7314,  0.3464, -0.2956, -1.1505,
         -2.6413, -1.9305], device='cuda:0'),
 tensor([-4.5878, -4.0288, -4.2970, -0.5927,  1.4097,  2.3927,  1.3689,  3.4539,
          5.2479,  6.6456], device='cuda:0'),
 tensor([-0.6476, -0.7724,  0.0480,  0.2089,  0.4382,  0.1146,  0.3692,  0.6645,
          0.9961,  0.9547], device='cuda:0'),
 tensor([ 0.6911,  1.1978,  0.9990,  0.8069,  0.4373,  0.0064,  0.1638, -0.4790,
         -1.3816, -1.0088], device='cuda:0'),
 tensor([-0.2397,  0.4584,  0.2117, -0.0195,  0.3315,  0.1899,  0.2599,  0.2490,
          0.2428, -0.0718], device='cuda:0'),
 tensor([-0.5412, -0.0356,  0.9271,  0.7858,  0.5869,  0.8240,  0.0388, -0.7021,
         -0.2497, -0.8747], device='cuda:0'),
 tensor([-0.0817,  0.0924,  0.1208,  0.0645,  0.0873,  0.1009, -0.0732,  0.0221,
          0.0467, -0.1367], device='cuda:0'),
 tensor([-3.2270, -3.7842, -1.4641, -1.5030,  0.4027,  1.4686,  1.2357,  1.9170,
          3.0638,  2.7750], device='cuda:0'),
 tensor([-0.7283, -0.1799,  0.0841,  0.2556,  0.5326,  0.5824,  0.0210, -0.0457,
         -0.0180, -0.6148], device='cuda:0'),
 tensor([-0.1821,  0.8748,  1.1410,  1.0953,  0.3155,  0.3557,  0.4310, -0.4164,
         -1.2864, -2.2732], device='cuda:0'),
 tensor([-0.5254,  0.5467,  0.6507,  0.7941,  0.1288,  0.3461,  0.0293, -0.6637,
         -0.7206, -1.8906], device='cuda:0'),
 tensor([ 2.7607,  2.9534,  2.1708,  1.9986,  1.2540,  0.1000, -0.1693, -1.3471,
         -2.4343, -2.2551], device='cuda:0'),
 tensor([-3.2369, -1.4862, -1.5885,  0.0374,  0.3919,  1.0213,  1.2839,  2.2313,
          2.2374,  2.6700], device='cuda:0'),
 tensor([-1.0772, -0.3441,  0.0829,  0.3781,  0.8264,  0.8864,  0.0667, -0.0942,
         -0.0466, -0.8944], device='cuda:0'),
 tensor([-1.0424, -0.0735,  0.3959,  0.4415,  0.1399,  0.4818,  0.0644, -0.3858,
         -0.2798, -1.0586], device='cuda:0'),
 tensor([ 0.4213,  0.4845,  0.3378,  0.1516,  0.1788,  0.0959, -0.0168, -0.1519,
         -0.7391, -0.7911], device='cuda:0'),
 tensor([-2.1752, -1.8259, -0.9931, -0.7927,  0.5796,  1.0314,  0.8841,  0.8350,
          1.2228,  0.5151], device='cuda:0'),
 tensor([-0.1990,  0.2119,  0.1431,  0.0532,  0.3793,  0.2923,  0.2329,  0.0311,
          0.0968, -0.5154], device='cuda:0'),
 tensor([ 3.2731,  2.4942,  1.7806,  0.7964,  0.8145,  0.7892,  0.0483, -1.3495,
         -3.2581, -4.0285], device='cuda:0'),
 tensor([-3.4276, -3.9937, -2.5703, -1.3731, -0.1596,  0.5306,  2.5315,  2.8275,
          3.0023,  3.9514], device='cuda:0'),
 tensor([ 1.3202,  1.4661,  1.6369,  1.1551,  0.3702,  0.3250, -0.2723, -1.1925,
         -1.3327, -2.0736], device='cuda:0'),
 tensor([-4.0328, -4.0168, -1.2033, -1.4341, -0.1773,  1.6595,  2.1272,  2.7569,
          2.8093,  2.7976], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([ 0.0827,  0.6346,  0.3614,  0.3503,  0.1823,  0.3881, -0.1262, -0.6213,
         -0.4485, -1.3726], device='cuda:0'),
 tensor([-1.1159, -0.0175,  0.3158,  0.4799,  0.3936, -0.0657,  0.5335,  0.5992,
          0.3017,  0.3423], device='cuda:0'),
 tensor([-3.7942, -4.2683, -2.4064, -1.4991, -0.1751,  1.0665,  2.1279,  2.5351,
          2.8791,  3.6400], device='cuda:0'),
 tensor([ 0.0155, -0.1512,  0.0355, -0.1586,  0.1610,  0.4037,  0.1930,  0.2434,
         -0.1619, -0.4500], device='cuda:0'),
 tensor([-0.7162, -0.4964, -0.3605, -0.0414,  0.2689,  0.4136,  0.2527,  0.4221,
          0.4560,  0.2222], device='cuda:0'),
 tensor([ 9.9072e-01,  8.4433e-01,  5.7241e-01,  2.5661e-01,  3.4698e-01,
          1.6593e-01,  4.2027e-04, -3.7391e-01, -1.5382e+00, -1.5012e+00],
        device='cuda:0'),
 tensor([ 5.5483,  5.2468,  3.7998,  3.5670,  2.0652,  0.3914, -0.5956, -3.5107,
         -6.3872, -6.9811], device='cuda:0'),
 tensor([-0.5186,  0.0616,  0.1857,  0.2207,  0.1828, -0.0020,  0.1868,  0.2655,
          0.1236,  0.0720], device='cuda:0'),
 tensor([-1.4203, -0.8796, -0.8844, -0.2957,  0.2174,  0.5233,  0.5923,  1.0448,
          1.2315,  1.2321], device='cuda:0'),
 tensor([-1.3129, -0.4920,  0.0344,  0.5183,  0.3622,  0.4403,  0.2447,  0.3917,
          0.1150, -0.2558], device='cuda:0'),
 tensor([-0.0348,  0.1566,  0.2146,  0.1481,  0.1446,  0.1192, -0.0678, -0.0514,
          0.0037, -0.1791], device='cuda:0'),
 tensor([ 0.2936,  0.4151,  0.3634,  0.3446,  0.2312,  0.1292,  0.2062, -0.1266,
         -0.4910, -0.4441], device='cuda:0'),
 tensor([-4.3988, -3.8017, -2.0886, -1.5384,  0.3332,  0.9909,  2.5808,  3.0556,
          3.1639,  2.5488], device='cuda:0'),
 tensor([-0.9601,  0.0334,  0.4026,  0.3390,  0.2083, -0.0467,  0.1506,  0.2728,
          0.0505, -0.2751], device='cuda:0'),
 tensor([-0.8322,  0.0287,  0.8880,  0.7737,  0.0246,  0.4896, -0.1179, -0.5814,
         -0.4016, -1.0839], device='cuda:0'),
 tensor([-0.4357,  0.2186,  0.4280,  0.2108,  0.2151,  0.2432,  0.0254, -0.1584,
         -0.2275, -0.7372], device='cuda:0'),
 tensor([ 0.3467,  0.7023,  0.6530,  0.5216,  0.2562,  0.3068, -0.0783, -0.7869,
         -0.6651, -1.3441], device='cuda:0'),
 tensor([-0.8025, -0.6170, -0.5979, -0.1437,  0.2574,  0.2362,  0.2717,  0.6156,
          0.5784,  0.4325], device='cuda:0'),
 tensor([ 0.0768,  0.3008,  0.4969,  0.4306,  0.3824,  0.4328,  0.0361, -0.0545,
         -0.0997, -0.4603], device='cuda:0'),
 tensor([-1.8007, -1.2590, -1.1739, -0.4772,  0.6498,  0.3430,  0.4108,  1.1287,
          1.8410,  1.7441], device='cuda:0'),
 tensor([ 1.0997,  1.2229,  1.7437,  1.2065,  0.4273,  0.5938, -0.3422, -1.3889,
         -1.0416, -1.9161], device='cuda:0'),
 tensor([-3.0095, -2.2229, -1.0222, -0.6286,  0.2325,  0.8775,  1.4522,  1.7924,
          1.7344,  1.3653], device='cuda:0'),
 tensor([ 2.2059,  2.3413,  2.5065,  1.9029,  1.0142,  1.1771, -0.2981, -2.9474,
         -2.4196, -3.9761], device='cuda:0'),
 tensor([ 1.1857,  1.2939,  0.8862,  0.8018,  0.4659,  0.2232, -0.1671, -0.6115,
         -1.7207, -1.2327], device='cuda:0'),
 tensor([-4.0636, -2.8461, -2.7452, -0.4299,  0.7189,  1.0808,  1.1166,  1.8331,
          2.6782,  3.5035], device='cuda:0'),
 tensor([ 0.7113,  1.0318,  0.4109,  0.4907,  0.3887,  0.1321,  0.2301, -0.1738,
         -0.2397,  0.1409], device='cuda:0'),
 tensor([ 4.7532,  4.5796,  3.4024,  2.9761,  2.2543,  0.2022, -0.2646, -2.9646,
         -4.2731, -5.9730], device='cuda:0'),
 tensor([-5.0740, -6.7681, -2.2192, -2.4264,  0.8473,  2.5623,  2.1959,  3.5012,
          5.7533,  5.7384], device='cuda:0'),
 tensor([-0.7921, -0.2495, -0.1387, -0.1400,  0.2674,  0.1158,  0.3376,  0.3848,
          0.1932,  0.7406], device='cuda:0'),
 tensor([-2.7296, -2.5569, -1.0304, -1.4454,  0.9424,  1.1783,  1.8813,  2.1969,
          2.8948,  3.2779], device='cuda:0'),
 tensor([ 1.8513,  1.9895,  1.4181,  1.2805,  0.8404, -0.0529, -0.0213, -0.8724,
         -1.9550, -1.5119], device='cuda:0'),
 tensor([-2.6445, -2.2799, -1.2862, -0.6659,  0.1996,  0.8856,  1.1679,  1.5208,
          1.5903,  1.0905], device='cuda:0'),
 tensor([-0.9600, -0.7359, -0.8702, -0.1634,  0.2898,  0.2569,  0.3570,  0.5721,
          0.6109,  0.9433], device='cuda:0'),
 tensor([-2.4508, -2.8135, -0.8295, -1.1908,  0.3507,  1.1000,  1.5483,  1.7708,
          2.3648,  1.9957], device='cuda:0'),
 tensor([ 2.2768,  2.7463,  2.1900,  1.9632,  0.9900,  0.7451, -0.5135, -1.9818,
         -2.2759, -4.2933], device='cuda:0'),
 tensor([-0.7699, -0.7311, -0.2420, -0.2644,  0.0139,  0.3428,  0.2448,  0.5039,
          0.5899,  0.5549], device='cuda:0'),
 tensor([ 1.8920,  1.9809,  1.3662,  1.2702,  0.7555,  0.1972, -0.2068, -1.2704,
         -2.2134, -2.8327], device='cuda:0'),
 tensor([-8.0909, -8.8870, -5.2082, -3.3576,  0.8932,  4.1824,  3.4588,  5.4076,
          8.4121,  9.9629], device='cuda:0'),
 tensor([ 0.7669,  1.0830,  0.6921,  0.6742,  0.5193,  0.2780, -0.1049, -0.7178,
         -1.0650, -2.0511], device='cuda:0'),
 tensor([ 1.0178,  1.5115,  1.1445,  1.1268,  0.4974,  0.8822, -0.4773, -1.5848,
         -1.2823, -2.8408], device='cuda:0'),
 tensor([-7.2953, -8.9110, -4.1511, -3.3343,  1.0386,  3.7027,  2.8237,  3.4252,
          6.8073,  8.2855], device='cuda:0'),
 tensor([-0.9884,  0.4927,  1.0299,  1.2257,  0.0702,  0.4599,  0.1012, -1.0066,
         -1.1623, -1.6442], device='cuda:0'),
 tensor([-1.0326, -0.8105, -0.5929, -0.0744,  0.3839,  0.6111,  0.4038,  0.6159,
          0.6776,  0.3965], device='cuda:0'),
 tensor([ 0.4789,  0.6311,  1.4176,  0.8631,  0.4996,  0.2292, -0.0501, -0.6163,
         -0.2167, -0.8631], device='cuda:0'),
 tensor([ 1.1283,  1.1925,  0.8753,  0.7766,  0.4042,  0.1834, -0.0598, -0.5351,
         -1.5926, -1.2866], device='cuda:0'),
 tensor([-5.0890, -5.7147, -2.9721, -2.1504,  0.8591,  1.2944,  3.0912,  3.4857,
          5.2037,  5.4449], device='cuda:0'),
 tensor([-0.6919, -0.0493,  0.3834,  0.1664,  0.1966,  0.3041,  0.1116,  0.1156,
         -0.0536, -0.4673], device='cuda:0'),
 tensor([-1.6631, -1.8345, -0.5388, -0.6854, -0.0049,  0.7879,  0.6901,  1.0609,
          1.2734,  1.2363], device='cuda:0'),
 tensor([ 2.5189,  2.6310,  2.0927,  1.8733,  1.2666,  0.3697, -0.3742, -1.9084,
         -2.3247, -3.5161], device='cuda:0'),
 tensor([ 1.9735,  2.0944,  1.5780,  1.3751,  0.9983,  0.1897, -0.2758, -1.4799,
         -1.8835, -2.8195], device='cuda:0'),
 tensor([ 0.3522,  0.5684,  0.4249,  0.2190,  0.1734,  0.0299,  0.0687, -0.0940,
         -0.9160, -0.9410], device='cuda:0'),
 tensor([ 1.4496,  1.5867,  1.1295,  1.0172,  0.6784, -0.0227, -0.0315, -0.6774,
         -1.5382, -1.2114], device='cuda:0'),
 tensor([-3.4701, -2.0304, -1.9799,  0.7598,  0.7549,  1.1850,  1.6975,  2.9321,
          2.8251,  3.6951], device='cuda:0'),
 tensor([-10.2131,  -5.9367,  -4.6680,  -0.6811,   2.6221,   3.3459,   3.9226,
           4.9765,   7.5080,  11.2815], device='cuda:0'),
 tensor([-1.2599, -0.6602, -0.0873, -0.4594,  0.3142,  0.6551,  0.6126,  0.6466,
          0.6941,  0.1446], device='cuda:0'),
 tensor([-1.3679, -0.6595, -0.0516,  0.0029,  0.0692,  0.3992,  0.7285,  0.8820,
          0.5572,  0.4103], device='cuda:0'),
 tensor([-0.6379, -0.7647, -0.5465, -0.0120,  0.2717,  0.0462,  0.3643,  0.4187,
          0.4864,  1.0192], device='cuda:0'),
 tensor([-2.0771, -0.8258, -0.0185, -0.2459,  0.4514,  0.9886,  0.6464,  0.1025,
          0.1324, -1.4079], device='cuda:0'),
 tensor([ 1.9666,  2.6710,  2.7433,  2.2828,  0.5507,  1.0807, -0.2774, -2.7282,
         -2.5694, -3.1012], device='cuda:0'),
 tensor([-1.8945, -0.8111, -0.4544,  0.3369,  0.5227,  0.7069,  0.6125,  0.5697,
          0.6045,  0.0922], device='cuda:0'),
 tensor([-0.1458,  0.3417,  0.0776,  0.1245,  0.2128,  0.3118,  0.0632, -0.1605,
         -0.1771, -0.8430], device='cuda:0'),
 tensor([-0.4669,  0.0584,  0.6888,  0.3674,  0.1485,  0.3120, -0.0581, -0.0857,
         -0.0804, -0.4847], device='cuda:0'),
 tensor([-2.9212, -3.3586, -1.4850, -1.0834,  0.1158,  0.9176,  2.2218,  2.5969,
          2.5714,  3.4159], device='cuda:0'),
 tensor([-1.8004, -1.6258, -0.7811, -0.5103,  0.2377,  0.0729,  0.8137,  1.5538,
          1.6878,  1.9056], device='cuda:0'),
 tensor([-3.8483, -2.2377, -1.3508,  0.3734,  0.7087,  1.2198,  2.1209,  2.6479,
          2.5653,  2.6395], device='cuda:0'),
 tensor([ 0.0599,  0.6558,  0.4912,  0.4075,  0.3155,  0.2443, -0.0912, -0.5119,
         -0.5352, -1.3177], device='cuda:0'),
 tensor([ 0.8738,  1.0836,  1.2979,  0.9264,  0.5093,  0.5909, -0.3446, -1.2426,
         -1.1402, -2.0644], device='cuda:0'),
 tensor([-3.2584, -3.1652, -1.7594, -1.1239,  0.5171,  1.0214,  1.6322,  2.3100,
          2.4699,  2.5579], device='cuda:0'),
 tensor([ 0.1387,  0.3658,  0.6232,  0.5547,  0.5594,  0.3216,  0.0244, -0.2935,
         -0.1101, -0.4831], device='cuda:0'),
 tensor([-0.0196,  0.4449,  0.7600,  0.6329,  0.2579,  0.4636, -0.1784, -0.8190,
         -0.4775, -0.9278], device='cuda:0'),
 tensor([-6.3651, -5.5006, -1.7299, -1.8271,  0.5147,  2.3767,  3.4589,  4.0582,
          4.3440,  4.3837], device='cuda:0'),
 tensor([-2.5470, -2.1919, -1.9472, -0.3598,  0.9159,  0.2562,  1.1811,  2.0648,
          2.9359,  4.8624], device='cuda:0'),
 tensor([-1.8916, -1.0471, -1.4225, -0.5363,  0.7144,  0.6610,  0.6692,  0.7015,
          1.4214,  2.7355], device='cuda:0'),
 tensor([-4.5632e-01,  7.9629e-02,  1.9443e-02,  9.0822e-02,  3.7271e-01,
          4.7332e-01,  2.1850e-01, -2.9038e-03, -5.1452e-04, -6.9082e-01],
        device='cuda:0'),
 tensor([-1.1851, -0.6145,  0.3193,  0.4644,  0.2461,  0.4716,  0.4399,  0.4859,
          0.5616,  0.0548], device='cuda:0'),
 tensor([-0.4003, -0.0230,  0.0861,  0.1413,  0.2549,  0.2979, -0.0213, -0.0007,
          0.0067, -0.3504], device='cuda:0'),
 tensor([-0.0218,  0.6100,  0.4834,  0.4186,  0.1891,  0.2193, -0.0247, -0.4942,
         -0.5063, -1.2823], device='cuda:0'),
 tensor([-0.2069,  0.0214,  0.0292,  0.0287,  0.0675,  0.1043, -0.0049,  0.1058,
          0.0814, -0.0691], device='cuda:0'),
 tensor([-0.5340,  0.0942,  1.1588,  0.8075,  0.2924,  0.7256, -0.1714, -0.8852,
         -0.5874, -1.1023], device='cuda:0'),
 tensor([-0.4289,  0.2477,  0.6382,  0.6382,  0.2289,  0.4553, -0.0988, -0.7874,
         -0.4483, -0.9307], device='cuda:0'),
 tensor([ 0.8504,  0.9716,  0.6527,  0.5709,  0.3377,  0.1886, -0.1315, -0.4377,
         -1.3061, -0.9911], device='cuda:0'),
 tensor([-0.3223,  0.1643,  0.1028,  0.1420,  0.1877,  0.2124, -0.0373, -0.1846,
         -0.1146, -0.5526], device='cuda:0'),
 tensor([ 0.7741,  1.0021,  0.7405,  0.6247,  0.3923,  0.0403, -0.1012, -0.3928,
         -0.7265, -0.7580], device='cuda:0'),
 tensor([-1.0554, -0.9301, -0.2017, -0.5171,  0.3014,  0.7248,  0.4708,  0.6273,
          0.7690,  0.3453], device='cuda:0'),
 tensor([ 1.9424,  1.9810,  1.6752,  1.5052,  0.9982,  0.7051, -0.5013, -1.9140,
         -1.8802, -3.3696], device='cuda:0'),
 tensor([-2.7684, -2.1195, -0.9558, -0.3085,  0.6744,  1.3036,  0.8979,  0.8306,
          1.1050,  0.1589], device='cuda:0'),
 tensor([-0.7812, -0.0931,  0.6898,  0.6751,  0.1531,  0.4987, -0.1014, -0.3992,
         -0.3220, -0.8871], device='cuda:0'),
 tensor([-0.0377,  0.2820,  0.6982,  0.4113,  0.3091,  0.6779, -0.1688, -1.0387,
         -0.4864, -1.2712], device='cuda:0'),
 tensor([-2.1285, -2.0775, -0.8495, -0.7380,  0.0223,  0.6528,  1.0548,  1.3483,
          1.6642,  1.6418], device='cuda:0'),
 tensor([ 0.6374,  0.8317,  0.5909,  0.4972,  0.3309, -0.0016, -0.0453, -0.2957,
         -0.7159, -0.6293], device='cuda:0'),
 tensor([-2.7951, -2.9808, -0.6088, -1.2224,  0.6019,  1.2873,  1.7209,  1.7205,
          2.3208,  1.4940], device='cuda:0'),
 tensor([-0.6861,  0.3457,  0.5693,  0.6463,  0.0557,  0.2384,  0.0724, -0.4654,
         -0.5029, -1.3871], device='cuda:0'),
 tensor([-2.3156, -2.2690, -1.4439, -0.7971,  0.2276,  0.8988,  0.9927,  1.3149,
          1.5442,  1.0485], device='cuda:0'),
 tensor([ 1.2492,  2.1675,  1.1645,  0.2470,  0.3368,  0.9026,  0.0056, -1.6114,
         -1.0579, -3.1129], device='cuda:0'),
 tensor([-0.8858,  0.0322,  0.3092,  0.3442,  0.2448, -0.0572,  0.3022,  0.4137,
          0.1746,  0.0681], device='cuda:0'),
 tensor([ 0.5832,  0.8109,  1.0134,  0.6528,  0.3540,  0.2398, -0.0559, -0.5613,
         -0.4499, -0.7672], device='cuda:0'),
 tensor([-4.9494, -4.4937, -2.7214, -1.6278,  0.6758,  1.2250,  2.8273,  3.4187,
          4.8873,  4.6523], device='cuda:0'),
 tensor([ 3.1945,  3.1884,  2.3454,  2.3082,  1.1636,  0.5069, -0.4741, -2.1565,
         -3.8426, -4.4546], device='cuda:0'),
 tensor([-5.2937, -5.2492, -3.8341, -1.8240,  0.4251,  0.8989,  2.7448,  3.3648,
          4.4678,  5.6384], device='cuda:0'),
 tensor([ 0.3744,  0.7025,  0.6070,  0.4833,  0.2064,  0.4267, -0.1699, -0.6067,
         -0.4806, -1.1473], device='cuda:0'),
 tensor([-1.0738e+00, -3.6943e-01,  2.4852e-02,  3.2937e-01,  6.5252e-01,
          7.7789e-01,  1.2132e-01, -5.9203e-02, -1.0264e-03, -7.4198e-01],
        device='cuda:0'),
 tensor([-0.1713,  0.5082,  0.9018,  0.6628, -0.0024,  0.2095, -0.0091, -0.4350,
         -0.5546, -1.0252], device='cuda:0'),
 tensor([-1.0388, -0.3260,  0.0831,  0.3646,  0.7940,  0.8529,  0.0617, -0.0888,
         -0.0434, -0.8636], device='cuda:0'),
 tensor([-1.2231, -0.4530,  0.0561,  0.3627,  0.8681,  0.9417,  0.0866, -0.0671,
         -0.0115, -0.9339], device='cuda:0'),
 tensor([ 0.3548,  1.3097,  1.0009,  0.8695,  0.6335,  0.3279, -0.0457, -1.0147,
         -1.2233, -2.6824], device='cuda:0'),
 tensor([ 2.9447,  2.7454,  1.8651,  1.5199,  1.0671,  0.5608, -0.3293, -1.6419,
         -2.6663, -5.0699], device='cuda:0'),
 tensor([ 0.4612,  0.7837,  0.4918,  0.4509,  0.3666,  0.2485, -0.0970, -0.5367,
         -0.7132, -1.4971], device='cuda:0'),
 tensor([-1.7837, -1.6773, -1.4378, -0.4186,  0.9265,  0.9277,  0.9526,  1.4178,
          1.4488,  0.9391], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-2.4733, -1.0423, -0.3585,  0.4505,  0.4793,  0.8618,  1.0415,  1.1119,
          0.7003,  0.5541], device='cuda:0'),
 tensor([-1.1679, -1.1268, -0.4374, -0.3722,  0.1207,  0.4912,  0.4402,  0.6046,
          0.8745,  0.6392], device='cuda:0'),
 tensor([ 0.1028,  0.4530,  0.2121,  0.2043,  0.1798,  0.2192, -0.1362, -0.3238,
         -0.2627, -0.7982], device='cuda:0'),
 tensor([ 4.1463,  4.0453,  2.9126,  2.8586,  1.5909,  0.4791, -0.5041, -2.6885,
         -5.0305, -5.6388], device='cuda:0'),
 tensor([-0.6005, -0.0346,  0.0918,  0.1554,  0.2928,  0.0279,  0.1759,  0.3547,
          0.3065,  0.2311], device='cuda:0'),
 tensor([-2.8337, -2.3897, -0.9219, -0.7921,  0.0515,  1.0034,  1.6649,  2.0512,
          2.0443,  1.8370], device='cuda:0'),
 tensor([-0.0634,  0.8877,  0.9348,  0.7370,  0.5134,  0.7290,  0.0204, -1.4127,
         -1.1565, -2.6932], device='cuda:0'),
 tensor([ 1.0632,  1.2700,  0.8256,  0.8513,  0.6026,  0.2391, -0.1438, -0.7504,
         -1.3856, -2.4794], device='cuda:0'),
 tensor([-0.5016, -0.0828, -0.0814,  0.0272,  0.3145,  0.1986, -0.0030,  0.0691,
          0.2609,  0.2020], device='cuda:0'),
 tensor([ 2.7659,  3.1645,  2.7399,  2.2835,  0.7719,  0.7531, -0.4374, -2.2000,
         -2.7045, -3.1509], device='cuda:0'),
 tensor([ 2.0138,  2.2017,  1.6136,  1.4841,  0.6666,  0.3939, -0.3681, -1.2839,
         -2.6406, -2.0720], device='cuda:0'),
 tensor([ 0.4866,  0.9718,  0.5785,  0.5664,  0.3424,  0.4502, -0.2831, -0.8432,
         -0.5761, -1.6586], device='cuda:0'),
 tensor([-2.8474, -2.1098, -1.0536, -0.7057,  0.3072,  1.0012,  1.1835,  1.4651,
          1.4162,  0.6659], device='cuda:0'),
 tensor([-4.6295, -5.0451, -2.0922, -2.3404,  0.6059,  1.5799,  2.5796,  3.2856,
          4.4687,  5.1277], device='cuda:0'),
 tensor([ 1.0455,  1.3161,  0.7735,  0.7699,  0.6388,  0.2984, -0.2691, -1.1755,
         -1.2017, -2.4271], device='cuda:0'),
 tensor([-2.0871, -0.8720, -0.7264,  0.2448,  0.2934,  0.6125,  1.1236,  1.5676,
          1.4784,  1.2342], device='cuda:0'),
 tensor([-0.6038, -1.2073, -0.3997, -0.2215,  0.2713,  0.4393,  0.7543,  0.6906,
          0.9014,  1.0161], device='cuda:0'),
 tensor([-3.6223, -3.0835, -1.6626, -1.0649,  0.4081,  0.8679,  1.9623,  2.3750,
          2.7070,  2.4586], device='cuda:0'),
 tensor([ 0.9479,  1.4115,  1.1286,  1.0607,  0.4491,  0.8665, -0.4337, -1.4935,
         -1.2338, -2.6860], device='cuda:0'),
 tensor([-3.4930, -3.4461, -1.9512, -1.6499,  0.7262,  0.3410,  2.2740,  2.2818,
          3.6023,  3.9902], device='cuda:0'),
 tensor([-1.4640, -0.4698, -0.1800,  0.1199,  0.5643,  0.7013,  0.4069,  0.1246,
         -0.1049, -1.0057], device='cuda:0'),
 tensor([-4.3807, -3.4188, -3.4501, -1.0046,  0.6749,  1.0790,  1.9454,  2.3356,
          4.4424,  4.5903], device='cuda:0'),
 tensor([-1.2916, -1.3979, -1.1896, -0.2873,  0.4504,  0.6807,  0.6519,  1.2043,
          1.4546,  1.2220], device='cuda:0'),
 tensor([-3.0843, -2.5041, -0.7741, -0.7655,  0.1935,  1.2222,  1.8351,  2.4909,
          2.2253,  2.5237], device='cuda:0'),
 tensor([ 4.4412,  4.3025,  3.0280,  2.8424,  1.6485,  0.2955, -0.4197, -2.9140,
         -4.9909, -5.9853], device='cuda:0'),
 tensor([-5.5899, -3.7023, -3.8148, -1.0714,  1.0510,  2.3233,  1.6469,  2.9272,
          3.5182,  4.3839], device='cuda:0'),
 tensor([-0.5698, -1.3597, -0.9628, -0.7853,  1.0732,  0.8587,  0.1657,  0.7793,
          1.8471,  2.0931], device='cuda:0'),
 tensor([ 0.0817,  0.3426,  0.7311,  0.6098,  0.6005,  0.2727,  0.1037, -0.2900,
         -0.0349, -0.4382], device='cuda:0'),
 tensor([-1.8882, -1.1662, -0.2406, -0.6200,  0.3581,  0.6488,  1.0776,  1.1125,
          0.9051,  0.4095], device='cuda:0'),
 tensor([-0.2428,  0.0511,  0.0987,  0.0915,  0.1271,  0.1765, -0.0446,  0.0131,
          0.0153, -0.2278], device='cuda:0'),
 tensor([-3.1139, -1.4030, -1.1071,  0.7486,  0.4420,  0.9153,  1.7997,  2.3292,
          2.2164,  2.1394], device='cuda:0'),
 tensor([ 1.9894,  2.8322,  2.4492,  2.2241,  0.3889,  0.6083, -0.1804, -2.0309,
         -2.7828, -2.9427], device='cuda:0'),
 tensor([-1.8759, -0.7097,  0.2384,  0.8549,  0.7870,  0.7125,  0.1557, -0.1495,
         -0.2246, -1.0679], device='cuda:0'),
 tensor([-0.6838,  0.2673,  1.5502,  1.1029,  0.6999,  1.5219, -0.0102, -1.9793,
         -1.0427, -2.5813], device='cuda:0'),
 tensor([ 1.8999,  1.6901,  1.6114,  0.9471,  0.5225,  0.2370, -0.2223, -1.1066,
         -2.1304, -2.4724], device='cuda:0'),
 tensor([-0.7465,  0.0184,  0.1031, -0.3124,  0.3508,  0.1162,  0.3714,  0.5966,
          0.5117,  0.6201], device='cuda:0'),
 tensor([ 1.8210,  1.9439,  1.4978,  1.3581,  0.9393,  0.3876, -0.3642, -1.5801,
         -1.7241, -2.9931], device='cuda:0'),
 tensor([-0.6998, -0.1335, -0.0126, -0.2101,  0.2616,  0.4586,  0.4158,  0.2124,
          0.1573, -0.4274], device='cuda:0'),
 tensor([-7.2472, -3.9157, -3.0970, -0.4165,  1.7714,  2.4942,  3.0579,  2.7371,
          3.7515,  4.2010], device='cuda:0'),
 tensor([ 0.3766,  0.8862,  0.3801,  0.4544,  0.4044,  0.4237, -0.0649, -0.6893,
         -0.6653, -1.8342], device='cuda:0'),
 tensor([ 1.6397,  1.6935,  1.1536,  1.0646,  0.6388,  0.2722, -0.1945, -0.8274,
         -2.3198, -1.5889], device='cuda:0'),
 tensor([-3.0668, -3.8573, -1.8648, -1.5207, -0.0388,  1.2599,  1.9217,  2.5280,
          3.3676,  3.3416], device='cuda:0'),
 tensor([ 0.5027,  0.6575,  0.9571,  0.5159,  0.1602,  0.1693, -0.1044, -0.3937,
         -0.4756, -0.8738], device='cuda:0'),
 tensor([ 1.4977,  1.5568,  1.0280,  0.9175,  0.8241,  0.1508, -0.2852, -1.3236,
         -1.4965, -2.6712], device='cuda:0'),
 tensor([-0.7983, -0.5778, -0.4208, -0.0500,  0.2987,  0.4648,  0.2919,  0.4724,
          0.5135,  0.2674], device='cuda:0'),
 tensor([ 2.3571,  2.4032,  1.7198,  1.6228,  0.9816,  0.2927, -0.2463, -1.1964,
         -3.0811, -2.0577], device='cuda:0'),
 tensor([ 3.3895,  3.2900,  2.3669,  2.1472,  1.0546,  0.6460, -0.5161, -2.0741,
         -4.6957, -3.5453], device='cuda:0'),
 tensor([-0.7704,  0.0851,  0.3949,  0.2205,  0.4376,  0.9042,  0.0977, -0.7220,
         -0.4326, -1.8822], device='cuda:0'),
 tensor([-6.1799e+00, -7.2882e+00, -2.5369e+00, -2.5735e+00,  3.7330e-03,
          2.9079e+00,  3.3417e+00,  4.2657e+00,  5.0754e+00,  5.3705e+00],
        device='cuda:0'),
 tensor([ 0.1954,  0.3552,  0.7654,  0.4911,  0.3828,  0.2038, -0.0294, -0.3248,
         -0.0742, -0.4943], device='cuda:0'),
 tensor([ 1.5466,  1.6080,  1.1519,  1.0597,  0.5198,  0.3766, -0.1780, -0.9905,
         -2.4667, -1.9488], device='cuda:0'),
 tensor([-3.0909, -2.0534, -1.8341,  0.2728,  0.5856,  1.1525,  1.5366,  2.5698,
          2.4215,  2.9161], device='cuda:0'),
 tensor([ 0.8767,  1.2403,  0.9235,  0.8432,  0.4387,  0.7817, -0.3072, -1.2334,
         -1.0307, -2.3224], device='cuda:0'),
 tensor([-1.7263, -2.1642, -1.7430, -0.2909, -0.1861,  0.4191,  0.8742,  1.8603,
          2.3302,  2.9834], device='cuda:0'),
 tensor([-1.4423, -1.2047, -0.4081, -0.5132,  0.8992,  0.3217,  0.9351,  1.3319,
          1.9243,  2.2493], device='cuda:0'),
 tensor([ 0.8870,  1.3024,  1.1891,  1.0176,  0.3821,  0.8967, -0.4465, -1.6701,
         -1.1757, -2.5764], device='cuda:0'),
 tensor([ 1.7562,  1.8143,  1.2642,  1.1821,  0.7026,  0.2527, -0.2163, -0.8889,
         -2.4153, -1.6376], device='cuda:0'),
 tensor([ 0.4071,  1.0293,  2.1019,  1.5275,  0.4194,  0.8441, -0.2724, -1.7427,
         -1.0649, -1.9792], device='cuda:0'),
 tensor([-3.0119, -2.9633, -1.6495, -1.3473, -0.0487,  0.7240,  2.0782,  2.5533,
          2.8513,  2.3418], device='cuda:0'),
 tensor([-2.9036, -2.5496, -1.0202,  0.4678,  0.7313, -0.5666,  1.8670,  2.7004,
          2.8612,  3.8223], device='cuda:0'),
 tensor([ 2.1888,  2.5193,  1.9508,  1.7569,  0.9356,  0.5744, -0.3605, -1.5931,
         -2.3628, -3.9304], device='cuda:0'),
 tensor([-1.3763, -1.5915, -1.2516, -0.3377,  0.1325,  0.2816,  0.6842,  1.3657,
          1.4789,  1.8243], device='cuda:0'),
 tensor([-2.6263, -1.5851, -0.5576, -0.2670,  0.4745,  0.9552,  0.8311,  0.9093,
          0.8729, -0.1353], device='cuda:0'),
 tensor([-0.8568, -0.3064, -0.0376,  0.1358,  0.0968,  0.2525,  0.4174,  0.5082,
          0.2841,  0.1775], device='cuda:0'),
 tensor([-0.7941,  0.0261,  0.8768,  0.6206,  0.1203,  0.3958,  0.0760, -0.2777,
         -0.2577, -0.7832], device='cuda:0'),
 tensor([-1.7228, -0.3087,  0.9087,  1.0955,  1.0346,  1.4610,  0.0872, -1.3485,
         -0.7596, -2.0986], device='cuda:0'),
 tensor([ 1.4020,  1.6314,  1.0708,  1.1137,  0.7731,  0.3221, -0.1763, -1.0210,
         -1.7515, -3.1386], device='cuda:0'),
 tensor([ 2.2292,  2.2308,  2.1454,  1.6715,  1.1530,  0.6604, -0.2984, -1.5232,
         -1.6744, -2.1879], device='cuda:0'),
 tensor([-1.2118, -0.3154,  0.2895,  0.5238,  0.2366,  0.3096,  0.1928,  0.3359,
         -0.0270, -0.4415], device='cuda:0'),
 tensor([-1.7314, -1.9516, -0.5905, -0.7373, -0.0218,  0.7992,  0.7802,  1.1426,
          1.3330,  1.2670], device='cuda:0'),
 tensor([-1.0139, -0.6663, -0.0989, -0.3713,  0.3251,  0.6627,  0.3215,  0.4118,
          0.5309, -0.2312], device='cuda:0'),
 tensor([-4.6360, -4.2578, -2.1919, -1.4671,  0.2313,  1.3733,  2.5269,  2.8299,
          3.2416,  2.9003], device='cuda:0'),
 tensor([ 0.1831,  0.5054,  0.5410,  0.3201,  0.1092,  0.0673,  0.0101, -0.1777,
         -0.2322, -0.3714], device='cuda:0'),
 tensor([-0.2365,  0.1024,  0.1083,  0.0723, -0.0075, -0.0200,  0.1280,  0.3052,
         -0.0331, -0.1820], device='cuda:0'),
 tensor([ 0.3914,  0.9131,  0.3930,  0.4396,  0.3890,  0.4259, -0.2455, -0.8179,
         -0.6244, -1.7094], device='cuda:0'),
 tensor([-0.5639,  0.0630,  0.2436,  0.1882,  0.1280, -0.0007,  0.0620,  0.1680,
          0.0420, -0.1904], device='cuda:0'),
 tensor([ 0.6566,  0.6276,  0.4298,  0.1900,  0.2468,  0.1287, -0.0125, -0.2434,
         -1.0559, -1.0736], device='cuda:0'),
 tensor([ 0.7054,  1.0248,  0.8927,  0.8552,  0.3167,  0.2594, -0.0245, -0.6230,
         -1.2910, -1.1997], device='cuda:0'),
 tensor([ 0.2252,  1.0878,  1.1138,  0.8282,  0.4730, -0.1330,  0.0847, -0.4940,
         -1.0307, -1.7283], device='cuda:0'),
 tensor([-2.5508, -1.3601, -0.7145,  0.6441,  0.5002,  0.9202,  1.3673,  1.6366,
          1.9477,  1.5592], device='cuda:0'),
 tensor([-0.9291, -0.0030,  0.3766,  0.3333,  0.1598, -0.0159,  0.1352,  0.2730,
          0.0427, -0.2849], device='cuda:0'),
 tensor([-1.8336, -1.3577, -1.4200, -0.2917,  0.6326,  0.6228,  0.7072,  1.3793,
          2.2934,  3.2819], device='cuda:0'),
 tensor([-0.2745,  0.0948,  0.1301,  0.1148,  0.0993,  0.0244,  0.0493,  0.1328,
          0.0522, -0.0350], device='cuda:0'),
 tensor([ 7.7076,  6.9030,  4.6638,  4.3590,  2.6535,  0.9265, -0.1040, -3.9379,
         -8.3899, -9.6560], device='cuda:0'),
 tensor([-0.6683, -0.1517,  0.0843,  0.2346,  0.4822,  0.5302,  0.0132, -0.0374,
         -0.0131, -0.5668], device='cuda:0'),
 tensor([-0.8317, -0.0217,  0.4617,  0.3355,  0.1491,  0.0414,  0.2047,  0.2230,
          0.0442, -0.3958], device='cuda:0'),
 tensor([-1.4103, -0.5329,  0.0153,  0.6388,  0.6241,  0.6348,  0.2062,  0.1519,
          0.0392, -0.5179], device='cuda:0'),
 tensor([-3.6456, -2.9850, -2.7186, -0.4679,  0.8553,  1.9047,  1.3409,  1.8589,
          2.9625,  3.0633], device='cuda:0'),
 tensor([ 0.6034,  1.1683,  0.6110,  0.6734,  0.4266,  0.5383, -0.3148, -1.1141,
         -0.8404, -2.0962], device='cuda:0'),
 tensor([ 4.8941,  4.6592,  3.3797,  3.1922,  1.8049,  0.4109, -0.5572, -3.1329,
         -5.5979, -6.2677], device='cuda:0'),
 tensor([-9.0679, -8.6195, -5.4539, -3.3947,  0.5366,  2.1741,  4.9691,  6.4296,
          9.7468, 11.7395], device='cuda:0'),
 tensor([-0.7459, -0.1882,  0.0841,  0.2618,  0.5475,  0.5978,  0.0233, -0.0482,
         -0.0194, -0.6290], device='cuda:0'),
 tensor([ 0.7592,  1.1023,  0.7046,  0.6618,  0.5327,  0.3112, -0.1020, -0.7869,
         -1.0727, -2.1377], device='cuda:0'),
 tensor([ 1.3245,  1.2094,  1.0172,  0.5843,  0.3975,  0.1994, -0.1109, -0.7348,
         -1.7773, -1.9365], device='cuda:0'),
 tensor([-3.1772, -4.0365, -1.6048, -2.0857,  0.1493,  1.2919,  2.3492,  2.4120,
          3.2366,  2.9807], device='cuda:0'),
 tensor([-2.2996, -2.5406, -0.9912, -1.0229, -0.0354,  0.8587,  1.5624,  1.8162,
          1.9300,  2.2362], device='cuda:0'),
 tensor([-5.3538, -4.9689, -3.4025, -1.6540,  0.0065,  1.3469,  2.3002,  3.3669,
          4.1979,  4.1472], device='cuda:0'),
 tensor([ 0.0986,  0.6257,  1.4618,  0.9095,  0.3281,  0.4771, -0.3274, -0.7303,
         -0.6456, -1.3500], device='cuda:0'),
 tensor([ 0.6480,  1.1242,  1.5269,  1.0316,  0.4622,  1.0028, -0.1595, -2.0514,
         -1.3636, -2.3654], device='cuda:0'),
 tensor([-1.2397, -1.0510, -0.2732, -0.3909,  0.0064,  0.5901,  0.5293,  0.7999,
          0.8378,  0.7956], device='cuda:0'),
 tensor([ 0.3993,  0.8760,  0.8491,  0.6218,  0.3953,  0.1082, -0.0750, -0.6413,
         -0.7905, -1.5471], device='cuda:0'),
 tensor([ 0.0714,  0.7050,  0.6463,  0.5533,  0.2269,  0.1518,  0.0595, -0.2059,
         -0.7556, -1.2728], device='cuda:0'),
 tensor([ 0.2631,  0.8993,  0.4708,  0.4814,  0.3019,  0.4980, -0.1928, -0.8864,
         -0.6351, -1.8432], device='cuda:0'),
 tensor([ 1.1526,  1.5896,  1.6460,  1.2000,  0.7478,  0.7865, -0.0886, -1.5197,
         -1.3821, -1.6027], device='cuda:0'),
 tensor([ 4.4322,  4.3287,  3.1582,  2.7811,  2.1763,  0.1598, -0.4921, -3.2089,
         -4.1637, -6.0046], device='cuda:0'),
 tensor([ 0.2340,  0.4807,  0.8474,  0.7780,  0.7872,  0.4326,  0.0750, -0.4264,
         -0.1726, -0.6500], device='cuda:0'),
 tensor([-1.3555, -0.6737, -0.0125, -0.1019,  0.4677,  0.8476,  0.2770,  0.0192,
          0.2264, -0.8894], device='cuda:0'),
 tensor([-0.6565, -0.7234, -0.1917, -0.2428,  0.1046,  0.3880,  0.2003,  0.4486,
          0.5647,  0.4045], device='cuda:0'),
 tensor([-2.5113, -1.3986, -0.4309,  0.2666,  0.4653,  0.9490,  0.7690,  0.6965,
          0.6227,  0.0079], device='cuda:0'),
 tensor([ 1.5357,  2.0170,  2.0395,  1.6879,  0.4369,  0.5400, -0.3016, -1.9316,
         -1.7584, -2.2767], device='cuda:0'),
 tensor([-0.4337,  0.4073,  0.6977,  0.4412,  0.2556,  0.2066, -0.0620, -0.3479,
         -0.4099, -0.9891], device='cuda:0'),
 tensor([ 0.3731,  1.1459,  0.6041,  0.6332,  0.3819,  0.6459, -0.2353, -1.1938,
         -0.8466, -2.4171], device='cuda:0'),
 tensor([-1.7989, -0.7777,  0.0961, -0.0902,  0.1083,  0.4976,  0.8990,  0.8826,
          0.5317,  0.1827], device='cuda:0'),
 tensor([ 1.5925,  1.8153,  2.0445,  1.5490,  0.7650,  0.6208, -0.4958, -1.7907,
         -1.9113, -3.0052], device='cuda:0'),
 tensor([-3.4828, -3.3383, -1.6351, -1.1857,  0.4575,  1.3883,  1.8648,  1.9407,
          2.3185,  1.8106], device='cuda:0'),
 tensor([-3.2943, -1.5876, -1.9341,  0.2061,  0.3628,  0.7713,  1.2795,  2.4998,
          3.0804,  3.2596], device='cuda:0'),
 tensor([-0.3369,  0.4201,  0.5331,  0.3481,  0.2657,  0.1445, -0.0321, -0.3151,
         -0.3689, -0.9650], device='cuda:0'),
 tensor([-0.5775, -0.1054,  0.0901,  0.2067,  0.4087,  0.4549,  0.0034, -0.0300,
         -0.0113, -0.4995], device='cuda:0'),
 tensor([-2.1069, -1.1137, -0.3654, -0.3928,  0.2757,  0.6913,  0.6627,  0.6026,
          0.6182, -0.1916], device='cuda:0'),
 tensor([-0.0799,  0.1234,  0.1287,  0.0780,  0.0649,  0.0851, -0.0708,  0.0081,
          0.0116, -0.1344], device='cuda:0'),
 tensor([-1.7367, -0.7778, -0.3261,  0.5415,  0.5787,  0.6189,  0.4496,  0.7718,
          0.5096,  0.0678], device='cuda:0'),
 tensor([-0.4840, -0.0705, -0.3349, -0.1553,  0.2205,  0.1845,  0.0780,  0.2387,
          0.4028,  0.4562], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([ 0.6145,  0.6708,  0.5863,  0.3249,  0.2074,  0.1119, -0.0958, -0.3377,
         -0.8082, -0.9737], device='cuda:0'),
 tensor([-4.0318, -4.5627, -2.0136, -1.7315, -0.1620,  1.7654,  1.7693,  2.7312,
          3.2218,  3.5497], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([ 0.2897,  0.9924,  0.7574,  0.6492,  0.4816,  0.2044, -0.1055, -0.8058,
         -0.8578, -1.9402], device='cuda:0'),
 tensor([ 2.8360,  2.2883,  1.6731,  0.8730,  0.7692,  0.4398,  0.0616, -1.1919,
         -3.2740, -3.6384], device='cuda:0'),
 tensor([-1.3429e+00, -6.4376e-01,  9.8787e-04,  3.3519e-01,  2.4263e-01,
          2.1298e-01,  1.7095e-02,  2.9700e-01,  1.6203e-01, -2.3717e-01],
        device='cuda:0'),
 tensor([ 0.6547,  1.0511,  0.9911,  0.8321,  0.3485,  0.6861, -0.3493, -1.1392,
         -0.9335, -2.0236], device='cuda:0'),
 tensor([ 0.3303,  0.7119,  0.9790,  0.5099,  0.1004,  0.0928,  0.0639, -0.2316,
         -0.5921, -0.9744], device='cuda:0'),
 tensor([ 3.3944,  3.7590,  3.3336,  2.8144,  1.0397,  0.5152, -0.7218, -3.1613,
         -3.5382, -5.4659], device='cuda:0'),
 tensor([-1.9318, -0.9618,  0.3664,  0.4905,  0.2228,  0.7063,  0.4769,  0.3005,
          0.1110, -0.3867], device='cuda:0'),
 tensor([-3.0933, -2.0199, -0.0967, -0.0464,  0.6710,  1.0835,  1.0571,  1.0791,
          1.0794,  0.1129], device='cuda:0'),
 tensor([-2.2473, -2.4313, -0.9183, -1.3458,  0.4209,  1.1061,  1.6704,  1.6657,
          2.1125,  2.0838], device='cuda:0'),
 tensor([ 0.6222,  0.6053,  0.4151,  0.1831,  0.2365,  0.1248, -0.0138, -0.2300,
         -1.0063, -1.0295], device='cuda:0'),
 tensor([ 0.2795,  0.7359,  0.3220,  0.3480,  0.3074,  0.3449, -0.2024, -0.6262,
         -0.4840, -1.3577], device='cuda:0'),
 tensor([-1.7177, -0.6644, -0.0921,  0.4018,  0.6321,  0.8822,  0.3073,  0.0051,
         -0.0146, -0.9881], device='cuda:0'),
 tensor([-2.0624, -2.1233, -1.7025, -0.4240,  0.0918,  0.3104,  0.9977,  1.9621,
          2.4045,  2.8860], device='cuda:0'),
 tensor([-2.1955, -3.0460, -1.6114, -1.1993, -0.0070,  0.4200,  1.8189,  1.9476,
          2.3391,  3.2177], device='cuda:0'),
 tensor([ 0.6778,  1.3666,  0.5747,  0.6743,  0.5981,  0.6331, -0.3559, -1.3088,
         -0.9837, -2.6099], device='cuda:0'),
 tensor([-4.5044, -4.6606, -3.2394, -1.7876,  0.3123,  0.5042,  3.3480,  3.6865,
          3.9806,  5.0826], device='cuda:0'),
 tensor([ 1.4188,  1.7833,  1.4783,  1.3071,  0.4094,  0.3438, -0.2070, -1.1253,
         -1.7139, -1.6601], device='cuda:0'),
 tensor([ 2.9215,  2.9280,  2.1222,  2.0018,  1.2125,  0.3195, -0.2784, -1.4803,
         -3.7358, -2.4790], device='cuda:0'),
 tensor([-1.0498, -0.9130,  0.0182, -0.3478,  0.3246,  0.5503,  0.5723,  0.5853,
          0.7962,  0.3307], device='cuda:0'),
 tensor([-2.8415, -2.6355, -0.9573, -0.7098,  0.2484,  1.1138,  1.0755,  1.3270,
          1.5896,  1.0816], device='cuda:0'),
 tensor([ 4.1537,  4.4737,  3.4576,  3.1543,  1.6674,  0.9131, -0.5856, -2.8847,
         -4.4673, -7.1926], device='cuda:0'),
 tensor([-3.8599, -3.6017, -1.7815, -1.1641,  0.0523,  1.5025,  1.9783,  2.5720,
          2.5562,  2.3060], device='cuda:0'),
 tensor([-0.9896, -0.3251, -0.0351,  0.3267,  0.3824,  0.4064,  0.0907,  0.1088,
          0.1033, -0.1101], device='cuda:0'),
 tensor([ 0.3280,  0.2456,  0.3597,  0.1227,  0.2780,  0.2277,  0.0739, -0.1858,
         -0.9025, -0.9447], device='cuda:0'),
 tensor([ 0.0199,  0.2226,  0.3436,  0.2764,  0.2755,  0.1831, -0.0387, -0.1278,
         -0.0322, -0.2750], device='cuda:0'),
 tensor([-1.8852, -0.7792,  0.7213,  1.1860,  0.9008,  1.3577,  0.3493, -0.8532,
         -0.4371, -1.4450], device='cuda:0'),
 tensor([ 0.4907,  0.8652,  0.5397,  0.5305,  0.3077,  0.4023, -0.2515, -0.8066,
         -0.6527, -1.5494], device='cuda:0'),
 tensor([-1.4220, -0.9245, -0.1805,  0.5196,  0.5404, -0.1036,  0.9361,  1.4881,
          1.6354,  1.7756], device='cuda:0'),
 tensor([ 1.2214,  1.5271,  1.1222,  1.0711,  0.6322,  0.3692, -0.2432, -0.9516,
         -1.3940, -2.5270], device='cuda:0'),
 tensor([-2.7267, -1.8232, -0.5023, -0.2321,  0.3535,  0.8682,  1.1670,  1.2992,
          1.1237,  0.5462], device='cuda:0'),
 tensor([-2.9562, -1.4374, -2.3582, -0.1846,  1.3750,  0.4556,  1.5790,  1.8373,
          3.0688,  5.2219], device='cuda:0'),
 tensor([ 0.2673,  1.1713,  1.0443,  1.2536,  0.2836,  0.2832, -0.0703, -0.9833,
         -1.3061, -2.4840], device='cuda:0'),
 tensor([ 0.1569,  0.6788,  0.4045,  0.3936,  0.1992,  0.3588, -0.1137, -0.6401,
         -0.4959, -1.4183], device='cuda:0'),
 tensor([ 0.7445,  0.9313,  0.6620,  0.5658,  0.3767, -0.0044, -0.0435, -0.3460,
         -0.8243, -0.7061], device='cuda:0'),
 tensor([ 1.6394,  1.6809,  1.1320,  1.0379,  0.6238,  0.2906, -0.1914, -0.8350,
         -2.3521, -1.6316], device='cuda:0'),
 tensor([-2.3140, -2.6717, -0.9098, -0.9748, -0.0133,  1.0249,  1.1445,  1.5302,
          1.7929,  1.7135], device='cuda:0'),
 tensor([-0.8205, -0.5999, -0.4371, -0.0523,  0.3068,  0.4787,  0.3025,  0.4860,
          0.5290,  0.2797], device='cuda:0'),
 tensor([-1.7843, -1.4344, -0.7202, -0.4251,  0.3519,  0.6323,  0.5641,  0.7761,
          0.9368,  0.3995], device='cuda:0'),
 tensor([-1.6823, -0.7999, -0.8387,  0.1754,  0.1231,  0.5485,  0.6585,  1.2642,
          1.2821,  1.5787], device='cuda:0'),
 tensor([-0.6019,  0.3233,  1.0829,  0.7330,  0.2928,  0.3014, -0.1525, -0.3586,
         -0.3902, -0.8944], device='cuda:0'),
 tensor([-1.7627, -2.0305, -0.9078, -0.8380,  0.1643,  0.3578,  1.0598,  1.2167,
          1.8094,  2.1792], device='cuda:0'),
 tensor([ 0.1778,  0.5748,  0.2612,  0.2537,  0.2413,  0.2881, -0.1578, -0.4543,
         -0.3538, -1.0537], device='cuda:0'),
 tensor([ 1.3517,  1.6564,  1.0797,  1.1185,  0.7788,  0.3050, -0.1391, -1.0271,
         -1.7974, -3.2474], device='cuda:0'),
 tensor([ 2.2904,  2.6686,  2.0988,  1.8224,  1.1214,  0.3666, -0.0139, -2.5668,
         -2.6023, -4.4519], device='cuda:0'),
 tensor([-1.0114, -0.3576,  0.2133,  0.4042,  0.8796,  0.8991,  0.1021, -0.3339,
         -0.0275, -0.7631], device='cuda:0'),
 tensor([-1.2153, -0.0607,  0.0832,  0.1924,  0.4409,  0.5879,  0.3999, -0.0835,
         -0.2802, -1.3223], device='cuda:0'),
 tensor([-0.7532, -0.7671, -0.2482, -0.3600,  0.1038,  0.4172,  0.1839,  0.3971,
          0.4567,  0.4053], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-3.6325, -3.4917, -2.1865, -0.8384,  0.2194,  0.7638,  1.8583,  2.3601,
          3.1228,  2.6953], device='cuda:0'),
 tensor([-7.5468, -7.3177, -3.1089, -3.0536,  1.0986,  2.6129,  4.6454,  6.2400,
          8.2634, 10.0995], device='cuda:0'),
 tensor([-0.7490, -0.9054, -0.0408, -0.5965,  0.8500,  1.1284,  0.5866,  0.6846,
          0.6298, -0.5762], device='cuda:0'),
 tensor([-4.0082, -2.5073, -1.3619,  0.2201,  1.1125,  1.3233,  1.4060,  1.7314,
          1.5719,  1.0647], device='cuda:0'),
 tensor([-2.5105, -2.6648, -1.0900, -1.4244,  0.3206,  0.8232,  1.5199,  1.7130,
          2.3559,  2.0105], device='cuda:0'),
 tensor([-2.0067, -1.7713, -1.5286, -0.3860,  0.4614,  0.6357,  0.7118,  1.2024,
          1.6865,  1.5862], device='cuda:0'),
 tensor([-0.0242,  0.5904,  0.4774,  0.5497,  0.2155,  0.3794, -0.1072, -0.5921,
         -0.6428, -1.6247], device='cuda:0'),
 tensor([ 1.6867,  1.7362,  1.2407,  1.1417,  0.7548,  0.0324, -0.0208, -0.8093,
         -1.7804, -1.3933], device='cuda:0'),
 tensor([-4.0680, -4.2726, -2.0085, -1.4845,  0.2711,  0.9541,  1.8946,  2.2807,
          3.3688,  3.0645], device='cuda:0'),
 tensor([-2.4745, -0.9339, -0.1842,  0.5133,  0.5560,  0.7810,  0.8607,  0.7296,
          0.3784, -0.0262], device='cuda:0'),
 tensor([-0.8756, -0.9408, -0.2841, -0.3126,  0.0308,  0.4936,  0.2697,  0.5820,
          0.6796,  0.6456], device='cuda:0'),
 tensor([ 2.1027,  1.6275,  1.1532,  0.6059,  0.7700,  0.3412,  0.0186, -0.9480,
         -3.3987, -3.0960], device='cuda:0'),
 tensor([ 0.5172,  1.0528,  1.4196,  0.9729,  0.4228,  0.5884, -0.3241, -1.0811,
         -0.9665, -1.9898], device='cuda:0'),
 tensor([-1.9458, -1.3818, -1.1984, -0.0778,  0.6218,  1.1150,  0.6380,  1.1278,
          1.4135,  1.5837], device='cuda:0'),
 tensor([ 2.5996,  2.8150,  2.2408,  1.8777,  1.1736,  0.4280, -0.1618, -2.5322,
         -2.6055, -4.2794], device='cuda:0'),
 tensor([-0.7434, -0.2050,  0.0397,  0.3267,  0.2387,  0.2947,  0.0860,  0.1725,
          0.0441, -0.2237], device='cuda:0'),
 tensor([-4.3545, -4.7072, -2.4274, -2.3949,  0.6716,  0.5995,  1.8413,  2.4961,
          4.0938,  4.7960], device='cuda:0'),
 tensor([ 0.7185,  0.9687,  0.5736,  0.5654,  0.4616,  0.2162, -0.1689, -0.7987,
         -0.8700, -1.7895], device='cuda:0'),
 tensor([-1.2028, -0.2982, -0.6403, -0.3699,  0.6901,  0.4386,  0.4190,  0.8381,
          1.1982,  1.3127], device='cuda:0'),
 tensor([-3.0642, -3.3775, -1.5079, -1.2579, -0.0202,  1.3649,  1.5188,  2.0472,
          2.3119,  2.3474], device='cuda:0'),
 tensor([ 0.5231,  0.7964,  0.8049,  0.6591,  0.2858,  0.5599, -0.3129, -0.8770,
         -0.6997, -1.5582], device='cuda:0'),
 tensor([-1.6470, -0.5372, -0.1112,  0.2669,  0.4321,  0.5258,  0.5734,  0.4072,
          0.2159, -0.3277], device='cuda:0'),
 tensor([-1.2621, -0.5496, -0.1640,  0.2310,  0.5256,  0.7141,  0.2341,  0.1747,
          0.1594, -0.5212], device='cuda:0'),
 tensor([ 0.7799,  1.4647,  0.7264,  0.8325,  0.5514,  0.6629, -0.3797, -1.4233,
         -1.0631, -2.6622], device='cuda:0'),
 tensor([-2.4499, -2.6119, -1.4214, -0.9683,  0.3198,  0.8433,  1.2052,  1.5505,
          2.0325,  1.7589], device='cuda:0'),
 tensor([ 0.9184,  1.1795,  0.7590,  0.7634,  0.5564,  0.2536, -0.1204, -0.7297,
         -1.2241, -2.2594], device='cuda:0'),
 tensor([-2.4642, -1.8440, -0.6619, -0.8698,  0.2906,  1.0053,  1.4215,  1.7383,
          1.6375,  1.4901], device='cuda:0'),
 tensor([ 1.6866,  1.9637,  1.9931,  1.5095,  0.8695,  0.3329, -0.2862, -1.6064,
         -1.9164, -2.9033], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-0.5162, -0.5093, -0.0350, -0.3649,  0.6506,  0.6179,  0.6446,  0.3884,
          0.2784, -0.4083], device='cuda:0'),
 tensor([-2.9086, -2.4258, -0.9487, -1.0289, -0.0160,  0.8418,  1.8419,  2.2360,
          2.1893,  2.4920], device='cuda:0'),
 tensor([-1.3348, -0.9616, -0.6669,  0.0072,  0.4244,  0.6320,  0.5518,  0.6079,
          0.9344,  0.5832], device='cuda:0'),
 tensor([ 2.2172,  2.2678,  1.6168,  1.4088,  0.9169,  0.1304, -0.2109, -1.6676,
         -2.4381, -3.3486], device='cuda:0'),
 tensor([-1.1978, -0.1819,  0.7390,  0.7100,  0.0030,  0.4088,  0.1676, -0.2447,
         -0.3586, -0.9677], device='cuda:0'),
 tensor([-2.4499, -1.5681, -1.1269, -0.1598,  0.5634,  0.6075,  1.4146,  1.8299,
          2.2700,  2.2602], device='cuda:0'),
 tensor([ 0.3944,  0.9700,  0.7348,  0.6506,  0.3847,  0.4979, -0.2752, -0.9625,
         -0.7617, -1.8160], device='cuda:0'),
 tensor([ 0.3473,  0.5900,  0.4541,  0.3564,  0.1858,  0.0601, -0.0577, -0.1958,
         -0.4979, -0.4809], device='cuda:0'),
 tensor([ 0.0926,  0.2272,  0.0163,  0.2534,  0.1036,  0.1721,  0.1909,  0.1181,
         -0.1720,  0.0965], device='cuda:0'),
 tensor([-6.9995, -5.8217, -2.5466, -1.7459,  0.0671,  2.3192,  4.2110,  5.1785,
          4.8936,  4.3302], device='cuda:0'),
 tensor([ 2.0693,  2.4179,  1.7433,  1.7939,  0.9509,  0.4947, -0.3329, -1.5555,
         -2.5361, -4.2534], device='cuda:0'),
 tensor([ 1.5971,  1.7529,  1.0902,  1.0476,  0.6856,  0.1849, -0.1491, -0.8731,
         -2.0833, -3.1676], device='cuda:0'),
 tensor([ 0.4360,  0.5978,  0.4684,  0.3537,  0.1747,  0.1387, -0.0984, -0.2862,
         -0.7272, -0.7409], device='cuda:0'),
 tensor([-1.2310, -0.5771, -0.1765,  0.3041,  0.5980,  0.6751,  0.2603,  0.2564,
          0.1321, -0.2384], device='cuda:0'),
 tensor([-2.2172, -2.7160, -0.8387, -0.8587, -0.0547,  0.9739,  0.9822,  1.5921,
          2.1105,  2.3322], device='cuda:0'),
 tensor([-0.4590,  0.1227,  0.2298,  0.2061,  0.1545, -0.0276,  0.2027,  0.2033,
          0.0703,  0.0342], device='cuda:0'),
 tensor([-0.7323, -0.0785,  0.1435,  0.1928,  0.4011,  0.4123, -0.0341, -0.2933,
         -0.1765, -0.6471], device='cuda:0'),
 tensor([-0.0762,  0.0267,  0.1184,  0.0947,  0.1819,  0.1943, -0.0843, -0.0258,
          0.1115, -0.1421], device='cuda:0'),
 tensor([-1.6436, -0.8403, -0.0069,  0.3685,  1.0140,  1.1867,  0.1298, -0.0327,
          0.0408, -1.1090], device='cuda:0'),
 tensor([-0.6167, -0.0343, -0.0465,  0.0170,  0.2791,  0.3759,  0.1788,  0.0655,
         -0.0508, -0.5048], device='cuda:0'),
 tensor([-4.1759, -5.0792, -2.6611, -2.4456,  0.3617,  1.9283,  2.3056,  3.0131,
          4.2672,  5.0409], device='cuda:0'),
 tensor([ 0.4598,  0.4243,  0.3196,  0.1204,  0.1911,  0.1578, -0.0041, -0.1338,
         -0.7532, -0.8315], device='cuda:0'),
 tensor([ 2.7786,  2.7880,  1.7343,  1.7309,  1.0988,  0.2468, -0.2619, -1.3919,
         -3.4380, -5.0029], device='cuda:0'),
 tensor([-5.9078, -6.3782, -2.6356, -2.0635, -0.4493,  2.2547,  3.5947,  5.1299,
          5.6405,  6.6757], device='cuda:0'),
 tensor([-0.2007,  0.3067,  0.5219,  0.4742,  0.2616,  0.3369, -0.0527, -0.4301,
         -0.6879, -1.0487], device='cuda:0'),
 tensor([-2.0413, -1.9851, -1.5028, -0.3525,  0.6041,  0.7498,  0.7760,  1.4642,
          1.5999,  1.3410], device='cuda:0'),
 tensor([-0.8354, -0.2894,  0.0565,  0.3316,  0.7062,  0.7665,  0.0584, -0.1611,
          0.1768, -0.5924], device='cuda:0'),
 tensor([-0.1895, -0.1569, -0.1481, -0.0124,  0.2152,  0.1746,  0.0477,  0.1522,
          0.2300,  0.0743], device='cuda:0'),
 tensor([-7.4646, -4.6998, -3.2122,  0.1501,  1.6018,  1.8021,  3.3294,  4.3230,
          4.2843,  4.6786], device='cuda:0'),
 tensor([-0.0873,  0.1137,  0.1151,  0.0504,  0.0568,  0.0747, -0.0628,  0.0360,
          0.0193, -0.1350], device='cuda:0'),
 tensor([-1.7414, -0.7329, -0.0058,  0.6007,  0.3859,  0.3050,  0.3108,  0.6396,
          0.2247,  0.0146], device='cuda:0'),
 tensor([-0.9940, -0.1219,  0.3455,  0.4362,  0.1110,  0.1824,  0.0394, -0.0019,
         -0.0818, -0.6570], device='cuda:0'),
 tensor([-0.9478, -0.0073,  0.7776,  0.5390,  0.2261,  0.1454,  0.0532,  0.0168,
          0.0575, -0.4246], device='cuda:0'),
 tensor([-2.3036, -1.2859, -0.2952, -0.4767,  0.3784,  0.7838,  0.7586,  0.7270,
          0.7395, -0.1386], device='cuda:0'),
 tensor([ 0.7375,  1.5012,  0.9118,  0.8909,  0.7474,  0.6960, -0.5628, -1.4428,
         -1.0666, -2.9991], device='cuda:0'),
 tensor([ 3.1234,  3.0812,  2.1862,  1.8522,  1.5271, -0.1577, -0.2448, -1.9981,
         -2.9754, -3.8312], device='cuda:0'),
 tensor([ 0.7588,  0.9385,  0.6424,  0.5380,  0.4285,  0.2082, -0.1391, -0.6497,
         -1.0955, -1.7168], device='cuda:0'),
 tensor([-0.7128,  0.4003,  0.7515,  0.4855,  0.3274,  0.1279,  0.0138, -0.2807,
         -0.4461, -1.0959], device='cuda:0'),
 tensor([-4.3486, -4.1221, -2.0773, -1.2301,  0.4890,  1.4811,  2.5109,  3.0861,
          3.5647,  3.9127], device='cuda:0'),
 tensor([ 4.1994,  4.0652,  3.0011,  2.8863,  1.4502,  0.5700, -0.5904, -2.8298,
         -4.6925, -5.6234], device='cuda:0'),
 tensor([-0.4349,  0.4416,  0.6983,  0.8228,  0.0218,  0.2213,  0.0242, -0.5069,
         -1.0373, -1.7102], device='cuda:0'),
 tensor([ 0.2102,  0.6111,  0.2856,  0.2623,  0.2691,  0.3222, -0.1579, -0.5010,
         -0.3904, -1.1517], device='cuda:0'),
 tensor([ 1.2980,  1.7528,  1.3532,  1.3686,  0.6351,  0.3923, -0.1759, -1.8176,
         -1.8506, -3.4650], device='cuda:0'),
 tensor([ 0.4296,  0.9736,  0.4172,  0.4710,  0.4170,  0.4535, -0.2603, -0.8835,
         -0.6723, -1.8297], device='cuda:0'),
 tensor([-0.6442,  0.0315,  0.2978,  0.2763,  0.5984,  0.6432,  0.1185, -0.2631,
         -0.0918, -0.3884], device='cuda:0'),
 tensor([-2.9382, -2.2453, -1.1429, -0.6256, -0.0124,  0.4620,  1.4562,  1.7600,
          1.8609,  1.5333], device='cuda:0'),
 tensor([-0.6742, -0.3421,  0.5255,  0.0728,  0.3379,  0.9231,  0.1527, -0.2439,
          0.0865, -0.7123], device='cuda:0'),
 tensor([-3.0676, -2.2068, -0.9526, -0.4445,  0.3281,  0.9993,  1.3592,  1.5368,
          1.4765,  0.8997], device='cuda:0'),
 tensor([ 3.0394,  3.1045,  2.3536,  2.1089,  1.5156,  0.3712, -0.4415, -2.3783,
         -2.8461, -4.4383], device='cuda:0'),
 tensor([-0.4969, -0.0771,  0.6476,  0.5034,  0.3022,  0.2772,  0.2683, -0.0921,
          0.2749, -0.1386], device='cuda:0'),
 tensor([-1.9839, -2.0308, -0.6086, -0.9667,  0.2412,  0.8817,  1.0649,  1.2451,
          1.3921,  1.0121], device='cuda:0'),
 tensor([ 1.4635,  1.6393,  1.3057,  1.1302,  0.6953,  0.0430, -0.3280, -1.3304,
         -1.5735, -2.4751], device='cuda:0'),
 tensor([ 0.4551,  0.7275,  0.5788,  0.4676,  0.2549,  0.2987, -0.1747, -0.5497,
         -0.5327, -1.1753], device='cuda:0'),
 tensor([ 4.0013,  3.8429,  2.7150,  2.5644,  1.4994,  0.3967, -0.3668, -2.4802,
         -4.6282, -5.3149], device='cuda:0'),
 tensor([ 0.5791,  1.2103,  0.5121,  0.5934,  0.5261,  0.5617, -0.3179, -1.1397,
         -0.8599, -2.2996], device='cuda:0'),
 tensor([ 0.3805,  0.4471,  0.6011,  0.2640,  0.6813,  0.9038,  0.1654, -0.3030,
         -0.8168, -2.0574], device='cuda:0'),
 tensor([ 3.1451,  3.1150,  2.1743,  2.0306,  1.2190,  0.2654, -0.3184, -2.0590,
         -3.6049, -4.3951], device='cuda:0'),
 tensor([ 0.3389,  1.1059,  0.5950,  0.6201,  0.3560,  0.6385, -0.2256, -1.1622,
         -0.8278, -2.3730], device='cuda:0'),
 tensor([ 0.6908,  0.8684,  0.7212,  0.5638,  0.3583,  0.1560, -0.1213, -0.4127,
         -0.5693, -0.7385], device='cuda:0'),
 tensor([-5.3742, -3.2583, -1.5133,  0.0420,  1.0024,  1.9238,  2.6381,  3.6031,
          3.7903,  5.1007], device='cuda:0'),
 tensor([-0.7773,  0.3202,  0.6682,  0.5371,  0.1243,  0.1703,  0.0368, -0.3755,
         -0.4365, -1.1351], device='cuda:0'),
 tensor([ 0.2232,  0.8945,  0.6719,  0.5897,  0.1366, -0.0083,  0.1186, -0.0551,
         -1.0908, -0.9090], device='cuda:0'),
 tensor([ 5.0141,  4.7425,  3.3554,  3.0003,  1.8648,  0.1677, -0.4396, -3.1764,
         -5.4288, -6.3134], device='cuda:0'),
 tensor([-3.5937, -3.2334, -2.8486, -0.6799,  0.3799,  1.0879,  2.3327,  3.4858,
          4.4826,  4.2803], device='cuda:0'),
 tensor([ 0.8021,  1.4594,  1.1063,  1.0039,  0.3469, -0.0071,  0.0757, -0.4319,
         -1.7146, -1.3654], device='cuda:0'),
 tensor([-2.1293, -0.8311, -0.2237,  0.3438,  0.5532,  0.7251,  0.6185,  0.4164,
          0.2584, -0.5827], device='cuda:0'),
 tensor([-0.5204,  0.1285,  0.1917,  0.1694,  0.0319, -0.0335,  0.2362,  0.3087,
         -0.0359, -0.0944], device='cuda:0'),
 tensor([-0.4925,  0.0650,  0.1800,  0.2093,  0.1735,  0.0008,  0.1716,  0.2509,
          0.1158,  0.0601], device='cuda:0'),
 tensor([ 1.8295,  2.0338,  1.4895,  1.3494,  0.8520,  0.0651, -0.1282, -0.8936,
         -1.6575, -1.5515], device='cuda:0'),
 tensor([-0.8295, -0.2872, -0.0774,  0.1635,  0.3299,  0.4592,  0.1323,  0.1282,
          0.1121, -0.3549], device='cuda:0'),
 tensor([-1.7852, -1.1654, -0.1788,  0.1372,  0.5359,  0.9302,  0.5015,  0.2867,
          0.5038, -0.3943], device='cuda:0'),
 tensor([-0.9551, -0.1140,  0.2255, -0.1313,  0.2310,  0.8131,  0.2891, -0.3613,
         -0.0225, -1.1829], device='cuda:0'),
 tensor([-2.6908, -2.6873, -1.8251, -0.8464,  0.5785,  0.9080,  1.0329,  1.3578,
          1.8567,  1.2593], device='cuda:0'),
 tensor([ 0.8727,  1.5125,  1.5818,  1.4400,  0.3638,  0.4342, -0.2993, -1.3999,
         -1.5951, -2.5683], device='cuda:0'),
 tensor([-0.3679,  0.0758,  0.9121,  0.4001,  0.4932,  1.1984,  0.0382, -1.0377,
         -0.4371, -1.3952], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-2.0353, -0.7199, -0.0924,  0.4383,  0.4357,  0.4999,  0.6688,  0.6690,
          0.3879, -0.0786], device='cuda:0'),
 tensor([-2.7376, -1.4440, -0.1233,  0.0563,  0.3807,  0.8037,  0.7060,  0.6694,
          0.4456, -0.5040], device='cuda:0'),
 tensor([ 1.7735,  1.9069,  1.3587,  1.2286,  0.8105, -0.0439, -0.0238, -0.8336,
         -1.8727, -1.4517], device='cuda:0'),
 tensor([-1.9067, -0.9046,  0.1378,  0.1802,  0.3870,  0.7308,  0.3594,  0.4064,
          0.2830, -0.4487], device='cuda:0'),
 tensor([ 3.2992,  3.3430,  2.5361,  2.4480,  1.3324,  0.3962, -0.4781, -2.2657,
         -4.1580, -4.7798], device='cuda:0'),
 tensor([-4.0131, -3.8558, -2.7645, -0.6948,  1.2585,  1.6144,  1.6431,  2.6121,
          3.2096,  2.8770], device='cuda:0'),
 tensor([-0.2895,  0.4011,  0.9900,  0.8290,  0.1099,  0.4820, -0.0983, -0.9244,
         -0.6352, -1.2687], device='cuda:0'),
 tensor([-0.0798,  0.8019,  1.8007,  1.4333,  0.8889,  1.2553, -0.1490, -2.2239,
         -1.0405, -1.8006], device='cuda:0'),
 tensor([-5.1293, -5.0622, -3.5109, -2.2502,  0.7953,  1.3036,  3.3825,  3.7303,
          5.2496,  7.8955], device='cuda:0'),
 tensor([-2.8679, -1.8717, -0.9092,  0.0330,  0.6613,  1.1694,  1.5983,  1.9169,
          1.6779,  1.4472], device='cuda:0'),
 tensor([-1.3314, -0.6823, -0.4440,  0.1315,  0.1775,  0.2872,  0.7278,  1.1590,
          1.1059,  0.9279], device='cuda:0'),
 tensor([-1.8786, -1.7535, -0.9984, -0.8769,  0.6215,  0.8107,  1.1343,  1.3638,
          1.3992,  0.8354], device='cuda:0'),
 tensor([-3.1018, -1.9402, -0.5835,  0.2857,  0.9573,  1.2894,  0.7614,  0.6756,
          0.7171, -0.5514], device='cuda:0'),
 tensor([-0.1880,  0.3209,  0.6967,  0.4534,  0.1711,  0.2322, -0.1380, -0.2317,
         -0.3006, -0.6975], device='cuda:0'),
 tensor([ 0.6461,  0.7288,  0.5144,  0.3632,  0.2289,  0.1952, -0.0274, -0.2525,
         -1.1361, -1.0278], device='cuda:0'),
 tensor([ 2.8975,  3.1860,  2.4467,  2.2316,  0.8744,  0.5834, -0.5632, -1.9680,
         -3.5709, -3.0999], device='cuda:0'),
 tensor([-0.9601, -1.0583, -0.3244, -0.3499,  0.0285,  0.5438,  0.3072,  0.6383,
          0.7534,  0.7303], device='cuda:0'),
 tensor([ 0.3276,  0.7289,  0.4063,  0.4045,  0.3055,  0.3285, -0.1892, -0.6112,
         -0.5435, -1.3482], device='cuda:0'),
 tensor([-1.1836, -0.7647, -0.3128, -0.1889,  0.0922,  0.4108,  0.5250,  0.7542,
          0.6309,  0.4779], device='cuda:0'),
 tensor([-0.1332,  0.1679,  0.1666,  0.1217,  0.0275,  0.0970, -0.0442, -0.0282,
         -0.0943, -0.2981], device='cuda:0'),
 tensor([ 1.3876,  1.2846,  1.6379,  1.0410,  0.5335,  0.4286, -0.2989, -1.0603,
         -1.0374, -1.8217], device='cuda:0'),
 tensor([ 1.9772,  2.1638,  1.3838,  1.3705,  0.8348,  0.3096, -0.2002, -1.3898,
         -2.4239, -3.4689], device='cuda:0'),
 tensor([ 0.9705,  1.6130,  1.4368,  1.2781,  0.4787,  1.1265, -0.6104, -1.7757,
         -1.5093, -3.0233], device='cuda:0'),
 tensor([-0.0295,  0.3196,  0.9804,  0.7865,  0.8083,  0.8652, -0.1685, -1.1215,
         -0.4719, -0.9293], device='cuda:0'),
 tensor([ 2.6820,  2.8211,  2.0574,  1.9158,  0.8554,  0.5140, -0.4848, -1.7198,
         -3.5570, -2.7398], device='cuda:0'),
 tensor([-0.8069,  0.0146,  0.4284,  0.3848,  0.0832,  0.1367,  0.0377,  0.0381,
         -0.1173, -0.5486], device='cuda:0'),
 tensor([-0.8701, -0.2190, -0.1672, -0.4346,  0.4756,  0.7804,  0.6284,  0.2477,
          0.2203, -0.6972], device='cuda:0'),
 tensor([-4.9675, -5.1964, -2.7268, -1.9843,  0.0719,  0.8211,  3.1079,  3.2382,
          4.0393,  4.1752], device='cuda:0'),
 tensor([-0.8635, -0.4985,  0.2143,  0.2557,  0.5535,  0.7163,  0.0876, -0.1824,
          0.1291, -0.6008], device='cuda:0'),
 tensor([-1.2894, -1.5154, -0.0382, -0.1965,  0.1030,  0.6382,  0.5993,  0.8212,
          1.2919,  0.9833], device='cuda:0'),
 tensor([-0.1803,  0.0660,  0.0118,  0.0155,  0.1191, -0.0056, -0.0031,  0.1407,
          0.1770,  0.2017], device='cuda:0'),
 tensor([ 1.6399,  1.8360,  1.1888,  1.2567,  0.8824,  0.3245, -0.1926, -1.1364,
         -2.0758, -3.6483], device='cuda:0'),
 tensor([-0.3068, -0.0801, -0.0508,  0.0089,  0.1113,  0.1576,  0.0490,  0.1677,
          0.1621, -0.0104], device='cuda:0'),
 tensor([ 0.3684,  0.9117,  0.3820,  0.4331,  0.3911,  0.4447, -0.2219, -0.8042,
         -0.6174, -1.7421], device='cuda:0'),
 tensor([ 0.3341,  0.4476,  0.3116,  0.1730,  0.1520,  0.1040, -0.0413, -0.1436,
         -0.5867, -0.6136], device='cuda:0'),
 tensor([-0.1565, -0.1076,  0.0348, -0.0765,  0.1009,  0.2425,  0.0748,  0.1921,
          0.0357, -0.1608], device='cuda:0'),
 tensor([-2.3321, -1.2484, -0.6434,  0.0555,  0.8592,  1.1596,  0.6086,  0.4736,
          0.4864, -0.4141], device='cuda:0'),
 tensor([-4.8352, -5.0046, -3.3660, -1.5769, -0.3182,  1.1350,  3.2831,  4.4939,
          5.1855,  5.6622], device='cuda:0'),
 tensor([ 1.1715,  0.9951,  0.5816,  0.2552,  0.3623,  0.2287,  0.1048, -0.3357,
         -1.4557, -1.6504], device='cuda:0'),
 tensor([ 0.0859,  0.6228,  0.6656,  0.7524,  0.0725,  0.2383, -0.0765, -0.5164,
         -0.9517, -1.2365], device='cuda:0'),
 tensor([-0.0947,  0.6006,  0.4967,  0.4083,  0.3055,  0.2371, -0.1093, -0.5139,
         -0.4727, -1.2536], device='cuda:0'),
 tensor([-4.6587, -3.4921, -1.4841, -0.8057,  0.3786,  1.4181,  2.3320,  2.6002,
          2.4193,  1.8304], device='cuda:0'),
 tensor([-1.5541, -0.4536, -0.2004, -0.0938,  0.4920,  0.6863,  0.5575,  0.2581,
          0.0908, -0.8517], device='cuda:0'),
 tensor([-1.2796, -0.4277, -0.4125, -0.0957,  0.5651,  0.5651,  0.5910,  0.5094,
          0.4027, -0.2511], device='cuda:0'),
 tensor([-0.1325,  0.5765,  0.3966,  0.3839,  0.1881,  0.4892, -0.0974, -0.7472,
         -0.5369, -1.6680], device='cuda:0'),
 tensor([-0.5954,  0.2718,  0.5977,  0.3746,  0.2294,  0.0662,  0.0010, -0.1233,
         -0.2863, -0.7211], device='cuda:0'),
 tensor([-0.7866,  0.0261,  0.2440,  0.3370,  0.2774, -0.0306,  0.3423,  0.4152,
          0.2035,  0.1933], device='cuda:0'),
 tensor([ 0.4732,  0.6629,  0.5556,  0.4299,  0.1712,  0.1489, -0.1079, -0.3624,
         -0.8033, -0.8767], device='cuda:0'),
 tensor([-1.5441, -1.1084, -0.4157, -0.1606,  0.0781,  0.5310,  0.8556,  1.1588,
          1.1182,  0.9019], device='cuda:0'),
 tensor([-0.3772,  0.3093,  0.7761,  0.7595,  0.5928,  0.6893,  0.1250, -0.9117,
         -0.6988, -1.0565], device='cuda:0'),
 tensor([-2.2906, -2.0577, -0.9849, -0.9030, -0.0456,  0.7683,  1.3690,  1.8397,
          2.0163,  1.9460], device='cuda:0'),
 tensor([ 0.8629,  1.2151,  0.8867,  0.8029,  0.4436,  0.3896, -0.1974, -0.8869,
         -0.9657, -2.0196], device='cuda:0'),
 tensor([-0.4577,  0.5944,  0.7765,  0.5180,  0.3950,  0.1875, -0.0188, -0.5176,
         -0.5781, -1.4381], device='cuda:0'),
 tensor([-0.8455,  0.0441,  0.4126,  0.5357,  0.0714,  0.2396,  0.0635, -0.1949,
         -0.2530, -0.8696], device='cuda:0'),
 tensor([-1.9529, -1.6437, -1.2597, -0.2109,  0.5687,  1.1058,  0.7288,  1.0213,
          1.4202,  1.2063], device='cuda:0'),
 tensor([ 2.7691,  2.8115,  1.9906,  1.8630,  0.9592,  0.3876, -0.3082, -1.3437,
         -3.3976, -2.5926], device='cuda:0'),
 tensor([-5.1064, -3.4173, -1.4567,  0.5633,  1.4460,  1.8479,  2.0597,  2.0234,
          2.2646,  1.6912], device='cuda:0'),
 tensor([-5.1718, -4.4806, -1.5282, -1.4213, -0.0317,  2.0395,  2.5224,  3.3698,
          3.3102,  3.4480], device='cuda:0'),
 tensor([ 1.5179,  2.0611,  1.5654,  1.5226,  0.6061,  0.1149, -0.0233, -0.9237,
         -2.5903, -1.9617], device='cuda:0'),
 tensor([ 0.3692,  0.7609,  0.5967,  0.3065,  0.1841, -0.0284,  0.2205, -0.0338,
         -1.2993, -1.2977], device='cuda:0'),
 tensor([-0.3496,  0.0509,  0.2082,  0.1467,  0.2183,  0.3510, -0.0287, -0.1562,
         -0.1065, -0.6705], device='cuda:0'),
 tensor([-3.2890, -2.1000, -1.9248, -0.2687,  0.4809,  0.9517,  1.3871,  2.0429,
          2.5764,  2.8084], device='cuda:0'),
 tensor([-2.7479, -1.5949, -0.4132, -0.3878,  0.4552,  0.8602,  1.3226,  1.3288,
          1.0049,  0.5213], device='cuda:0'),
 tensor([ 3.2302,  3.2589,  2.3538,  2.1883,  1.3582,  0.3021, -0.3682, -2.3059,
         -3.7368, -5.0444], device='cuda:0'),
 tensor([-0.1139,  0.1181,  0.0973,  0.0487,  0.0486,  0.0659, -0.0372,  0.0456,
         -0.0006, -0.1296], device='cuda:0'),
 tensor([ 0.9007,  0.9713,  0.7458,  0.5348,  0.2729,  0.2007,  0.0204, -0.5234,
         -1.8037, -1.9456], device='cuda:0'),
 tensor([-3.4870, -2.1246, -1.0276,  0.2076,  0.7742,  1.3491,  1.9855,  2.3384,
          1.9722,  1.7696], device='cuda:0'),
 tensor([ 1.9386,  2.2042,  1.5372,  1.4555,  0.7502,  0.1774, -0.1338, -0.9970,
         -2.9417, -2.0681], device='cuda:0'),
 tensor([-3.7562, -2.9130, -1.1253, -0.7340,  0.2210,  1.5142,  1.6043,  1.8886,
          1.8696,  1.0066], device='cuda:0'),
 tensor([-1.9371, -0.9966, -0.5807, -0.0274,  0.9039,  0.0973,  1.2333,  1.7128,
          2.3807,  2.1531], device='cuda:0'),
 tensor([-0.5585,  0.3842,  0.6387,  0.4122,  0.2874,  0.1283, -0.0049, -0.2662,
         -0.3897, -0.9845], device='cuda:0'),
 tensor([-1.9526, -0.6344, -0.1209,  0.3117,  1.2219,  1.1964,  0.4693,  0.3975,
          0.2221, -0.5336], device='cuda:0'),
 tensor([-2.0217, -1.3505, -0.7971, -0.7137,  0.4347,  0.8507,  0.8124,  0.9045,
          1.0306,  0.3650], device='cuda:0'),
 tensor([-4.6027, -4.8894, -2.9403, -1.5084,  0.7472,  1.7288,  2.3766,  2.5723,
          3.5897,  3.7408], device='cuda:0'),
 tensor([-1.7331, -0.9438, -0.2331,  0.1592,  0.2282,  0.5802,  0.4345,  0.5660,
          0.3895, -0.1898], device='cuda:0'),
 tensor([ 2.0849,  2.1983,  1.7501,  1.5313,  0.6929,  0.3447, -0.3986, -1.5775,
         -2.2231, -2.9673], device='cuda:0'),
 tensor([-0.6564,  0.0433,  0.2157,  0.2805,  0.2314, -0.0167,  0.2667,  0.3425,
          0.1647,  0.1343], device='cuda:0'),
 tensor([-1.3628, -0.4477,  0.0522,  0.4843,  1.0389,  1.1267,  0.1150, -0.1688,
         -0.0649, -1.0955], device='cuda:0'),
 tensor([-0.8364, -0.5887, -0.7079, -0.1024,  0.2635,  0.1971,  0.3846,  0.3730,
          0.6285,  1.3369], device='cuda:0'),
 tensor([-1.7117, -0.6426,  0.0808,  0.6007,  1.3603,  1.4391,  0.1498, -0.1823,
         -0.0987, -1.4029], device='cuda:0'),
 tensor([ 0.6947,  1.1342,  0.6016,  0.6321,  0.4401,  0.2557, -0.0488, -0.5989,
         -0.8413, -1.9648], device='cuda:0'),
 tensor([ 0.8667,  1.2354,  1.1513,  0.9993,  0.4215,  0.8309, -0.4332, -1.3939,
         -1.1303, -2.4348], device='cuda:0'),
 tensor([-0.8787,  0.0139,  0.2641,  0.3770,  0.3099, -0.0404,  0.3957,  0.4666,
          0.2309,  0.2349], device='cuda:0'),
 tensor([-0.5724, -0.0049,  0.4099,  0.5046,  0.6892,  0.8004, -0.0318, -0.6045,
         -0.3269, -0.8434], device='cuda:0'),
 tensor([-5.6153, -4.7322, -2.6045, -1.4635, -0.1931,  1.6841,  3.7311,  5.0746,
          5.2174,  5.6268], device='cuda:0'),
 tensor([-0.9123, -0.1817,  0.0876,  0.2917, -0.0740,  0.1258,  0.2884,  0.2042,
         -0.0695, -0.2849], device='cuda:0'),
 tensor([ 2.7546,  2.8759,  2.2214,  1.9439,  1.3512,  0.2057, -0.3035, -1.9116,
         -2.5705, -3.5571], device='cuda:0'),
 tensor([ 1.2586,  1.0181,  0.6868,  0.3101,  0.4273,  0.1958,  0.0107, -0.4785,
         -1.9248, -1.8441], device='cuda:0'),
 tensor([-0.6077, -0.1219,  0.5806,  0.5902,  0.5527,  0.7487,  0.2076, -0.6284,
         -0.1481, -0.6509], device='cuda:0'),
 tensor([-0.8937, -0.0091,  0.3744,  0.4563,  0.1056,  0.2321,  0.1116, -0.1352,
         -0.2156, -0.8752], device='cuda:0'),
 tensor([-0.0709,  0.2439,  0.6856,  0.5548,  0.5566,  0.6146, -0.1352, -0.7663,
         -0.3325, -0.6888], device='cuda:0'),
 tensor([-1.5178, -0.3518,  0.3622,  0.6446,  0.8518,  1.0986,  0.1857, -0.4855,
         -0.4066, -1.5371], device='cuda:0'),
 tensor([ 0.3785,  1.1429,  0.5968,  0.6263,  0.3865,  0.6369, -0.2363, -1.1817,
         -0.8378, -2.3893], device='cuda:0'),
 tensor([-0.8283,  0.1393,  0.9788,  0.6611,  0.2370,  0.3110, -0.0342, -0.1416,
         -0.1295, -0.6644], device='cuda:0'),
 tensor([ 0.9001,  1.0096,  0.9109,  0.7501,  0.4800,  0.4191, -0.2978, -0.9630,
         -0.9415, -1.7343], device='cuda:0'),
 tensor([-6.1321, -5.9866, -2.8027, -2.8023,  0.0659,  1.8206,  4.2785,  5.2712,
          5.6527,  5.6469], device='cuda:0'),
 tensor([-1.2138, -1.0916, -0.7435, -0.6202,  0.1050, -0.1374,  0.7970,  0.9315,
          0.8277,  0.9779], device='cuda:0'),
 tensor([ 1.6054,  1.4497,  1.3674,  0.7965,  0.4500,  0.2064, -0.1924, -0.9263,
         -1.8427, -2.1308], device='cuda:0'),
 tensor([ 0.9184,  1.4461,  1.4416,  1.2771,  0.2518,  0.5173, -0.1079, -1.2726,
         -1.4042, -1.6747], device='cuda:0'),
 tensor([-0.8168,  0.0298,  0.4646,  0.5368,  0.3825,  0.6594,  0.0204, -0.5960,
         -0.3764, -1.0715], device='cuda:0'),
 tensor([-0.4972, -0.2752,  0.1776,  0.0811,  0.1446,  0.2747,  0.2304,  0.3586,
          0.3822,  0.1538], device='cuda:0'),
 tensor([ 1.8407,  1.9297,  1.3304,  1.2028,  0.7931,  0.1984, -0.1968, -1.3095,
         -2.1282, -2.9174], device='cuda:0'),
 tensor([-3.4511, -1.6638, -0.7473,  0.5402,  0.7987,  1.2219,  1.3293,  1.3129,
          1.0528,  0.6781], device='cuda:0'),
 tensor([-8.1164e-03,  4.9232e-01,  5.8088e-01,  5.7080e-01,  6.5653e-02,
          1.8719e-01,  8.3661e-04, -3.9962e-01, -9.6238e-01, -1.4547e+00],
        device='cuda:0'),
 tensor([-2.2440, -0.8342, -0.0556,  0.5900,  0.5186,  0.6988,  0.5737,  0.3038,
          0.0826, -0.8055], device='cuda:0'),
 tensor([-8.3130, -6.2896, -2.8376, -1.0496,  1.3933,  2.7850,  4.0132,  4.2792,
          4.3169,  3.4862], device='cuda:0'),
 tensor([ 0.4905,  0.5198,  0.3589,  0.1568,  0.1971,  0.1102, -0.0189, -0.1786,
         -0.8162, -0.8610], device='cuda:0'),
 tensor([ 0.5803,  1.0424,  0.8323,  0.5544,  0.2482, -0.0882,  0.0750, -0.2785,
         -0.7959, -0.7147], device='cuda:0'),
 tensor([-4.3880, -3.0182, -1.6645, -2.5055,  3.0419,  0.2282,  2.0715,  2.4915,
          4.2980,  8.4849], device='cuda:0'),
 tensor([-0.7505, -0.2667, -0.1776, -0.5105,  0.2632,  0.4878,  0.5509,  0.2712,
          0.4686, -0.1944], device='cuda:0'),
 tensor([-0.0452,  0.1659,  0.2697,  0.1939,  0.1718,  0.1954, -0.0963, -0.1480,
         -0.0369, -0.2359], device='cuda:0'),
 tensor([-0.2642,  0.1474,  0.5250,  0.5075,  0.5657,  0.6305, -0.0790, -0.6911,
         -0.3389, -0.6991], device='cuda:0'),
 tensor([-1.8054, -1.3452, -0.7707, -0.9476,  0.2525,  0.3192,  1.2210,  1.2840,
          1.5663,  0.9754], device='cuda:0'),
 tensor([-0.7196, -0.5139, -0.0725, -0.3820,  0.2725,  0.5534,  0.3044,  0.4073,
          0.4793,  0.0705], device='cuda:0'),
 tensor([-2.4953, -1.3749, -0.4154, -0.3762,  0.3506,  0.8995,  1.1216,  1.1795,
          0.8945,  0.3242], device='cuda:0'),
 tensor([ 0.0226,  0.2292,  0.3565,  0.2932,  0.2598,  0.2980, -0.0097, -0.0353,
         -0.0492, -0.3303], device='cuda:0'),
 tensor([ 2.5220,  2.5836,  1.8405,  1.7038,  1.1372, -0.0504, -0.0133, -1.1815,
         -2.6239, -1.9799], device='cuda:0'),
 tensor([ 0.0505,  0.6757,  1.2435,  0.8216,  0.3256,  0.4276, -0.2399, -0.7832,
         -0.7691, -1.4945], device='cuda:0'),
 tensor([-1.4987, -1.8080, -0.5819, -0.5877,  0.0138,  0.8642,  0.5466,  0.9977,
          1.2239,  1.2707], device='cuda:0'),
 tensor([ 0.3615,  0.8668,  0.7086,  0.7069,  0.2100,  0.1074,  0.0818, -0.3366,
         -1.0523, -0.9420], device='cuda:0'),
 tensor([-3.1754, -2.3558, -1.3433, -0.2764,  0.7397,  0.5299,  1.5582,  2.0421,
          1.8659,  1.4810], device='cuda:0'),
 tensor([ 1.1831,  1.6364,  2.2809,  1.5779,  0.6067,  1.1674, -0.2432, -2.5460,
         -1.9145, -3.1505], device='cuda:0'),
 tensor([-0.6668, -0.2789, -0.1239, -0.0145,  0.0712,  0.2403,  0.2395,  0.4593,
          0.3828,  0.2694], device='cuda:0'),
 tensor([-4.4389e-01, -2.8157e-02, -1.3146e-04,  2.0102e-01,  3.8569e-01,
          2.7497e-01, -7.6797e-02, -8.2325e-02,  1.6469e-01, -2.4462e-01],
        device='cuda:0'),
 tensor([-1.1089,  0.1678,  0.6027,  0.7807,  0.0543,  0.3020,  0.1693, -0.4860,
         -0.4904, -1.5760], device='cuda:0'),
 tensor([-1.9006, -0.5657,  0.2498,  0.6218,  0.2753,  0.4113,  0.4990,  0.3265,
         -0.0307, -0.6115], device='cuda:0'),
 tensor([ 1.0855,  1.4004,  1.1476,  0.9258,  0.3962,  0.2898, -0.1072, -0.8511,
         -1.0867, -1.2176], device='cuda:0'),
 tensor([-1.2714,  0.0292,  0.5105,  0.8143,  0.1243,  0.4516,  0.1067, -0.5165,
         -0.5007, -1.7373], device='cuda:0'),
 tensor([-3.7474, -2.1301, -1.0212,  0.1063,  0.9787,  1.3618,  1.6874,  1.7461,
          1.4646,  1.4049], device='cuda:0'),
 tensor([-2.5658, -1.5134, -1.2929, -0.9588,  1.0384,  0.1815,  1.0905,  1.6145,
          2.2643,  4.0521], device='cuda:0'),
 tensor([ 0.3376,  0.8244,  0.9597,  0.7005,  0.3150,  0.1119, -0.0556, -0.5840,
         -0.7944, -1.3621], device='cuda:0'),
 tensor([ 0.0016,  0.2874,  0.1523,  0.1224,  0.1084,  0.1491, -0.1000, -0.1498,
         -0.1358, -0.4708], device='cuda:0'),
 tensor([-0.0449,  0.2120,  0.1245,  0.0854,  0.0771,  0.1167, -0.0827, -0.0675,
         -0.0766, -0.3194], device='cuda:0'),
 tensor([ 2.5250,  2.6150,  1.8903,  1.7649,  0.7900,  0.4822, -0.4722, -1.6066,
         -3.4469, -2.6362], device='cuda:0'),
 tensor([-1.0544, -0.2043,  0.3905,  0.4249,  0.4580,  0.8682,  0.3523, -0.3898,
         -0.1767, -1.0807], device='cuda:0'),
 tensor([ 0.1816,  0.6918,  0.2732,  0.3052,  0.2949,  0.3855, -0.1189, -0.5398,
         -0.4310, -1.3767], device='cuda:0'),
 tensor([-0.8991, -0.4276, -0.3274, -0.2155,  0.4432,  0.5472,  0.5199,  0.3795,
          0.2691, -0.3945], device='cuda:0'),
 tensor([-1.0384, -0.4363, -0.1067,  0.1366,  0.1693,  0.3747,  0.2882,  0.3455,
          0.2366, -0.0143], device='cuda:0'),
 tensor([-0.2128,  0.5367,  0.6930,  0.4380,  0.3982,  0.4611,  0.2905, -0.7228,
         -0.7491, -1.8087], device='cuda:0'),
 tensor([ 0.7548,  0.9408,  0.6688,  0.5724,  0.3811, -0.0047, -0.0433, -0.3508,
         -0.8347, -0.7134], device='cuda:0'),
 tensor([-5.6653, -5.2243, -2.6108, -1.7716, -0.1685,  1.8122,  3.6522,  4.6697,
          4.9019,  4.5608], device='cuda:0'),
 tensor([ 0.9557,  1.1297,  0.7689,  0.7585,  0.5466,  0.2904, -0.1007, -0.6192,
         -1.2639, -2.2812], device='cuda:0'),
 tensor([-1.4563, -0.5224,  0.0817,  0.5111,  1.1454,  1.2166,  0.1164, -0.1468,
         -0.0777, -1.1982], device='cuda:0'),
 tensor([-0.2057,  0.6989,  0.7491,  0.5318,  0.4018,  0.5745,  0.0556, -1.0746,
         -0.8223, -2.1436], device='cuda:0'),
 tensor([-2.1529, -0.8586, -1.1093, -0.0429,  0.5009,  0.6126,  1.0198,  0.7109,
          1.1735,  1.4008], device='cuda:0'),
 tensor([-1.7289, -0.9626, -0.2289, -0.1238,  0.4011,  0.4411,  0.9069,  0.8798,
          0.5438,  0.0941], device='cuda:0'),
 tensor([ 1.7032,  2.2572,  2.0843,  2.0006,  0.6918,  0.7372, -0.5801, -2.1339,
         -2.0941, -4.0652], device='cuda:0'),
 tensor([ 1.3047,  1.3975,  1.2082,  1.0457,  0.7123,  0.3678, -0.2939, -1.1083,
         -1.2389, -2.0496], device='cuda:0'),
 tensor([ 1.0372,  1.3112,  0.8421,  0.8513,  0.6235,  0.2836, -0.1277, -0.8351,
         -1.3695, -2.5239], device='cuda:0'),
 tensor([-0.1132,  0.2797,  1.0626,  0.5680,  0.3553,  0.9457, -0.0720, -1.1036,
         -0.6216, -1.6652], device='cuda:0'),
 tensor([ 0.0173,  0.2194,  0.3373,  0.2702,  0.2692,  0.1800, -0.0401, -0.1241,
         -0.0305, -0.2704], device='cuda:0'),
 tensor([ 2.7342,  2.7554,  2.0919,  1.9470,  1.0069,  0.4985, -0.4591, -2.0557,
         -2.9146, -4.0754], device='cuda:0'),
 tensor([-0.1868,  0.1014,  0.1011,  0.0718,  0.0713,  0.0363,  0.0044,  0.0842,
          0.0243, -0.0769], device='cuda:0'),
 tensor([-4.3640, -4.2274, -2.9391, -1.4436, -0.3706,  0.9722,  3.1207,  4.3177,
          4.6707,  5.0330], device='cuda:0'),
 tensor([-2.1310, -2.1500, -1.7242, -0.5245,  0.4919,  0.4788,  1.1053,  2.0773,
          2.4540,  2.5577], device='cuda:0'),
 tensor([-1.5957, -1.8423, -1.7998, -0.6791,  0.4032,  0.8865,  0.5602,  1.2882,
          2.0234,  2.1182], device='cuda:0'),
 tensor([-2.5112, -1.5332, -0.3721, -0.8845,  0.4798,  0.9045,  1.4732,  1.4525,
          1.3806,  0.7595], device='cuda:0'),
 tensor([ 1.3312,  1.5743,  1.0115,  1.0498,  0.7457,  0.3026, -0.1557, -0.9816,
         -1.7155, -3.0745], device='cuda:0'),
 tensor([-2.2334, -1.8134, -0.5471, -0.7526,  0.0828,  0.8841,  1.1676,  1.4643,
          1.4649,  1.4411], device='cuda:0'),
 tensor([-0.0785,  0.4588,  0.3973,  0.3922,  0.1623,  0.3151, -0.0882, -0.5211,
         -0.4990, -1.2767], device='cuda:0'),
 tensor([ 1.2268,  1.3414,  0.9485,  0.8444,  0.6577,  0.2170, -0.2783, -1.1247,
         -1.2194, -2.2234], device='cuda:0'),
 tensor([-1.7406, -1.3233, -1.3837, -0.2877,  0.2935,  0.5414,  0.6392,  0.9048,
          1.5717,  1.6076], device='cuda:0'),
 tensor([-0.0483,  0.3839,  0.2357,  0.2089,  0.1050,  0.2569, -0.0781, -0.3301,
         -0.2433, -0.8364], device='cuda:0'),
 tensor([-3.1723, -2.0928, -0.7743, -0.1161,  0.6375,  1.2635,  1.1174,  1.0119,
          1.0878,  0.2120], device='cuda:0'),
 tensor([-2.7121, -2.1545, -1.0477, -0.3514,  0.5535,  1.1445,  1.0978,  1.0560,
          1.4588,  0.6014], device='cuda:0'),
 tensor([-0.8522, -0.6314, -0.4604, -0.0556,  0.3183,  0.4985,  0.3176,  0.5054,
          0.5512,  0.2971], device='cuda:0'),
 tensor([-3.5682, -1.8230, -1.1549,  0.3428,  0.8837,  1.2029,  1.3370,  1.4137,
          1.5774,  1.4771], device='cuda:0'),
 tensor([ 0.3804,  1.0406,  1.0969,  0.9970,  0.3097,  0.4526, -0.2039, -1.0193,
         -0.9985, -2.1255], device='cuda:0'),
 tensor([-1.8236, -1.9763, -0.7281, -0.9180,  0.2218,  0.7875,  1.0197,  1.2263,
          1.4386,  1.0645], device='cuda:0'),
 tensor([ 0.2473,  0.4968,  0.8789,  0.8093,  0.8191,  0.4482,  0.0821, -0.4450,
         -0.1813, -0.6734], device='cuda:0'),
 tensor([ 0.2922,  0.4270,  0.3057,  0.1496,  0.1471,  0.0634, -0.0091, -0.1022,
         -0.6160, -0.6776], device='cuda:0'),
 tensor([ 0.7740,  1.3687,  0.8544,  0.8537,  0.5515,  0.5246, -0.1400, -1.1647,
         -1.2603, -2.8377], device='cuda:0'),
 tensor([ 0.5924,  1.2288,  1.6036,  1.1486,  0.4761,  1.1804, -0.2251, -2.1829,
         -1.3976, -2.6133], device='cuda:0'),
 tensor([-0.5086,  0.0177,  0.2381,  0.2667,  0.2080,  0.0125,  0.1724,  0.2033,
          0.1992,  0.0707], device='cuda:0'),
 tensor([-1.8484, -0.7069,  0.0804,  0.6487,  1.4754,  1.5582,  0.1677, -0.2013,
         -0.1099, -1.5124], device='cuda:0'),
 tensor([-1.8609, -2.4385, -0.9009, -1.0037,  0.0752,  0.9392,  1.2301,  1.3302,
          1.7493,  1.8629], device='cuda:0'),
 tensor([ 0.1409,  0.8111,  0.4728,  0.4571,  0.2819,  0.4075, -0.1530, -0.7817,
         -0.5941, -1.6700], device='cuda:0'),
 tensor([ 6.2094,  5.8314,  4.3096,  4.1064,  2.2922,  0.5758, -0.7446, -3.9235,
         -7.3220, -7.7297], device='cuda:0'),
 tensor([-1.1446, -0.2581, -0.0992,  0.2097,  0.6468,  0.6637,  0.3889,  0.0620,
         -0.0286, -0.6556], device='cuda:0'),
 tensor([-0.7902, -0.2853,  0.1877,  0.0650,  0.3406,  0.6537,  0.0994, -0.2055,
          0.0239, -0.8365], device='cuda:0'),
 tensor([ 0.8114,  1.3848,  0.9954,  1.1876,  0.5851,  0.5027, -0.2126, -1.0429,
         -1.5395, -3.0831], device='cuda:0'),
 tensor([-2.7685, -2.2567, -1.4220, -1.2411,  0.3810,  0.3895,  1.8428,  1.8808,
          2.0903,  2.0329], device='cuda:0'),
 tensor([ 0.0257,  0.2668,  0.6258,  0.4654,  0.4468,  0.4739, -0.1372, -0.5345,
         -0.2039, -0.5105], device='cuda:0'),
 tensor([-2.9739, -2.8400, -1.7295, -0.7403,  0.0931,  1.3040,  1.4633,  2.3748,
          2.7366,  3.0299], device='cuda:0'),
 tensor([ 0.5478,  1.2808,  0.9667,  1.2164,  0.5174,  0.5444, -0.2165, -1.0800,
         -1.4866, -3.1524], device='cuda:0'),
 tensor([-0.3940, -0.1704, -0.1150, -0.0034,  0.1476,  0.2083,  0.0981,  0.2232,
          0.2273,  0.0441], device='cuda:0'),
 tensor([-3.4392, -5.2125, -1.1460, -1.5616,  0.2475,  2.2066,  2.0261,  3.4333,
          4.3766,  5.3062], device='cuda:0'),
 tensor([ 2.3001,  2.4048,  1.8333,  1.6770,  1.1708,  0.4418, -0.4293, -1.9728,
         -2.1585, -3.7127], device='cuda:0'),
 tensor([ 0.0696,  0.2825,  0.4606,  0.3929,  0.3943,  0.2410, -0.0123, -0.1971,
         -0.0648, -0.3621], device='cuda:0'),
 tensor([-0.3225, -0.0256,  0.0085,  0.0424,  0.2585,  0.1083,  0.1315,  0.1376,
          0.0474, -0.0226], device='cuda:0'),
 tensor([-4.2696, -2.6312, -2.5183, -0.2844,  1.0015,  1.8778,  1.7382,  2.9897,
          3.5044,  5.1927], device='cuda:0'),
 tensor([-2.9834, -1.9402, -1.5082, -0.0468,  0.7627,  1.2262,  1.1833,  1.0145,
          1.5663,  1.3961], device='cuda:0'),
 tensor([-4.0317, -4.8458, -2.7877, -1.9548, -0.3757,  0.6507,  2.9449,  3.5466,
          4.6576,  4.9491], device='cuda:0'),
 tensor([ 1.4515,  1.5731,  1.1364,  1.0507,  0.6227,  0.1926, -0.1700, -0.7351,
         -1.9398, -1.3522], device='cuda:0'),
 tensor([ 0.2429,  0.6075,  0.2922,  0.3022,  0.2493,  0.2505, -0.1628, -0.4906,
         -0.4230, -1.1012], device='cuda:0'),
 tensor([-0.6396, -0.1389,  0.0840,  0.2295,  0.4423,  0.4838,  0.0080, -0.0261,
         -0.0092, -0.5268], device='cuda:0'),
 tensor([ 1.1198,  1.4784,  0.8358,  0.8699,  0.7020,  0.4000, -0.3133, -1.3775,
         -1.3474, -2.8064], device='cuda:0'),
 tensor([ 0.5835,  0.5354,  0.5381,  0.4825,  0.1589,  0.3696, -0.0349, -0.2069,
         -0.7235, -0.7962], device='cuda:0'),
 tensor([-1.1918, -0.0139,  0.4390,  0.5213,  0.1918,  0.3617,  0.2322, -0.3263,
         -0.3206, -1.4143], device='cuda:0'),
 tensor([-1.2290, -1.1726, -0.5037, -0.4488,  0.1060,  0.5517,  0.5460,  0.8635,
          0.8430,  0.8795], device='cuda:0'),
 tensor([ 0.1169,  0.7905,  0.4483,  0.4745,  0.3606,  0.3198, -0.1443, -0.6624,
         -0.4975, -1.5255], device='cuda:0'),
 tensor([-1.8601, -0.6432,  0.2643,  0.8357,  0.5506,  0.8063,  0.2312, -0.5188,
         -0.0667, -1.3535], device='cuda:0'),
 tensor([ 0.6879,  0.6543,  0.4543,  0.2102,  0.2545,  0.1347, -0.0125, -0.2658,
         -1.1178, -1.1400], device='cuda:0'),
 tensor([ 0.2950,  0.9415,  1.0100,  0.7325,  0.4082,  0.0092, -0.0223, -0.5538,
         -0.8834, -1.5451], device='cuda:0'),
 tensor([-2.4898, -2.7884, -2.3856, -0.5255,  0.7199,  1.1992,  1.3879,  2.4135,
          2.8702,  2.7396], device='cuda:0'),
 tensor([ 0.4284,  0.8491,  0.7914,  0.6813,  0.2368,  0.5653, -0.2896, -1.0632,
         -0.7295, -1.7200], device='cuda:0'),
 tensor([-3.9473, -4.8440, -2.4312, -2.3584,  0.1150,  1.1145,  3.0900,  3.5011,
          4.8684,  4.6505], device='cuda:0'),
 tensor([-9.5622, -8.8951, -6.0137, -3.2805,  0.9186,  2.8241,  4.2182,  5.3925,
          7.6655,  7.7465], device='cuda:0'),
 tensor([-0.0150,  0.1805,  0.2614,  0.1946,  0.1921,  0.1424, -0.0572, -0.0791,
         -0.0093, -0.2139], device='cuda:0'),
 tensor([ 1.5106,  1.6434,  1.1699,  1.0563,  0.7045, -0.0242, -0.0305, -0.7061,
         -1.5999, -1.2551], device='cuda:0'),
 tensor([-1.0253, -0.0787,  0.1571, -0.0786,  0.4310,  0.8933,  0.5051, -0.0799,
          0.0871, -1.2272], device='cuda:0'),
 tensor([-3.3001, -3.1243, -2.0502, -1.3065,  0.3257,  0.8709,  1.7578,  1.9757,
          2.4041,  1.8876], device='cuda:0'),
 tensor([-1.3125, -0.2945,  0.0166,  0.2220,  0.5322,  0.7374,  0.3427, -0.0818,
         -0.1845, -1.3039], device='cuda:0'),
 tensor([-0.5045, -0.4696, -0.0792, -0.0012,  0.0659,  0.5742,  0.4555,  0.2237,
          0.1681, -0.0475], device='cuda:0'),
 tensor([-2.4311, -1.2972, -0.2891, -0.5452,  0.3588,  0.7581,  1.0895,  1.1390,
          0.9469,  0.2868], device='cuda:0'),
 tensor([ 0.0498,  0.2586,  0.4138,  0.3463,  0.3469,  0.2179, -0.0228, -0.1694,
         -0.0518, -0.3273], device='cuda:0'),
 tensor([-0.7979, -0.2857,  0.0161,  0.2359,  0.3573, -0.0480,  0.4789,  0.7182,
          0.7019,  0.4675], device='cuda:0'),
 tensor([ 2.3095,  2.4947,  1.8287,  1.6734,  1.0592,  0.0549, -0.1386, -1.1242,
         -2.1124, -1.9071], device='cuda:0'),
 tensor([-1.6103, -0.7899,  0.0626, -0.0270,  0.6328,  1.1072,  0.2904, -0.1407,
          0.1273, -1.3752], device='cuda:0'),
 tensor([-2.4869, -1.4119, -0.2699, -0.9108,  0.5115,  1.2912,  0.8663,  0.5664,
          0.9153, -0.2681], device='cuda:0'),
 tensor([-2.0966, -0.8870, -0.4562,  0.5425,  0.5759, -0.1511,  1.1981,  1.8687,
          2.1150,  2.4392], device='cuda:0'),
 tensor([-2.6660, -2.5126, -1.3337, -1.1872,  0.0407,  0.7177,  1.8659,  2.3267,
          2.4509,  1.9966], device='cuda:0'),
 tensor([-0.1048,  0.3886,  0.3108,  0.2983,  0.1334,  0.2797, -0.0717, -0.3887,
         -0.3652, -1.0464], device='cuda:0'),
 tensor([-0.2733, -0.0067,  0.0686,  0.0126,  0.0591,  0.1152,  0.0463,  0.1525,
          0.0876, -0.0205], device='cuda:0'),
 tensor([-1.1791, -0.8348,  0.4328, -0.0156,  0.3229,  0.7719,  0.5935,  0.6901,
          0.6478,  0.1858], device='cuda:0'),
 tensor([ 0.6316,  0.6258,  0.4452,  0.3680,  0.2389,  0.2713,  0.1186, -0.2916,
         -0.6373, -0.5331], device='cuda:0'),
 tensor([-3.1641, -2.9329, -1.3847, -0.8499, -0.1893,  1.2251,  1.7753,  2.5071,
          2.4407,  2.6373], device='cuda:0'),
 tensor([-0.4228,  0.1553,  0.4463,  0.4752,  0.2632,  0.3893,  0.1173, -0.2783,
         -0.3084, -0.5403], device='cuda:0'),
 tensor([-0.5485, -0.5759, -0.4725, -0.0654,  0.0089,  0.0246,  0.3088,  0.5935,
          0.7101,  1.1828], device='cuda:0'),
 tensor([-6.7164, -7.8214, -3.3828, -3.3908, -0.1733,  2.9024,  3.8343,  4.7928,
          6.1075,  6.6941], device='cuda:0'),
 tensor([-3.3561, -3.6090, -1.4907, -1.2971,  0.1569,  1.2813,  1.6547,  1.9853,
          2.5540,  2.0778], device='cuda:0'),
 tensor([-0.1644,  0.4871,  0.5885,  0.5577,  0.1799,  0.4603, -0.0948, -0.7578,
         -0.5955, -1.5172], device='cuda:0'),
 tensor([ 0.8025,  1.2621,  0.9063,  0.8253,  0.5950,  0.2448, -0.0790, -0.9261,
         -1.3235, -2.4881], device='cuda:0'),
 tensor([-0.4854,  0.5332,  0.8061,  0.8074,  0.4122,  0.7778, -0.0577, -1.0889,
         -1.0076, -2.6564], device='cuda:0'),
 tensor([-0.0487,  0.6242,  0.5744,  0.5311,  0.2482,  0.0736,  0.0084, -0.1683,
         -0.6156, -1.2784], device='cuda:0'),
 tensor([-2.4743, -2.0018, -2.1087, -0.6975,  0.1194,  0.8328,  0.8947,  2.0015,
          2.7214,  3.0380], device='cuda:0'),
 tensor([-6.3508, -5.6576, -2.1768, -1.9277,  0.4396,  2.6057,  2.8456,  3.9362,
          4.4300,  4.9753], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-4.1735, -2.7967, -1.7568, -0.4545,  1.7041,  0.1376,  1.5971,  2.8665,
          3.8324,  5.9829], device='cuda:0'),
 tensor([-3.2467, -2.7236, -2.2678, -1.1105,  1.0636,  1.3649,  1.1237,  1.7750,
          3.0832,  3.8847], device='cuda:0'),
 tensor([-0.1017,  0.1253,  0.0981,  0.0463,  0.0475,  0.0769, -0.0488,  0.0409,
         -0.0027, -0.1372], device='cuda:0'),
 tensor([ 2.4353,  2.5953,  2.0255,  1.7497,  1.1613,  0.3236, -0.2636, -2.0237,
         -2.3337, -3.6155], device='cuda:0'),
 tensor([-0.8811, -0.5083, -0.1353, -0.5001,  0.3542,  0.5601,  0.5259,  0.4378,
          0.4659, -0.0629], device='cuda:0'),
 tensor([ 0.3065,  0.6459,  0.3281,  0.3373,  0.2712,  0.2347, -0.1635, -0.5253,
         -0.4816, -1.1696], device='cuda:0'),
 tensor([-2.3504, -1.5214, -0.4281,  0.1507,  0.7741,  0.9977,  0.9392,  0.4132,
          1.0482,  0.2193], device='cuda:0'),
 tensor([ 7.5712e-02,  7.4109e-01,  7.2868e-01,  6.3148e-01,  2.1994e-01,
          9.6438e-02,  1.3980e-03, -6.9811e-01, -7.3042e-01, -1.5633e+00],
        device='cuda:0'),
 tensor([ 2.9619,  3.0969,  2.5612,  2.2156,  1.4111,  0.4108, -0.3161, -2.3805,
         -2.7717, -4.0626], device='cuda:0'),
 tensor([ 1.3861,  1.5409,  0.9687,  0.9083,  0.7887,  0.2332, -0.2943, -1.3501,
         -1.4581, -2.7365], device='cuda:0'),
 tensor([-2.9770, -1.9754, -0.7667, -0.6574,  0.5646,  0.9336,  0.9945,  1.2259,
          1.1256,  0.2103], device='cuda:0'),
 tensor([ 0.3653,  0.5705,  0.4265,  0.2204,  0.1781,  0.0334,  0.0636, -0.1023,
         -0.9243, -0.9461], device='cuda:0'),
 tensor([-1.1237, -0.0037,  0.5060,  0.6278,  0.2479,  0.4903,  0.0728, -0.5543,
         -0.3851, -1.6968], device='cuda:0'),
 tensor([-0.3135,  0.2614,  0.2449, -0.1065,  0.2787,  0.5975,  0.1543, -0.3359,
         -0.1361, -1.0920], device='cuda:0'),
 tensor([-2.8988, -2.8745, -1.4238, -1.1631,  0.1374,  0.8321,  1.8551,  2.2971,
          2.3730,  2.8684], device='cuda:0'),
 tensor([ 1.4050,  1.3809,  1.0000,  0.7743,  0.4626,  0.2915, -0.1670, -0.7932,
         -2.0160, -1.6904], device='cuda:0'),
 tensor([-2.2384, -1.2785, -0.4368,  0.1859,  0.5251,  0.7573,  1.2213,  1.3672,
          0.9040,  0.6604], device='cuda:0'),
 tensor([-3.6544, -3.1977, -1.4236, -1.2021,  0.4650,  1.1148,  1.8780,  1.9223,
          2.3786,  1.6883], device='cuda:0'),
 tensor([ 0.7585,  0.7306,  0.5057,  0.2436,  0.2871,  0.1146,  0.0096, -0.2846,
         -1.2913, -1.2763], device='cuda:0'),
 tensor([-2.9712, -2.2018, -1.9206, -0.8105,  1.0541,  1.2777,  0.8348,  1.3943,
          2.4927,  3.0450], device='cuda:0'),
 tensor([-0.4529,  0.1649,  0.4402,  0.4225,  0.2038,  0.4196, -0.0488, -0.4990,
         -0.2979, -0.7462], device='cuda:0'),
 tensor([ 0.6408,  1.2761,  0.5300,  0.6038,  0.5500,  0.5927, -0.3016, -1.1913,
         -0.9107, -2.4188], device='cuda:0'),
 tensor([-3.4990, -2.4001, -0.8874, -0.4465,  0.4052,  1.1681,  1.5660,  1.6793,
          1.5666,  0.9364], device='cuda:0'),
 tensor([-3.2441, -2.9676, -1.9951, -1.0575,  0.3860,  0.5630,  1.7974,  1.8967,
          2.4068,  2.7201], device='cuda:0'),
 tensor([ 1.4264,  1.4599,  0.8889,  0.9903,  0.6821,  0.1571, -0.1572, -0.7204,
         -1.5485, -2.8758], device='cuda:0'),
 tensor([-1.7590, -0.7466, -0.3980,  0.1035,  0.6919,  0.8578,  0.4792,  0.3338,
          0.2047, -0.6336], device='cuda:0'),
 tensor([ 0.5977,  0.6645,  0.4539,  0.3806,  0.2439,  0.2292, -0.0967, -0.2840,
         -0.9687, -0.8424], device='cuda:0'),
 tensor([-2.3427, -1.3969, -0.2804,  0.2985,  0.6913,  1.0281,  0.5365,  0.5081,
          0.4387, -0.6906], device='cuda:0'),
 tensor([ 1.5232,  1.8481,  1.0647,  1.0997,  0.9008,  0.4357, -0.3692, -1.7343,
         -1.7321, -3.4858], device='cuda:0'),
 tensor([ 0.6756,  0.8989,  0.5853,  0.5812,  0.4174,  0.1870, -0.1089, -0.5024,
         -0.9242, -1.7061], device='cuda:0'),
 tensor([-3.7482, -5.3694, -1.4797, -1.5606,  0.1116,  2.1605,  1.2592,  2.3713,
          3.4430,  3.6752], device='cuda:0'),
 tensor([ 0.4187,  1.1181,  1.3310,  1.0278,  0.4424,  0.4817, -0.2327, -0.8981,
         -1.0182, -2.0928], device='cuda:0'),
 tensor([ 1.6390,  2.0100,  1.4476,  1.3390,  0.7342,  0.1342, -0.1235, -1.1619,
         -2.2160, -2.9204], device='cuda:0'),
 tensor([-0.3131, -0.0137,  0.1247, -0.2724,  0.2822,  0.5661,  0.2296,  0.0735,
          0.1389, -0.4446], device='cuda:0'),
 tensor([-5.0887e-01,  2.3397e-01,  4.3468e-01,  3.4412e-01,  4.2653e-01,
          7.2229e-01, -5.8329e-04, -6.7403e-01, -4.9772e-01, -1.7251e+00],
        device='cuda:0'),
 tensor([-1.5648, -0.6738, -0.4817,  0.0593,  0.5740,  0.5836,  0.4089,  0.5495,
          0.3523, -0.1715], device='cuda:0'),
 tensor([ 2.1397,  2.3549,  1.7592,  1.6070,  0.6697,  0.4320, -0.4142, -1.4221,
         -2.7584, -2.2484], device='cuda:0'),
 tensor([-1.3256, -0.0148,  0.4900,  0.4542,  0.2677, -0.0908,  0.3168,  0.4995,
          0.1962, -0.1767], device='cuda:0'),
 tensor([-0.1276,  0.6306,  1.0218,  0.6631,  0.3205,  0.3979, -0.1830, -0.6764,
         -0.6158, -1.3603], device='cuda:0'),
 tensor([-0.1527,  0.1598,  0.5062,  0.3335,  0.2459,  0.0793,  0.0537, -0.1149,
          0.1374, -0.1400], device='cuda:0'),
 tensor([ 0.1485,  1.0150,  0.8829,  0.8212,  0.3702,  0.0971,  0.0473, -0.4318,
         -1.0534, -1.8933], device='cuda:0'),
 tensor([-1.2270, -0.7724, -1.3081, -0.3677,  0.8877,  0.0368,  0.4479,  1.1890,
          2.5857,  3.1788], device='cuda:0'),
 tensor([-1.9132, -2.3654, -1.0389, -0.8811,  0.0477,  0.4795,  1.0071,  1.2764,
          1.7682,  1.8339], device='cuda:0'),
 tensor([-0.2696,  0.0955,  0.1288,  0.1126,  0.0977,  0.0248,  0.0467,  0.1303,
          0.0507, -0.0371], device='cuda:0'),
 tensor([ 0.8070,  1.2496,  1.1158,  1.0595,  0.3598,  0.5549, -0.2952, -1.3354,
         -1.1686, -2.4179], device='cuda:0'),
 tensor([-0.9656, -0.2804, -0.3238,  0.0540,  0.5853,  0.5092,  0.2756,  0.4446,
          0.3510,  0.1867], device='cuda:0'),
 tensor([-5.1130, -2.7579, -1.5367,  0.6841,  1.0264,  1.8313,  3.0951,  3.5661,
          3.0001,  2.9126], device='cuda:0'),
 tensor([-0.3174,  0.4328,  0.9517,  0.7888,  0.1394,  0.3999, -0.0456, -0.9088,
         -0.6797, -1.4676], device='cuda:0'),
 tensor([-3.6150, -3.8984, -1.4056, -1.5667,  0.1499,  1.6040,  1.7462,  2.3967,
          2.8416,  2.8284], device='cuda:0'),
 tensor([ 3.6499,  3.5306,  2.7115,  2.4769,  1.1764,  0.5243, -0.5855, -2.5909,
         -3.8180, -4.7516], device='cuda:0'),
 tensor([-0.6942, -0.3342, -0.0169, -0.5479,  0.3755,  0.6894,  0.4369,  0.3186,
          0.4392, -0.1930], device='cuda:0'),
 tensor([-0.6433,  0.2515,  0.3130,  0.2475,  0.2839,  0.5190,  0.1005, -0.4806,
         -0.4199, -1.5476], device='cuda:0'),
 tensor([ 0.5170,  0.8197,  0.6505,  0.4966,  0.2450,  0.0600,  0.0376, -0.3268,
         -0.5822, -0.5759], device='cuda:0'),
 tensor([ -8.7166, -10.3531,  -5.0484,  -3.9765,   0.6553,   2.8803,   5.8914,
           6.7359,   7.9721,  10.2662], device='cuda:0'),
 tensor([-1.9166, -0.7251, -0.4699,  0.4714,  0.2409,  0.4134,  1.0225,  1.5186,
          1.2523,  1.1323], device='cuda:0'),
 tensor([-2.6625, -1.2438, -0.0278,  1.0444,  0.9293,  0.8906,  0.5299,  0.4765,
          0.1802, -0.6442], device='cuda:0'),
 tensor([-2.0666, -1.8854, -0.3339, -0.1145,  0.3703,  0.7538,  0.8261,  0.8812,
          1.2080,  0.4862], device='cuda:0'),
 tensor([-2.4031, -2.1450, -1.6053, -0.2617,  0.8534,  1.4652,  0.9996,  1.3816,
          1.6436,  1.2438], device='cuda:0'),
 tensor([-4.4931e+00, -3.4500e+00, -1.6989e+00, -1.1191e+00,  2.0343e-03,
          1.2049e+00,  2.9112e+00,  3.8633e+00,  3.4531e+00,  3.0829e+00],
        device='cuda:0'),
 tensor([-2.4723, -1.2714, -0.5420,  0.3611,  0.5139,  0.8786,  1.3984,  1.6443,
          1.2500,  1.0931], device='cuda:0'),
 tensor([-4.5300, -5.1701, -2.2854, -1.9386, -0.2692,  1.2564,  2.4207,  3.0277,
          3.9013,  4.5849], device='cuda:0'),
 tensor([ 0.1264,  0.7934,  0.6469,  0.5897,  0.3449,  0.6504, -0.2672, -0.9923,
         -0.4760, -2.1871], device='cuda:0'),
 tensor([-0.6140, -0.0190,  0.3232,  0.3458,  0.2770, -0.0067,  0.2399,  0.2070,
          0.2992,  0.0919], device='cuda:0'),
 tensor([ 0.9511,  1.2089,  1.5969,  1.2070,  0.6328,  1.0660, -0.3989, -1.5243,
         -1.2361, -2.4840], device='cuda:0'),
 tensor([-5.7909, -6.8181, -3.0478, -2.7515,  0.1612,  2.8542,  2.3017,  3.3405,
          5.0504,  6.2210], device='cuda:0'),
 tensor([-2.0955, -2.3996, -1.1236, -0.9203, -0.0103,  1.0581,  1.2343,  1.6686,
          1.6661,  2.0807], device='cuda:0'),
 tensor([-0.3335, -0.1984,  0.4036,  0.2187,  0.1988,  0.2312,  0.2043,  0.1914,
          0.3703,  0.0509], device='cuda:0'),
 tensor([-0.8050,  0.1739,  1.2399,  1.1799,  0.6571,  1.1091,  0.1468, -1.3950,
         -0.9054, -1.5875], device='cuda:0'),
 tensor([-5.3370, -3.5043, -2.0130,  0.3035,  1.4471,  1.5903,  2.3209,  2.6877,
          2.7276,  2.5435], device='cuda:0'),
 tensor([ 0.6396,  0.8186,  0.7367,  0.5820,  0.2206,  0.1902, -0.0137, -0.5419,
         -1.5984, -1.8650], device='cuda:0'),
 tensor([ 2.2985,  1.9265,  1.6055,  0.9048,  0.6561,  0.2931, -0.1586, -1.2344,
         -2.8565, -3.0260], device='cuda:0'),
 tensor([-6.2690, -5.4202, -2.0133, -0.9522,  1.4172,  2.8708,  2.7396,  2.3121,
          2.9417,  1.5514], device='cuda:0'),
 tensor([ 2.0969,  2.3798,  1.6011,  1.7805,  0.9895,  0.3532, -0.2594, -1.3798,
         -2.9088, -4.7137], device='cuda:0'),
 tensor([ 2.7796,  3.0581,  2.3319,  2.1414,  0.8790,  0.5648, -0.4895, -1.8521,
         -3.4449, -2.9262], device='cuda:0'),
 tensor([-0.3919,  0.4409,  0.5137,  0.6363,  0.1706,  0.3617, -0.0994, -0.6128,
         -0.6439, -1.7060], device='cuda:0'),
 tensor([-0.3174, -0.1481, -0.3538, -0.1945,  0.2066,  0.2434,  0.0838,  0.2596,
          0.1476,  0.2063], device='cuda:0'),
 tensor([-1.2074, -1.2598, -1.1313, -0.5099,  0.0615,  0.3664,  0.6073,  1.0965,
          1.6611,  1.6788], device='cuda:0'),
 tensor([ 1.0719,  1.1692,  0.7881,  0.6748,  0.5817,  0.0757, -0.2088, -0.8939,
         -1.0837, -1.8337], device='cuda:0'),
 tensor([-2.1353, -1.9653, -0.6653, -0.6116,  0.0901,  0.8958,  1.0879,  1.3606,
          1.4168,  1.2593], device='cuda:0'),
 tensor([-0.2162,  0.1330,  0.4019,  0.3721,  0.4025,  0.4589, -0.0766, -0.4761,
         -0.2264, -0.5231], device='cuda:0'),
 tensor([-0.9502, -0.9928, -0.1049, -0.0412,  0.3237,  0.5715,  0.4780,  0.4862,
          0.8507,  0.5001], device='cuda:0'),
 tensor([ 2.1023,  2.0745,  1.3856,  1.2323,  1.1017,  0.1475, -0.3557, -1.7786,
         -2.0504, -3.4993], device='cuda:0'),
 tensor([-2.0283, -0.7239,  0.3841,  0.9416,  0.4206,  0.4969,  0.2829,  0.3217,
         -0.1186, -0.8749], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-0.6160, -0.6409,  0.1448,  0.0955,  0.6965,  0.6377,  0.4423, -0.0903,
          0.9264,  0.2836], device='cuda:0'),
 tensor([ 1.7771,  1.8824,  1.1988,  1.2522,  0.7862,  0.2534, -0.2244, -1.0021,
         -2.2285, -3.5352], device='cuda:0'),
 tensor([-0.2531,  0.6071,  0.5007,  0.4579,  0.2762,  0.6508, -0.0846, -0.9771,
         -0.6820, -2.1212], device='cuda:0'),
 tensor([-3.0320, -1.8199, -0.8761,  0.1622,  0.6715,  1.1692,  1.7438,  2.0510,
          1.6772,  1.4984], device='cuda:0'),
 tensor([ 0.1157,  1.3875,  1.2634,  1.6660,  0.5115,  0.7524, -0.3010, -1.5174,
         -1.8133, -4.2906], device='cuda:0'),
 tensor([-0.6208, -0.1293,  0.0845,  0.2179,  0.4422,  0.4888,  0.0070, -0.0308,
         -0.0092, -0.5287], device='cuda:0'),
 tensor([-2.5824, -1.7694, -0.5936, -0.1018,  0.4608,  0.8303,  1.1301,  1.2973,
          1.2308,  0.8519], device='cuda:0'),
 tensor([ 0.2110,  0.6274,  0.2785,  0.2919,  0.2573,  0.2953, -0.1760, -0.5088,
         -0.3981, -1.1423], device='cuda:0'),
 tensor([ 0.2534,  1.0132,  1.6756,  1.0648,  0.6751,  1.5511, -0.1513, -2.4766,
         -1.3710, -2.8581], device='cuda:0'),
 tensor([ 0.6597,  1.5424,  0.7334,  0.7986,  0.6037,  0.7935, -0.3453, -1.5743,
         -1.1442, -3.0911], device='cuda:0'),
 tensor([-0.7623,  0.0206,  0.1970,  0.1723,  0.3218,  0.4970,  0.1836, -0.2224,
         -0.2901, -1.2086], device='cuda:0'),
 tensor([-3.2336, -2.3530, -2.5983, -0.2775,  0.7154,  1.1003,  1.2845,  1.9573,
          3.1687,  3.7987], device='cuda:0'),
 tensor([ 1.1496,  1.2469,  0.8390,  0.7539,  0.4460,  0.2264, -0.1527, -0.5900,
         -1.7210, -1.2472], device='cuda:0'),
 tensor([-4.8404, -2.5867, -1.8630,  0.4364,  0.9350,  1.8594,  1.7441,  2.1341,
          2.0176,  2.6768], device='cuda:0'),
 tensor([-0.9629, -0.5851, -0.0616, -0.5917,  0.4427,  0.7680,  0.5709,  0.4372,
          0.5255, -0.2915], device='cuda:0'),
 tensor([-0.0642,  0.1401,  0.1925,  0.1437,  0.1359,  0.1521,  0.0062,  0.0380,
          0.0667, -0.0991], device='cuda:0'),
 tensor([ 0.4455,  0.9297,  0.4926,  0.5294,  0.3379,  0.4354, -0.2613, -0.8563,
         -0.6473, -1.6508], device='cuda:0'),
 tensor([-1.2256, -0.9817, -1.0511, -0.0503,  0.3595,  0.2120,  0.6445,  0.6236,
          0.8608,  2.0167], device='cuda:0'),
 tensor([-5.7069, -4.7842, -2.2893, -1.1302,  0.9950,  2.2024,  2.2281,  2.5682,
          3.1636,  1.9801], device='cuda:0'),
 tensor([ 3.3934,  3.7124,  2.7401,  2.4718,  1.3975,  1.0199, -0.2674, -2.2071,
         -3.5275, -5.9347], device='cuda:0'),
 tensor([-0.6140, -0.1523, -0.2243,  0.0696,  0.1153,  0.1460,  0.2954,  0.4491,
          0.4886,  0.4375], device='cuda:0'),
 tensor([-3.8985, -3.0100, -1.0935, -1.0937,  0.2302,  1.2402,  2.0904,  2.5966,
          2.4550,  2.3695], device='cuda:0'),
 tensor([ 1.4706,  1.6091,  1.1768,  1.0189,  0.7102, -0.0202, -0.0414, -0.7148,
         -1.5811, -1.2244], device='cuda:0'),
 tensor([-0.9502, -0.6877, -0.1623, -0.2597,  0.0051,  0.3944,  0.4124,  0.6158,
          0.5900,  0.4925], device='cuda:0'),
 tensor([ 0.0333,  0.5459,  1.1083,  0.6653,  0.2536,  0.4414, -0.2292, -0.6888,
         -0.5535, -1.1740], device='cuda:0'),
 tensor([-1.9972, -1.7762, -0.6506, -0.6683, -0.0671,  0.6824,  0.9816,  1.3647,
          1.4973,  1.5501], device='cuda:0'),
 tensor([-0.1032,  0.1142,  0.0762,  0.0456,  0.0660,  0.0850, -0.0449,  0.0545,
          0.0278, -0.1171], device='cuda:0'),
 tensor([-1.9081, -1.2080, -0.4045, -0.2464,  0.2089,  0.6094,  0.8042,  0.9303,
          0.7955,  0.3269], device='cuda:0'),
 tensor([ 1.1036,  1.6477,  1.1766,  1.1823,  0.5629,  0.9309, -0.4870, -1.7199,
         -1.3815, -3.0791], device='cuda:0'),
 tensor([ 0.9118,  0.7932,  0.5387,  0.2409,  0.3233,  0.1571, -0.0026, -0.3431,
         -1.4243, -1.4002], device='cuda:0'),
 tensor([ 1.9483,  2.3937,  1.9362,  1.7282,  0.5348,  0.4113, -0.2793, -1.4683,
         -2.4771, -2.2613], device='cuda:0'),
 tensor([-0.1812,  0.2251,  0.2570,  0.3108,  0.3809,  0.1568,  0.0733,  0.0298,
         -0.1063, -0.7165], device='cuda:0'),
 tensor([ 0.1788,  0.3670,  0.6299,  0.5358,  0.5281,  0.3148, -0.0112, -0.3089,
         -0.1218, -0.5222], device='cuda:0'),
 tensor([-1.7586, -0.6139,  0.0312,  0.5184,  1.3326,  1.3447,  0.2207, -0.0495,
         -0.0039, -1.2405], device='cuda:0'),
 tensor([-2.0646e+00, -1.1482e+00,  2.3985e-01, -1.0577e-03,  2.3534e-01,
          7.3306e-01,  1.1020e+00,  1.0887e+00,  8.4799e-01,  4.1542e-01],
        device='cuda:0'),
 tensor([-4.2758, -2.3310, -1.5492,  0.2382,  0.6333,  1.4519,  2.0049,  2.8912,
          2.3257,  2.5364], device='cuda:0'),
 tensor([ 0.9176,  1.5835,  1.7540,  1.6762,  0.4003,  0.8738, -0.4807, -2.1731,
         -1.7813, -3.5427], device='cuda:0'),
 tensor([-2.5313, -1.3610, -0.9204,  0.1184,  0.4044,  0.7389,  1.2066,  1.9057,
          1.5109,  1.5355], device='cuda:0'),
 tensor([-1.2296, -0.7791, -0.6694,  0.1004,  0.0832,  0.5119,  0.4948,  1.0777,
          0.9275,  1.1678], device='cuda:0'),
 tensor([-5.3800, -4.4872, -2.0534, -1.4342,  1.0011,  1.6937,  2.4223,  2.5843,
          3.1204,  1.9715], device='cuda:0'),
 tensor([-1.1999, -0.7888, -0.1538, -0.0633,  0.2835,  0.3704,  0.6229,  0.7231,
          0.9295,  0.7636], device='cuda:0'),
 tensor([-0.9418, -0.1855,  0.0844,  0.4418,  0.0959,  0.2066,  0.1061,  0.0129,
         -0.0966, -0.4104], device='cuda:0'),
 tensor([-0.6125,  0.1877,  0.1759,  0.1595,  0.2256,  0.3913,  0.1067, -0.2340,
         -0.2669, -1.1164], device='cuda:0'),
 tensor([ 1.2667,  1.3548,  0.9294,  0.7892,  0.6668,  0.0372, -0.2025, -0.9720,
         -1.2612, -1.9680], device='cuda:0'),
 tensor([ 1.6490,  1.9185,  1.3986,  1.2371,  0.7668,  0.1188, -0.1293, -0.8468,
         -1.4165, -1.4763], device='cuda:0'),
 tensor([-0.8430, -0.2338,  0.0837,  0.2959,  0.6292,  0.6824,  0.0361, -0.0617,
         -0.0274, -0.7067], device='cuda:0'),
 tensor([ 2.1118,  2.2574,  1.8268,  1.5011,  0.9709,  0.3226, -0.2049, -1.2152,
         -1.6472, -1.9191], device='cuda:0'),
 tensor([-0.1208,  0.3159,  0.1340,  0.0290,  0.0313,  0.1701, -0.0583, -0.1533,
          0.0361, -0.2872], device='cuda:0'),
 tensor([ 3.2511,  3.0456,  1.9863,  1.8509,  1.1070,  0.5902, -0.3149, -1.6951,
         -4.6318, -3.2711], device='cuda:0'),
 tensor([-1.6544e+00, -8.0876e-01,  3.0015e-01, -1.1340e-03,  6.5494e-01,
          1.2564e+00,  3.8310e-01, -4.3198e-01,  1.0455e-01, -1.3382e+00],
        device='cuda:0'),
 tensor([-0.2645,  0.6158,  0.2041,  0.1588,  0.1271,  0.3709,  0.0806, -0.5919,
         -0.3312, -1.1491], device='cuda:0'),
 tensor([-0.2745,  0.4289,  0.4911,  0.3870,  0.2240,  0.0957,  0.1189, -0.1893,
         -0.4063, -0.9925], device='cuda:0'),
 tensor([-0.1540,  0.5202,  0.0869,  0.2022,  0.3471,  0.4906,  0.1343, -0.3287,
         -0.3199, -1.3775], device='cuda:0'),
 tensor([ 0.1591,  0.8530,  0.4792,  0.4885,  0.2489,  0.5293, -0.1598, -0.9042,
         -0.6497, -1.9167], device='cuda:0'),
 tensor([ 0.4193,  0.8159,  0.6029,  0.6666,  0.3139,  0.3005, -0.1466, -0.5840,
         -0.8069, -1.6806], device='cuda:0'),
 tensor([-2.1738, -3.1276, -1.6271, -1.3771, -0.0281,  0.8437,  1.5974,  1.9277,
          2.5999,  2.6235], device='cuda:0'),
 tensor([-1.2455, -0.7474, -0.6431, -0.0107,  0.7922,  0.5756,  0.3723,  0.6410,
          0.9451,  1.0060], device='cuda:0'),
 tensor([ 1.1386,  1.6182,  1.4504,  1.4329,  0.4147,  0.4419, -0.0641, -1.1290,
         -2.0889, -2.0008], device='cuda:0'),
 tensor([ 1.5671,  1.7110,  1.4219,  1.2443,  0.6091,  0.4454, -0.4107, -1.3813,
         -1.5892, -2.5906], device='cuda:0'),
 tensor([-1.9170, -1.5976, -0.6456, -0.3069,  0.4808,  0.9916,  0.6180,  0.6176,
          0.9305, -0.0505], device='cuda:0'),
 tensor([-2.5171, -2.7751, -2.5701, -0.7324,  0.4262,  1.1380,  1.0133,  2.1887,
          3.0032,  3.2604], device='cuda:0'),
 tensor([-1.3792, -0.2676,  0.1364,  0.3153,  0.3310,  0.3564,  0.5215,  0.2381,
         -0.0080, -0.6548], device='cuda:0'),
 tensor([-0.8899, -0.6052, -0.4777, -0.0238,  0.2019,  0.3880,  0.3904,  0.6916,
          0.6677,  0.5725], device='cuda:0'),
 tensor([ 0.2667,  1.0591,  0.6602,  0.6623,  0.3488,  0.6153, -0.2751, -1.0907,
         -0.7686, -2.3673], device='cuda:0'),
 tensor([ 2.1885,  2.3639,  1.7695,  1.7058,  0.8550,  0.4399, -0.1751, -1.3428,
         -3.2130, -2.3330], device='cuda:0'),
 tensor([ 1.2873,  1.4607,  0.9929,  1.0058,  0.7879,  0.3913, -0.4372, -1.3296,
         -1.1554, -2.5146], device='cuda:0'),
 tensor([ 0.9160,  1.2282,  0.6990,  0.7158,  0.5812,  0.3207, -0.2588, -1.1057,
         -1.1024, -2.3027], device='cuda:0'),
 tensor([-2.0251, -2.2869, -0.7011, -0.9028,  0.2351,  1.1156,  0.9182,  1.6294,
          1.8515,  1.7880], device='cuda:0'),
 tensor([ 1.5348,  2.0238,  1.8435,  1.3895,  0.7288,  0.6834, -0.0318, -1.5578,
         -1.6352, -1.7719], device='cuda:0'),
 tensor([ 0.0554,  0.2653,  0.4269,  0.3594,  0.3602,  0.2244, -0.0199, -0.1772,
         -0.0554, -0.3371], device='cuda:0'),
 tensor([-0.2346,  0.0542,  0.0421,  0.0436,  0.0981,  0.1238,  0.0766,  0.1728,
          0.0963,  0.1774], device='cuda:0'),
 tensor([-1.5331, -1.3075, -0.9606, -0.1266,  0.5658,  0.9233,  0.6427,  0.9224,
          1.0280,  0.6722], device='cuda:0'),
 tensor([ 0.9369,  1.1115,  0.8102,  0.7205,  0.4513,  0.2017,  0.0220, -0.6698,
         -1.3502, -1.8736], device='cuda:0'),
 tensor([-6.3922, -6.9105, -3.7453, -2.6513,  0.8438,  1.7616,  3.4995,  4.6309,
          6.0652,  7.3749], device='cuda:0'),
 tensor([-0.3666,  0.2720,  0.9873,  0.8235,  0.2388,  0.5117,  0.0178, -0.9079,
         -0.4573, -1.1272], device='cuda:0'),
 tensor([ 0.1693,  0.9149,  0.5383,  0.5391,  0.4040,  0.3607, -0.1880, -0.8335,
         -0.6837, -1.7881], device='cuda:0'),
 tensor([-0.4135,  0.8063,  0.7518,  0.6729,  0.4546,  1.0101, -0.0754, -1.5402,
         -1.0634, -3.2305], device='cuda:0'),
 tensor([-1.7269, -1.8983, -0.6173, -0.5680,  0.0452,  0.8393,  0.5199,  0.9399,
          1.2797,  1.1139], device='cuda:0'),
 tensor([-4.1880, -4.9780, -2.5309, -1.7345,  0.2548,  2.0010,  2.1662,  2.4471,
          3.2252,  4.3488], device='cuda:0'),
 tensor([-0.0371,  0.1733,  0.3372,  0.2375,  0.2066,  0.2446, -0.1061, -0.2400,
         -0.0671, -0.2924], device='cuda:0'),
 tensor([-1.6107, -0.7694, -0.1688,  0.5449,  0.4432,  0.5257,  0.2265,  0.4848,
          0.2775, -0.0945], device='cuda:0'),
 tensor([ 0.2145,  0.6172,  0.2893,  0.2794,  0.2195,  0.2360, -0.0905, -0.3237,
         -0.2240, -0.9501], device='cuda:0'),
 tensor([ 0.6375,  1.3422,  1.8852,  1.3002,  0.6042,  1.4810, -0.2348, -2.6182,
         -1.5766, -2.9192], device='cuda:0'),
 tensor([-6.9760, -7.0438, -3.7210, -1.9319,  0.6707,  1.8545,  2.9029,  4.1258,
          4.9571,  4.8943], device='cuda:0'),
 tensor([-1.3842, -0.4885,  0.0819,  0.4858,  1.0847,  1.1539,  0.1069, -0.1368,
         -0.0718, -1.1404], device='cuda:0'),
 tensor([-2.2354, -2.4124, -0.7682, -1.0771,  0.4496,  0.9312,  1.7549,  1.6515,
          2.2684,  1.7735], device='cuda:0'),
 tensor([-1.2846, -0.4386, -0.1194,  0.2860,  0.2420,  0.4335,  0.5586,  0.6612,
          0.4135,  0.3133], device='cuda:0'),
 tensor([ 0.6994,  1.1464,  1.3904,  0.8823,  0.4359,  0.6409,  0.0030, -1.1735,
         -1.0079, -1.1551], device='cuda:0'),
 tensor([-4.4182, -3.1652, -2.1697, -0.5764,  1.2766,  1.5315,  1.9227,  2.3959,
          2.6121,  2.5032], device='cuda:0'),
 tensor([-1.0119, -0.4212,  0.6800,  0.3246,  0.1675,  0.5313,  0.3249,  0.2282,
          0.2052, -0.2838], device='cuda:0'),
 tensor([-4.7048, -5.8572, -3.5815, -2.2101, -0.1699,  1.6746,  2.6035,  3.9870,
          5.6847,  6.3072], device='cuda:0'),
 tensor([-0.1837,  0.3555,  0.3353,  0.2993,  0.1833,  0.1975,  0.2392,  0.0659,
         -0.4063, -1.0470], device='cuda:0'),
 tensor([ 0.2196,  0.6245,  0.9911,  0.6017,  0.3914,  0.8707, -0.1530, -1.2705,
         -0.7033, -1.2980], device='cuda:0'),
 tensor([-0.7176, -0.1748,  0.0842,  0.2519,  0.5237,  0.5731,  0.0196, -0.0442,
         -0.0171, -0.6063], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-5.6811, -5.1132, -3.1885, -1.9521,  0.7949,  1.6772,  2.8757,  3.5426,
          4.7784,  4.8420], device='cuda:0'),
 tensor([-0.2463,  0.2505,  0.1933,  0.1405,  0.1489,  0.2289,  0.2111,  0.0629,
         -0.0825, -0.0989], device='cuda:0'),
 tensor([ 0.3429,  0.5843,  0.5344,  0.3630,  0.3104,  0.4445, -0.0504, -0.4217,
         -0.4817, -1.2827], device='cuda:0'),
 tensor([-0.1021,  0.1253,  0.0973,  0.0460,  0.0476,  0.0772, -0.0479,  0.0412,
         -0.0026, -0.1370], device='cuda:0'),
 tensor([-1.2556, -0.2587,  0.2258,  0.4998,  0.2109,  0.2203,  0.1546,  0.1530,
         -0.0362, -0.5683], device='cuda:0'),
 tensor([-8.4819, -9.6321, -4.1258, -4.0689,  1.7080,  4.3721,  4.0190,  5.6466,
          8.5288, 10.1627], device='cuda:0'),
 tensor([-4.5568, -4.6502, -3.0096, -1.5798,  0.1948,  0.5731,  2.6646,  2.8300,
          3.5943,  3.3964], device='cuda:0'),
 tensor([-1.4692, -1.0712, -0.2678, -0.3661, -0.0284,  0.5755,  0.6989,  0.9839,
          0.9101,  0.8319], device='cuda:0'),
 tensor([ 0.2416,  1.0951,  0.6104,  0.6424,  0.3222,  0.6866, -0.1963, -1.2188,
         -0.8737, -2.5232], device='cuda:0'),
 tensor([-0.0538,  0.0900,  0.2874,  0.2192,  0.0830,  0.2011,  0.1007, -0.0803,
         -0.1874, -0.3324], device='cuda:0'),
 tensor([-0.7346, -0.5146, -0.3740, -0.0433,  0.2756,  0.4251,  0.2615,  0.4333,
          0.4689,  0.2323], device='cuda:0'),
 tensor([ 1.5789,  1.9879,  1.5644,  1.3457,  0.4272,  0.2958, -0.2552, -1.0875,
         -1.9590, -1.8236], device='cuda:0'),
 tensor([-1.3307, -0.3783, -0.1612,  0.0762,  0.4474,  0.4000,  0.6015,  0.4954,
          0.3064, -0.3059], device='cuda:0'),
 tensor([-1.8210, -0.7687, -0.5351,  0.3093,  0.1858,  0.4403,  0.9031,  1.4867,
          1.2751,  1.2311], device='cuda:0'),
 tensor([-6.4207, -6.4774, -4.8622, -2.3264, -0.5174,  0.9204,  3.6903,  5.1543,
          6.3813,  7.3568], device='cuda:0'),
 tensor([-4.8896, -4.7562, -2.0247, -1.6720,  0.3405,  1.7538,  2.7118,  3.2287,
          3.7964,  3.9157], device='cuda:0'),
 tensor([-2.5599, -2.1717, -1.2037, -1.0560, -0.0202,  0.2693,  1.9620,  2.4068,
          2.4669,  2.8029], device='cuda:0'),
 tensor([-1.4683, -0.7789, -0.1561,  0.2490,  0.6068,  0.8723,  0.2407,  0.1330,
          0.1539, -0.6680], device='cuda:0'),
 tensor([-0.7298, -0.6151, -0.6641, -0.1022,  0.2328,  0.1656,  0.3564,  0.3424,
          0.5554,  1.1495], device='cuda:0'),
 tensor([ 1.3826,  1.6951,  1.3040,  1.1204,  0.7035,  0.2394, -0.0509, -1.5553,
         -1.6060, -2.8021], device='cuda:0'),
 tensor([ 3.3010,  3.3603,  2.4176,  2.2537,  1.4836, -0.0258, -0.0689, -1.5811,
         -3.2849, -2.5839], device='cuda:0'),
 tensor([-0.4208, -0.0329,  0.0859,  0.1484,  0.2723,  0.3157, -0.0187, -0.0035,
          0.0052, -0.3669], device='cuda:0'),
 tensor([ 0.9185,  1.4069,  1.0133,  1.0072,  0.4782,  0.8003, -0.4256, -1.4485,
         -1.1649, -2.6128], device='cuda:0'),
 tensor([-0.9889,  0.0920,  0.4322,  0.4239,  0.1916,  0.3233,  0.3224, -0.1438,
         -0.2289, -1.0645], device='cuda:0'),
 tensor([ 0.8686,  1.6207,  1.8490,  1.3254,  0.8055,  0.9215, -0.0136, -1.9449,
         -1.6174, -1.7641], device='cuda:0'),
 tensor([ 0.0802,  0.3618,  0.2208,  0.1767,  0.1526,  0.1562, -0.0881, -0.1988,
         -0.2462, -0.6384], device='cuda:0'),
 tensor([ 4.0479,  4.0177,  2.9646,  2.7918,  1.5890,  0.4502, -0.4101, -2.1509,
         -5.0278, -3.4277], device='cuda:0'),
 tensor([ 0.5753,  0.6625,  0.2658,  0.5286,  0.3599,  0.0535,  0.0035, -0.1473,
         -0.5390, -1.4635], device='cuda:0'),
 tensor([-0.5881,  0.0397,  0.4873,  0.3317,  0.3811,  0.6335, -0.0450, -0.6879,
         -0.4218, -1.3490], device='cuda:0'),
 tensor([-1.0659, -0.0862,  0.2138,  0.4327,  0.3092,  0.0666,  0.4926,  0.5979,
          0.3228,  0.2883], device='cuda:0'),
 tensor([-5.1680, -2.9921, -1.6218,  0.3677,  1.2684,  1.7811,  2.1189,  1.9759,
          1.9293,  1.6964], device='cuda:0'),
 tensor([-6.6909, -3.5530, -2.0965,  0.4419,  1.5444,  2.1954,  2.7765,  3.3564,
          2.9680,  2.8338], device='cuda:0'),
 tensor([-0.0536,  0.6646,  0.8037,  0.7846,  0.1899,  0.2610, -0.1023, -0.5295,
         -0.6760, -1.4785], device='cuda:0'),
 tensor([-0.9813, -0.8058, -0.5139, -0.3541,  0.0266, -0.0021,  0.4873,  0.6863,
          0.7293,  0.8025], device='cuda:0'),
 tensor([-0.6718, -0.2949, -0.0114,  0.0309,  0.1254,  0.2405,  0.1055,  0.1575,
          0.1099, -0.1588], device='cuda:0'),
 tensor([ 1.2576,  1.4479,  0.9507,  0.8519,  0.7148,  0.2210, -0.2537, -1.2822,
         -1.3797, -2.5457], device='cuda:0'),
 tensor([-0.7538, -0.5178, -0.0927, -0.1914,  0.0327,  0.3538,  0.2893,  0.4802,
          0.4529,  0.3812], device='cuda:0'),
 tensor([-0.5468, -0.0451,  0.0892,  0.2389,  0.1712,  0.1741,  0.1177,  0.2229,
          0.0818, -0.0912], device='cuda:0'),
 tensor([-0.4486, -0.2119, -0.1292, -0.0561,  0.1690,  0.2350,  0.1202,  0.2216,
          0.2978,  0.1378], device='cuda:0'),
 tensor([-3.0673, -1.3878, -0.8991,  0.6431,  0.5222,  0.9161,  1.7646,  2.1795,
          1.9863,  1.8900], device='cuda:0'),
 tensor([-1.9828, -1.8845, -0.7814, -0.8924,  0.4862,  0.8908,  1.1281,  1.1894,
          1.3151,  0.6964], device='cuda:0'),
 tensor([-1.1437, -0.5406,  0.4016,  0.4864,  0.7172,  0.9932,  0.2937, -0.4824,
         -0.0435, -0.8320], device='cuda:0'),
 tensor([-0.4810, -0.8512,  0.2141,  0.1330,  0.1542,  0.4420,  0.2825,  0.5124,
          0.6995,  0.4359], device='cuda:0'),
 tensor([-2.9110, -2.9288, -1.2006, -1.5096,  0.3553,  1.1173,  1.7474,  1.9316,
          2.3598,  1.6923], device='cuda:0'),
 tensor([ 0.5066,  0.6245,  0.9917,  0.6483,  0.3117,  0.6800, -0.1873, -0.7714,
         -0.6164, -1.4390], device='cuda:0'),
 tensor([ 1.3169,  1.5326,  1.6392,  1.0704,  0.5455,  0.4709, -0.1188, -1.1068,
         -1.1315, -1.4205], device='cuda:0'),
 tensor([-1.3785, -1.4497, -0.8158, -0.5538,  0.0026,  0.3735,  0.8256,  1.0584,
          1.1459,  1.3608], device='cuda:0'),
 tensor([ 2.5182,  2.7834,  2.1159,  1.9389,  0.8003,  0.5120, -0.4503, -1.6738,
         -3.1403, -2.6573], device='cuda:0'),
 tensor([-4.3639, -4.8118, -2.3648, -1.9733, -0.0539,  1.1580,  3.6515,  4.0443,
          3.8305,  5.3585], device='cuda:0'),
 tensor([-3.7952, -4.5773, -1.4292, -1.6868, -0.1120,  1.7753,  1.7999,  2.5137,
          2.9876,  3.0293], device='cuda:0'),
 tensor([-0.2238,  0.2501,  0.6022,  0.3102,  0.2900,  0.7348, -0.0100, -0.8008,
         -0.3726, -1.2500], device='cuda:0'),
 tensor([ 0.1115,  0.2482,  0.3769,  0.2466,  0.2063,  0.1810, -0.1098, -0.1721,
         -0.0762, -0.3536], device='cuda:0'),
 tensor([ 1.7069,  1.8259,  1.3001,  1.1819,  0.7884, -0.0293, -0.0271, -0.7983,
         -1.7987, -1.3958], device='cuda:0'),
 tensor([-1.2157, -0.4989,  0.7107,  0.6736,  1.2414,  1.3186,  0.1861, -0.8740,
         -0.1382, -1.2554], device='cuda:0'),
 tensor([ 0.3593,  1.0416,  1.5307,  1.1129,  0.3828,  1.0707, -0.1994, -2.0123,
         -1.2571, -2.4737], device='cuda:0'),
 tensor([ 0.2803,  1.0666,  0.5875,  0.5954,  0.3841,  0.5370, -0.2058, -1.0674,
         -0.7945, -2.1946], device='cuda:0'),
 tensor([-0.5298, -0.1608, -0.0237,  0.0763,  0.2910,  0.3780,  0.0844,  0.1377,
          0.0814, -0.1186], device='cuda:0'),
 tensor([ 9.8018e-01,  8.3749e-01,  5.6791e-01,  2.5450e-01,  3.4382e-01,
          1.6475e-01,  1.3884e-05, -3.6979e-01, -1.5229e+00, -1.4877e+00],
        device='cuda:0'),
 tensor([-1.2019,  0.1380,  0.6507,  0.7287,  0.4945,  0.8786,  0.0916, -0.9748,
         -0.7109, -2.6436], device='cuda:0'),
 tensor([ 3.8602,  4.1307,  3.0337,  2.7690,  1.7271,  0.1858, -0.2165, -1.9403,
         -3.2998, -3.1733], device='cuda:0'),
 tensor([-1.4014, -0.1407,  0.5603,  0.6794,  0.3584,  0.7927,  0.1222, -0.6935,
         -0.4776, -1.5165], device='cuda:0'),
 tensor([-0.4377, -0.0503,  0.0634,  0.1801,  0.1136,  0.1725,  0.0151,  0.1283,
          0.0332, -0.1604], device='cuda:0'),
 tensor([-0.8310, -0.6896, -0.6316, -0.0774,  0.3866,  0.3760,  0.3293,  0.5517,
          0.6328,  0.5729], device='cuda:0'),
 tensor([-1.7889, -0.7263, -0.0607,  0.5856,  0.2734,  0.6159,  0.5855,  0.3527,
          0.2455,  0.0430], device='cuda:0'),
 tensor([ 2.9370,  3.1305,  2.2309,  2.1287,  1.1773,  0.2581, -0.2718, -1.9475,
         -3.6500, -4.4430], device='cuda:0'),
 tensor([-8.0422, -7.3450, -4.5035, -3.7762,  1.0864,  1.0216,  7.4239,  8.4460,
          8.2497, 11.1233], device='cuda:0'),
 tensor([-1.3289, -0.1337,  0.2886,  0.4588,  0.2156,  0.3328,  0.3764, -0.0603,
         -0.2449, -1.1168], device='cuda:0'),
 tensor([-2.4892, -0.8691,  0.0595,  0.6175,  0.4286,  0.6244,  0.9262,  0.7604,
          0.2329, -0.1609], device='cuda:0'),
 tensor([-0.3524, -0.2180,  0.4272,  0.2301,  0.1983,  0.2421,  0.2199,  0.2026,
          0.3906,  0.0650], device='cuda:0'),
 tensor([ 0.1272,  0.3520,  0.5961,  0.5278,  0.5320,  0.3082,  0.0183, -0.2775,
         -0.1026, -0.4630], device='cuda:0'),
 tensor([ 1.1983,  1.6179,  1.1580,  1.1093,  0.7043,  0.2900, -0.0651, -1.0224,
         -1.8049, -2.9484], device='cuda:0'),
 tensor([-2.4487, -0.9983, -0.3687,  0.5059,  0.6913,  0.5506,  0.7826,  1.1165,
          0.7610,  1.1043], device='cuda:0'),
 tensor([ 0.3084,  0.6454,  1.2752,  0.7844,  0.3026,  0.4967, -0.2993, -0.8788,
         -0.7119, -1.4062], device='cuda:0'),
 tensor([ 0.7522,  1.3449,  0.9609,  0.9701,  0.5772,  0.2372, -0.0576, -0.7271,
         -1.3432, -2.5998], device='cuda:0'),
 tensor([-0.1999, -0.1749, -0.1699, -0.0252,  0.2104,  0.1618,  0.0463,  0.1456,
          0.2238,  0.1037], device='cuda:0'),
 tensor([-6.6211, -5.6400, -3.2379, -1.7140, -0.1892,  1.9587,  3.6718,  4.7888,
          5.1649,  5.4578], device='cuda:0'),
 tensor([-1.0897, -0.2620, -0.0433,  0.2997,  0.2392,  0.4039,  0.4387,  0.2902,
          0.1358,  0.0026], device='cuda:0'),
 tensor([ 1.4656,  1.6030,  1.1514,  1.0233,  0.6928, -0.0214, -0.0341, -0.6941,
         -1.5624, -1.2224], device='cuda:0'),
 tensor([-2.5999, -1.1581, -0.3601,  0.7945,  0.9063,  1.1228,  0.6143,  0.4534,
          0.2900, -0.5674], device='cuda:0'),
 tensor([ 2.2583,  2.2945,  1.8703,  1.6867,  0.9246,  0.5555, -0.4756, -1.9557,
         -2.2436, -3.5754], device='cuda:0'),
 tensor([ 2.1330,  2.2160,  1.7803,  1.5923,  1.0827,  0.5020, -0.4020, -1.9163,
         -2.0175, -3.4861], device='cuda:0'),
 tensor([-2.4263, -1.4331, -0.4383,  0.3902,  0.5344,  0.6231,  1.2387,  1.5958,
          1.1844,  0.8741], device='cuda:0'),
 tensor([-1.1666, -0.3335,  0.3219,  0.6683,  0.3746,  0.6462,  0.2754,  0.0600,
          0.0674, -0.4529], device='cuda:0'),
 tensor([-0.0654,  0.4852,  0.1201,  0.1913,  0.2581,  0.3855,  0.0515, -0.2925,
         -0.2726, -1.1270], device='cuda:0'),
 tensor([-1.9369, -1.4385, -0.4596, -0.9772,  0.4756,  0.6844,  1.1361,  1.1173,
          1.3110,  0.6830], device='cuda:0'),
 tensor([-4.0329, -2.0837, -0.8794,  0.5100,  0.9405,  1.4527,  1.6702,  1.7023,
          1.2918,  0.9746], device='cuda:0'),
 tensor([-4.6582, -5.2499, -2.8236, -1.8784, -0.3801,  0.9641,  2.6254,  3.7049,
          4.5192,  4.7083], device='cuda:0'),
 tensor([-0.1226,  0.4909,  0.4257,  0.3339,  0.2512,  0.1962, -0.0922, -0.3901,
         -0.3730, -1.0137], device='cuda:0'),
 tensor([-1.8905, -1.8122, -0.5955, -0.7918,  0.0465,  0.9271,  0.7915,  1.0409,
          1.2401,  1.2195], device='cuda:0'),
 tensor([-2.4405, -1.1927, -0.7698, -0.4266,  0.9940,  0.4231,  0.4977,  1.3032,
          1.7265,  2.2059], device='cuda:0'),
 tensor([ 0.1582,  1.0353,  0.5952,  0.6268,  0.2881,  0.6900, -0.1715, -1.1973,
         -0.8594, -2.5056], device='cuda:0'),
 tensor([ 0.9144,  0.7948,  0.5398,  0.2414,  0.3241,  0.1574, -0.0025, -0.3441,
         -1.4280, -1.4035], device='cuda:0'),
 tensor([-1.6555, -1.2597, -1.0233, -0.1565,  0.5091,  0.7420,  0.8515,  1.2441,
          1.2218,  1.0369], device='cuda:0'),
 tensor([ 0.2745,  0.7760,  1.0183,  0.7003,  0.3213,  0.8424, -0.1599, -1.4614,
         -0.8552, -1.9774], device='cuda:0'),
 tensor([-1.4872, -1.3029, -1.0248, -0.0681,  0.8026,  0.6610,  0.4312,  1.0646,
          1.2856,  1.8711], device='cuda:0'),
 tensor([ 0.5315,  1.0013,  1.6618,  1.0186,  0.3373,  1.0131, -0.2787, -1.7859,
         -1.1354, -2.0457], device='cuda:0'),
 tensor([-0.0221,  0.8546,  1.2116,  1.1587,  0.1270,  0.5083, -0.0964, -1.1821,
         -1.1595, -1.6568], device='cuda:0'),
 tensor([ 0.3375,  0.9346,  0.4496,  0.4630,  0.3631,  0.4791, -0.2229, -0.8809,
         -0.6560, -1.8166], device='cuda:0'),
 tensor([-1.9018, -1.4319, -0.2798, -0.4142,  0.0276,  0.8617,  0.8926,  1.2800,
          1.1522,  1.2041], device='cuda:0'),
 tensor([-0.4925, -0.2595, -0.0724,  0.0216,  0.0537, -0.0157,  0.0791,  0.1969,
          0.0199, -0.1703], device='cuda:0'),
 ...]

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[12], line 1[0m
[0;32m----> 1[0m [43mtorch[49m[38;5;241;43m.[39;49m[43mTensor[49m[43m([49m[43mmodel[49m[38;5;241;43m.[39;49m[43mtest_step_pred[49m[43m)[49m

[0;31mValueError[0m: only one element tensors can be converted to Python scalars


tensor([[ 0.7262,  0.6727,  0.4595,  ..., -0.2706, -1.1564, -1.1626],
        [-1.2450, -0.7326, -0.9563,  ...,  0.5720,  0.9646,  1.7872],
        [-0.2280,  0.5529,  0.6339,  ..., -0.4027, -0.4934, -1.1914],
        ...,
        [-2.0446, -2.1469, -0.6631,  ...,  1.3594,  1.6639,  1.7631],
        [ 2.7852,  2.8610,  2.2246,  ..., -2.3277, -2.5479, -4.2260],
        [-2.9499, -4.3025, -1.9252,  ...,  2.2575,  2.7650,  3.5076]],
       device='cuda:0')


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[15], line 3[0m
[1;32m      1[0m wandb[38;5;241m.[39mlog({[38;5;124m"[39m[38;5;124mconf_mat[39m[38;5;124m"[39m : wandb[38;5;241m.[39mplot[38;5;241m.[39mconfusion_matrix(probs[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m      2[0m                                 y_true[38;5;241m=[39mmodel[38;5;241m.[39mtest_step_y[38;5;241m.[39mnumpy(),
[0;32m----> 3[0m                                 preds[38;5;241m=[39m[43mmodel[49m[38;5;241;43m.[39;49m[43mtest_step_pred[49m[38;5;241;43m.[39;49m[43mnumpy[49m[43m([49m[43m)[49m,
[1;32m      4[0m                                 class_names[38;5;241m=[39m[k [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;241m10[39m)]
[1;32m      5[0m                                 )})

[0;31mTypeError[0m: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs

Model init
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/callbacks/model_checkpoint.py:654: Checkpoint directory ./Predict-rain-WNorway/lhub6n7j/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name    | Type             | Params | Mode
-----------------------------------------------------
0 | model   | Wang2024         | 7.4 M  | train
1 | loss_fn | CrossEntropyLoss | 0      | train
-----------------------------------------------------
7.4 M     Trainable params
0         Non-trainable params
7.4 M     Total params
29.534    Total estimated model params size (MB)
9         Modules in train mode
0         Modules in eval mode
Epoch 0: 100%|█████████████████████████████████████████████████████████████████████████████████| 100/100 [00:08<00:00, 12.45it/s, v_num=6n7j]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'train_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████| 36/36 [00:00<00:00, 78.40it/s]
`Trainer.fit` stopped: `max_epochs=1` reached.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'test_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        test/loss           1.9024139642715454
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[17], line 1[0m
[0;32m----> 1[0m wandb[38;5;241m.[39mlog({[38;5;124m"[39m[38;5;124mconf_mat[39m[38;5;124m"[39m : [43mwandb[49m[38;5;241;43m.[39;49m[43mplot[49m[38;5;241;43m.[39;49m[43mconfusion_matrix[49m[43m([49m[43mprobs[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[1;32m      2[0m [43m                                [49m[43my_true[49m[38;5;241;43m=[39;49m[43mmodel[49m[38;5;241;43m.[39;49m[43mtest_step_y[49m[38;5;241;43m.[39;49m[43mnumpy[49m[43m([49m[43m)[49m[43m,[49m[43m [49m
[1;32m      3[0m [43m                                [49m[43mpreds[49m[38;5;241;43m=[39;49m[43mmodel[49m[38;5;241;43m.[39;49m[43mtest_step_pred[49m[38;5;241;43m.[39;49m[43mnumpy[49m[43m([49m[43m)[49m[43m,[49m
[1;32m      4[0m [43m                                [49m[43mclass_names[49m[38;5;241;43m=[39;49m[43m[[49m[43mk[49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mk[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[38;5;28;43mrange[39;49m[43m([49m[38;5;241;43m10[39;49m[43m)[49m[43m][49m
[1;32m      5[0m [43m                                [49m[43m)[49m})

File [0;32m/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/wandb/plot/confusion_matrix.py:141[0m, in [0;36mconfusion_matrix[0;34m(probs, y_true, preds, class_names, title, split_table)[0m
[1;32m    139[0m n_classes [38;5;241m=[39m [38;5;28mlen[39m(class_names)
[1;32m    140[0m class_idx [38;5;241m=[39m [38;5;28mlist[39m([38;5;28mrange[39m(n_classes))
[0;32m--> 141[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m([38;5;28;43mset[39;49m[43m([49m[43mpreds[49m[43m)[49m) [38;5;241m>[39m [38;5;28mlen[39m(class_names):
[1;32m    142[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    143[0m         [38;5;124m"[39m[38;5;124mThe number of unique predicted classes exceeds the number of class names.[39m[38;5;124m"[39m
[1;32m    144[0m     )
[1;32m    146[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m([38;5;28mset[39m(y_true)) [38;5;241m>[39m [38;5;28mlen[39m(class_names):

[0;31mTypeError[0m: unhashable type: 'numpy.ndarray'

tensor([1, 8, 3,  ..., 6, 2, 4])

array([1, 8, 3, ..., 6, 2, 4])


tensor([[ 1.0569,  1.2499,  1.4155,  ..., -0.5870, -1.0462, -1.8034],
        [-3.2549, -2.0585, -1.5723,  ...,  1.9653,  2.1801,  3.0273],
        [ 1.4435,  1.8273,  0.9700,  ..., -0.3867, -0.2404, -1.4915],
        ...,
        [-0.9459, -0.0688, -0.1097,  ...,  0.8002,  0.8218,  0.3712],
        [ 2.3382,  2.4254,  1.5765,  ..., -1.0680, -2.1112, -2.4802],
        [-4.7594, -2.7372, -1.2088,  ...,  3.0759,  4.3161,  3.7616]])

<function Tensor.numpy>


array([[ 1.0569453 ,  1.2499175 ,  1.4154894 , ..., -0.5869553 ,
        -1.0462297 , -1.8033652 ],
       [-3.2548673 , -2.058511  , -1.5722984 , ...,  1.9652508 ,
         2.1801157 ,  3.0272624 ],
       [ 1.4435341 ,  1.8272926 ,  0.9699688 , ..., -0.38666338,
        -0.24038991, -1.4915317 ],
       ...,
       [-0.9458796 , -0.06883943, -0.1097307 , ...,  0.80021733,
         0.82176673,  0.3711567 ],
       [ 2.3381958 ,  2.4254093 ,  1.5765082 , ..., -1.0679951 ,
        -2.1112075 , -2.4801912 ],
       [-4.759408  , -2.7371593 , -1.2087858 , ...,  3.0759497 ,
         4.316113  ,  3.7616348 ]], dtype=float32)

[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[24], line 1[0m
[0;32m----> 1[0m [43mdet[49m(preds
[1;32m      2[0m )

[0;31mNameError[0m: name 'det' is not defined
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs

Model init
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/callbacks/model_checkpoint.py:654: Checkpoint directory ./Predict-rain-WNorway/lhub6n7j/checkpoints exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]

  | Name    | Type             | Params | Mode
-----------------------------------------------------
0 | model   | Wang2024         | 7.4 M  | train
1 | loss_fn | CrossEntropyLoss | 0      | train
-----------------------------------------------------
7.4 M     Trainable params
0         Non-trainable params
7.4 M     Total params
29.534    Total estimated model params size (MB)
9         Modules in train mode
0         Modules in eval mode
Epoch 0: 100%|█████████████████████████████████████████████████████████████████████████████████| 100/100 [00:07<00:00, 12.67it/s, v_num=6n7j]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'train_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
Testing DataLoader 0: 100%|██████████████████████████████████████████████████████████████████████████████████| 36/36 [00:00<00:00, 76.13it/s]
`Trainer.fit` stopped: `max_epochs=1` reached.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
/felles_gfi/felles_gfi_users/rogui7909/miniforge3/envs/robin/lib/python3.12/site-packages/lightning/pytorch/trainer/connectors/data_connector.py:425: The 'test_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=71` in the `DataLoader` to improve performance.
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       Test metric             DataLoader 0
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
        test/loss           1.9291757345199585
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

loading data ...

